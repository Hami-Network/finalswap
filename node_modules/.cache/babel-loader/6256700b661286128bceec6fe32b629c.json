{"ast":null,"code":"import _slicedToArray from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useWeb3React}from'@web3-react/core';import{Flex,LogoutIcon,useModal,UserMenu as UIKitUserMenu,UserMenuDivider,UserMenuItem}from'@pancakeswap/uikit';import useAuth from'hooks/useAuth';import{useProfile}from'state/profile/hooks';import ConnectWalletButton from'components/ConnectWalletButton';import{FetchStatus,useGetBnbBalance}from'hooks/useTokenBalance';import{useTranslation}from'contexts/Localization';import WalletModal,{WalletView,LOW_BNB_BALANCE}from'./WalletModal';import WalletUserMenuItem from'./WalletUserMenuItem';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UserMenu=function UserMenu(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useAuth=useAuth(),logout=_useAuth.logout;var _useGetBnbBalance=useGetBnbBalance(),balance=_useGetBnbBalance.balance,fetchStatus=_useGetBnbBalance.fetchStatus;var _useProfile=useProfile(),isInitialized=_useProfile.isInitialized,isLoading=_useProfile.isLoading,profile=_useProfile.profile;var _useModal=useModal(/*#__PURE__*/_jsx(WalletModal,{initialView:WalletView.WALLET_INFO})),_useModal2=_slicedToArray(_useModal,1),onPresentWalletModal=_useModal2[0];var _useModal3=useModal(/*#__PURE__*/_jsx(WalletModal,{initialView:WalletView.TRANSACTIONS})),_useModal4=_slicedToArray(_useModal3,1),onPresentTransactionModal=_useModal4[0];var hasProfile=isInitialized&&!!profile;var avatarSrc=profile&&profile.nft?\"/images/nfts/\".concat(profile.nft.images.sm):undefined;var hasLowBnbBalance=fetchStatus===FetchStatus.SUCCESS&&balance.lte(LOW_BNB_BALANCE);if(!account){return/*#__PURE__*/_jsx(ConnectWalletButton,{scale:\"sm\"});}return/*#__PURE__*/_jsxs(UIKitUserMenu,{account:account,avatarSrc:avatarSrc,children:[/*#__PURE__*/_jsx(WalletUserMenuItem,{hasLowBnbBalance:hasLowBnbBalance,onPresentWalletModal:onPresentWalletModal}),/*#__PURE__*/_jsx(UserMenuDivider,{}),/*#__PURE__*/_jsx(UserMenuItem,{as:\"button\",onClick:onPresentTransactionModal,children:t('Transactions')}),/*#__PURE__*/_jsx(UserMenuDivider,{}),/*#__PURE__*/_jsx(UserMenuItem,{as:\"button\",onClick:logout,children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",width:\"100%\",children:[t('Disconnect'),/*#__PURE__*/_jsx(LogoutIcon,{})]})})]});};export default UserMenu;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/components/Menu/UserMenu/index.tsx"],"names":["React","useWeb3React","Flex","LogoutIcon","useModal","UserMenu","UIKitUserMenu","UserMenuDivider","UserMenuItem","useAuth","useProfile","ConnectWalletButton","FetchStatus","useGetBnbBalance","useTranslation","WalletModal","WalletView","LOW_BNB_BALANCE","WalletUserMenuItem","t","account","logout","balance","fetchStatus","isInitialized","isLoading","profile","WALLET_INFO","onPresentWalletModal","TRANSACTIONS","onPresentTransactionModal","hasProfile","avatarSrc","nft","images","sm","undefined","hasLowBnbBalance","SUCCESS","lte"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OACEC,IADF,CAEEC,UAFF,CAGEC,QAHF,CAIEC,QAAQ,GAAIC,CAAAA,aAJd,CAKEC,eALF,CAMEC,YANF,KAOO,oBAPP,CAQA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,gCAAhC,CACA,OAASC,WAAT,CAAsBC,gBAAtB,KAA8C,uBAA9C,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,WAAP,EAAsBC,UAAtB,CAAkCC,eAAlC,KAAyD,eAAzD,CAEA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,C,wFAEA,GAAMb,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,oBAAcS,cAAc,EAA5B,CAAQK,CAAR,iBAAQA,CAAR,CACA,kBAAoBlB,YAAY,EAAhC,CAAQmB,OAAR,eAAQA,OAAR,CACA,aAAmBX,OAAO,EAA1B,CAAQY,MAAR,UAAQA,MAAR,CACA,sBAAiCR,gBAAgB,EAAjD,CAAQS,OAAR,mBAAQA,OAAR,CAAiBC,WAAjB,mBAAiBA,WAAjB,CACA,gBAA8Cb,UAAU,EAAxD,CAAQc,aAAR,aAAQA,aAAR,CAAuBC,SAAvB,aAAuBA,SAAvB,CAAkCC,OAAlC,aAAkCA,OAAlC,CACA,cAA+BtB,QAAQ,cAAC,KAAC,WAAD,EAAa,WAAW,CAAEY,UAAU,CAACW,WAArC,EAAD,CAAvC,wCAAOC,oBAAP,eACA,eAAoCxB,QAAQ,cAAC,KAAC,WAAD,EAAa,WAAW,CAAEY,UAAU,CAACa,YAArC,EAAD,CAA5C,yCAAOC,yBAAP,eACA,GAAMC,CAAAA,UAAU,CAAGP,aAAa,EAAI,CAAC,CAACE,OAAtC,CACA,GAAMM,CAAAA,SAAS,CAAGN,OAAO,EAAIA,OAAO,CAACO,GAAnB,wBAAyCP,OAAO,CAACO,GAAR,CAAYC,MAAZ,CAAmBC,EAA5D,EAAmEC,SAArF,CACA,GAAMC,CAAAA,gBAAgB,CAAGd,WAAW,GAAKX,WAAW,CAAC0B,OAA5B,EAAuChB,OAAO,CAACiB,GAAR,CAAYtB,eAAZ,CAAhE,CAEA,GAAI,CAACG,OAAL,CAAc,CACZ,mBAAO,KAAC,mBAAD,EAAqB,KAAK,CAAC,IAA3B,EAAP,CACD,CAED,mBACE,MAAC,aAAD,EAAe,OAAO,CAAEA,OAAxB,CAAiC,SAAS,CAAEY,SAA5C,wBACE,KAAC,kBAAD,EAAoB,gBAAgB,CAAEK,gBAAtC,CAAwD,oBAAoB,CAAET,oBAA9E,EADF,cAEE,KAAC,eAAD,IAFF,cAGE,KAAC,YAAD,EAAc,EAAE,CAAC,QAAjB,CAA0B,OAAO,CAAEE,yBAAnC,UACGX,CAAC,CAAC,cAAD,CADJ,EAHF,cAQE,KAAC,eAAD,IARF,cASE,KAAC,YAAD,EAAc,EAAE,CAAC,QAAjB,CAA0B,OAAO,CAAEE,MAAnC,uBACE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,CAA0B,cAAc,CAAC,eAAzC,CAAyD,KAAK,CAAC,MAA/D,WACGF,CAAC,CAAC,YAAD,CADJ,cAEE,KAAC,UAAD,IAFF,GADF,EATF,GADF,CAkBD,CAlCD,CAoCA,cAAed,CAAAA,QAAf","sourcesContent":["import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport {\r\n  Flex,\r\n  LogoutIcon,\r\n  useModal,\r\n  UserMenu as UIKitUserMenu,\r\n  UserMenuDivider,\r\n  UserMenuItem,\r\n} from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\r\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\r\nimport WalletUserMenuItem from './WalletUserMenuItem'\r\n\r\nconst UserMenu = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { logout } = useAuth()\r\n  const { balance, fetchStatus } = useGetBnbBalance()\r\n  const { isInitialized, isLoading, profile } = useProfile()\r\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\r\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\r\n  const hasProfile = isInitialized && !!profile\r\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\r\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\r\n\r\n  if (!account) {\r\n    return <ConnectWalletButton scale=\"sm\" />\r\n  }\r\n\r\n  return (\r\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\r\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\r\n      <UserMenuDivider />\r\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\r\n        {t('Transactions')}\r\n      </UserMenuItem>\r\n      {/* <UserMenuDivider />\r\n      <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} /> */}\r\n      <UserMenuDivider />\r\n      <UserMenuItem as=\"button\" onClick={logout}>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\r\n          {t('Disconnect')}\r\n          <LogoutIcon />\r\n        </Flex>\r\n      </UserMenuItem>\r\n    </UIKitUserMenu>\r\n  )\r\n}\r\n\r\nexport default UserMenu\r\n"]},"metadata":{},"sourceType":"module"}