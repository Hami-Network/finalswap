{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import BigNumber from'bignumber.js';import React,{useCallback,useMemo,useState}from'react';import{Button,Modal}from'@pancakeswap/uikit';import{ModalActions,ModalInput}from'components/Modal';import{useTranslation}from'contexts/Localization';import{getFullDisplayBalance}from'utils/formatBalance';import useToast from'hooks/useToast';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var WithdrawModal=function WithdrawModal(_ref){var onConfirm=_ref.onConfirm,onDismiss=_ref.onDismiss,max=_ref.max,_ref$tokenName=_ref.tokenName,tokenName=_ref$tokenName===void 0?'':_ref$tokenName,isTokenOnly=_ref.isTokenOnly,decimals=_ref.decimals;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),val=_useState2[0],setVal=_useState2[1];var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),pendingTx=_useState4[0],setPendingTx=_useState4[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var fullBalance=useMemo(function(){return getFullDisplayBalance(max,decimals);},[max,decimals]);var valNumber=new BigNumber(val);var fullBalanceNumber=new BigNumber(fullBalance);var handleChange=useCallback(function(e){if(e.currentTarget.validity.valid){setVal(e.currentTarget.value.replace(/,/g,'.'));}},[setVal]);var handleSelectMax=useCallback(function(){setVal(fullBalance);},[fullBalance,setVal]);return/*#__PURE__*/_jsxs(Modal,{title:isTokenOnly?t('Unstake tokens'):t('Unstake LP tokens'),onDismiss:onDismiss,children:[/*#__PURE__*/_jsx(ModalInput,{onSelectMax:handleSelectMax,onChange:handleChange,value:val,max:fullBalance,symbol:tokenName,inputTitle:t('Unstake')}),/*#__PURE__*/_jsxs(ModalActions,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:onDismiss,width:\"100%\",disabled:pendingTx,children:t('Cancel')}),/*#__PURE__*/_jsx(Button,{disabled:pendingTx||!valNumber.isFinite()||valNumber.eq(0)||valNumber.gt(fullBalanceNumber),onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);_context.prev=1;_context.next=4;return onConfirm(val);case 4:toastSuccess(t('Unstaked!'),t('Your earnings have also been harvested to your wallet'));onDismiss();_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));console.error(_context.t0);case 12:_context.prev=12;setPendingTx(false);return _context.finish(12);case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,8,12,15]]);})),width:\"100%\",children:pendingTx?t('Confirming'):t('Confirm')})]})]});};export default WithdrawModal;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Farms/components/WithdrawModal.tsx"],"names":["BigNumber","React","useCallback","useMemo","useState","Button","Modal","ModalActions","ModalInput","useTranslation","getFullDisplayBalance","useToast","WithdrawModal","onConfirm","onDismiss","max","tokenName","isTokenOnly","decimals","val","setVal","toastSuccess","toastError","pendingTx","setPendingTx","t","fullBalance","valNumber","fullBalanceNumber","handleChange","e","currentTarget","validity","valid","value","replace","handleSelectMax","isFinite","eq","gt","console","error"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap/uikit'\r\nimport { ModalActions, ModalInput } from 'components/Modal'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  isTokenOnly?: boolean\r\n  decimals?: number\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' , isTokenOnly, decimals}) => {\r\n  const [val, setVal] = useState('')\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals)\r\n  }, [max, decimals])\r\n\r\n  const valNumber = new BigNumber(val)\r\n  const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      if (e.currentTarget.validity.valid) {\r\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\r\n      }\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={isTokenOnly ? t('Unstake tokens') : t('Unstake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={t('Unstake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n           \r\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            try {\r\n              await onConfirm(val)\r\n              toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\r\n              onDismiss()\r\n            } catch (e) {\r\n              toastError(\r\n                t('Error'),\r\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\r\n              )\r\n              console.error(e)\r\n            } finally {\r\n              setPendingTx(false)\r\n            }\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx ? t('Confirming') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n"]},"metadata":{},"sourceType":"module"}