{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import BigNumber from'bignumber.js';import{Button,Flex,Heading}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useAppDispatch}from'state';import{fetchFarmUserDataAsync}from'state/farms';import useToast from'hooks/useToast';import{getBalanceAmount}from'utils/formatBalance';import{BIG_ZERO}from'utils/bigNumber';import{useWeb3React}from'@web3-react/core';import{usePriceCakeBusd}from'state/farms/hooks';import Balance from'components/Balance';import useHarvestFarm from'../../hooks/useHarvestFarm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var HarvestAction=function HarvestAction(_ref){var earnings=_ref.earnings,pid=_ref.pid,isabletoharvest=_ref.isabletoharvest;var canharvest=true;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useHarvestFarm=useHarvestFarm(pid),onReward=_useHarvestFarm.onReward;var cakePrice=usePriceCakeBusd();var dispatch=useAppDispatch();var rawEarningsBalance=account?getBalanceAmount(earnings):BIG_ZERO;var displayBalance=rawEarningsBalance.toFixed(3,BigNumber.ROUND_DOWN);var earningsBusd=rawEarningsBalance?rawEarningsBalance.multipliedBy(cakePrice).toNumber():0;return/*#__PURE__*/_jsxs(Flex,{mb:\"8px\",justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",alignItems:\"flex-start\",children:[/*#__PURE__*/_jsx(Heading,{color:rawEarningsBalance.eq(0)?'textDisabled':'text',children:displayBalance}),earningsBusd>0&&/*#__PURE__*/_jsx(Balance,{fontSize:\"12px\",color:\"textSubtle\",decimals:2,value:earningsBusd,unit:\" USD\",prefix:\"~\"})]}),/*#__PURE__*/_jsx(Button,{disabled:rawEarningsBalance.eq(0)||pendingTx,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(canharvest){_context.next=5;break;}toastError(t('Error'),t('Frequency Harvest. , Cannot Harvest until Lockup ends!'));console.error('Frequency Harvest');_context.next=20;break;case 5:setPendingTx(true);_context.prev=6;_context.next=9;return onReward();case 9:toastSuccess(\"\".concat(t('Harvested'),\"!\"),t('Your %symbol% earnings have been sent to your wallet!',{symbol:'LOKI'}));_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](6);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));console.error(_context.t0);case 16:_context.prev=16;setPendingTx(false);return _context.finish(16);case 19:dispatch(fetchFarmUserDataAsync({account:account,pids:[pid]}));case 20:case\"end\":return _context.stop();}}},_callee,null,[[6,12,16,19]]);})),children:t('Harvest')})]});};export default HarvestAction;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Farms/components/FarmCard/HarvestAction.tsx"],"names":["React","useState","BigNumber","Button","Flex","Heading","useTranslation","useAppDispatch","fetchFarmUserDataAsync","useToast","getBalanceAmount","BIG_ZERO","useWeb3React","usePriceCakeBusd","Balance","useHarvestFarm","HarvestAction","earnings","pid","isabletoharvest","canharvest","account","toastSuccess","toastError","t","pendingTx","setPendingTx","onReward","cakePrice","dispatch","rawEarningsBalance","displayBalance","toFixed","ROUND_DOWN","earningsBusd","multipliedBy","toNumber","eq","console","error","symbol","pids"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport useToast from 'hooks/useToast'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport Balance from 'components/Balance'\r\nimport useHarvestFarm from '../../hooks/useHarvestFarm'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  isabletoharvest?: boolean\r\n}\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, isabletoharvest}) => {\r\n  const canharvest = true\r\n  const { account } = useWeb3React()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { t } = useTranslation()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvestFarm(pid)\r\n  const cakePrice = usePriceCakeBusd()\r\n  const dispatch = useAppDispatch()\r\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\r\n  const displayBalance = rawEarningsBalance.toFixed(3, BigNumber.ROUND_DOWN)\r\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(cakePrice).toNumber() : 0\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\r\n        <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {earningsBusd > 0 && (\r\n          <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\r\n        )}\r\n      </Flex>\r\n      <Button\r\n         \r\n        disabled={rawEarningsBalance.eq(0) || pendingTx}\r\n        onClick={async () => {\r\n          if(!canharvest) {\r\n            toastError(\r\n              t('Error'),\r\n              t('Frequency Harvest. , Cannot Harvest until Lockup ends!'),\r\n            )\r\n            console.error('Frequency Harvest')\r\n          } else {\r\n            setPendingTx(true)\r\n            try {\r\n              await onReward()\r\n              toastSuccess(\r\n                `${t('Harvested')}!`,\r\n                t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'LOKI' }),\r\n              )\r\n            } catch (e) {\r\n              toastError(\r\n                t('Error'),\r\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\r\n              )\r\n              console.error(e)\r\n            } finally {\r\n              setPendingTx(false)\r\n            }\r\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n          }\r\n        }}\r\n      >\r\n        {t('Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n"]},"metadata":{},"sourceType":"module"}