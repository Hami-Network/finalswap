{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97154\\\\swap\\\\hami\\\\LokiswapUI\\\\src\\\\views\\\\Collectibles\\\\components\\\\NftGiveawayModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport confetti from 'canvas-confetti';\nimport { Modal, Text, Button, Flex } from '@pancakeswap/uikit';\nimport history from 'routerHistory';\nimport { delay } from 'lodash';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NftImage = styled.img`\n  border-radius: 50%;\n  height: 128px;\n  margin-bottom: 24px;\n  margin-right: 8px;\n  width: 128px;\n`;\n_c = NftImage;\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3\n    }\n  });\n};\n\nconst NftGiveawayModal = ({\n  onDismiss,\n  nfts\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation(); // This is required because the modal exists outside the Router\n\n  const handleClick = () => {\n    onDismiss();\n    history.push('/collectibles');\n  };\n\n  useEffect(() => {\n    delay(showConfetti, 100);\n  }, []);\n\n  const getImages = () => {\n    return nfts.map(nft => /*#__PURE__*/_jsxDEV(NftImage, {\n      src: `/images/nfts/${nft.images.md}`\n    }, nft.variationId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 30\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('Congratulations!'),\n    onDismiss: onDismiss,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: getImages()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        textAlign: \"center\",\n        bold: true,\n        color: \"secondary\",\n        fontSize: \"24px\",\n        mb: \"24px\",\n        children: nfts.length > 1 ? t('You won multiple collectibles!') : t('You won a collectible!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClick,\n        children: t('Claim now')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NftGiveawayModal, \"yIHkV3cUFHCxFeD16vLIxDL2JDQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = NftGiveawayModal;\nexport default NftGiveawayModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NftImage\");\n$RefreshReg$(_c2, \"NftGiveawayModal\");","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Collectibles/components/NftGiveawayModal.tsx"],"names":["React","useEffect","styled","confetti","Modal","Text","Button","Flex","history","delay","useTranslation","NftImage","img","showConfetti","resize","particleCount","startVelocity","gravity","spread","origin","x","y","NftGiveawayModal","onDismiss","nfts","t","handleClick","push","getImages","map","nft","images","md","variationId","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,IAA9B,QAA8D,oBAA9D;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAGA,MAAMC,QAAQ,GAAGT,MAAM,CAACU,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,Q;;AAQN,MAAME,YAAY,GAAG,MAAM;AACzBV,EAAAA,QAAQ,CAAC;AACPW,IAAAA,MAAM,EAAE,IADD;AAEPC,IAAAA,aAAa,EAAE,GAFR;AAGPC,IAAAA,aAAa,EAAE,EAHR;AAIPC,IAAAA,OAAO,EAAE,GAJF;AAKPC,IAAAA,MAAM,EAAE,GALD;AAMPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,CAAC,EAAE,GADG;AAENC,MAAAA,CAAC,EAAE;AAFG;AAND,GAAD,CAAR;AAWD,CAZD;;AAkBA,MAAMC,gBAAiD,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAyB;AAAA;;AACjF,QAAM;AAAEC,IAAAA;AAAF,MAAQf,cAAc,EAA5B,CADiF,CAGjF;;AACA,QAAMgB,WAAW,GAAG,MAAM;AACxBH,IAAAA,SAAS;AACTf,IAAAA,OAAO,CAACmB,IAAR,CAAa,eAAb;AACD,GAHD;;AAKA1B,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAACI,YAAD,EAAe,GAAf,CAAL;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMe,SAAS,GAAG,MAAM;AACtB,WAAOJ,IAAI,CAACK,GAAL,CAAUC,GAAD,iBAAS,QAAC,QAAD;AAAgC,MAAA,GAAG,EAAG,gBAAeA,GAAG,CAACC,MAAJ,CAAWC,EAAG;AAAnE,OAAeF,GAAG,CAACG,WAAnB;AAAA;AAAA;AAAA;AAAA,YAAlB,CAAP;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAER,CAAC,CAAC,kBAAD,CAAf;AAAqC,IAAA,SAAS,EAAEF,SAAhD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,aAAa,EAAC,QAApB;AAA6B,MAAA,UAAU,EAAC,QAAxC;AAAiD,MAAA,cAAc,EAAC,QAAhE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAsB,QAAA,UAAU,EAAC,QAAjC;AAA0C,QAAA,cAAc,EAAC,QAAzD;AAAA,kBACGK,SAAS;AADZ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAyB,QAAA,IAAI,MAA7B;AAA8B,QAAA,KAAK,EAAC,WAApC;AAAgD,QAAA,QAAQ,EAAC,MAAzD;AAAgE,QAAA,EAAE,EAAC,MAAnE;AAAA,kBACGJ,IAAI,CAACU,MAAL,GAAc,CAAd,GAAkBT,CAAC,CAAC,gCAAD,CAAnB,GAAwDA,CAAC,CAAC,wBAAD;AAD5D;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEC,WAAjB;AAAA,kBAA+BD,CAAC,CAAC,WAAD;AAAhC;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA9BD;;GAAMH,gB;UACUZ,c;;;MADVY,gB;AAgCN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport confetti from 'canvas-confetti'\r\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport history from 'routerHistory'\r\nimport { delay } from 'lodash'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Nft } from 'config/constants/types'\r\n\r\nconst NftImage = styled.img`\r\n  border-radius: 50%;\r\n  height: 128px;\r\n  margin-bottom: 24px;\r\n  margin-right: 8px;\r\n  width: 128px;\r\n`\r\n\r\nconst showConfetti = () => {\r\n  confetti({\r\n    resize: true,\r\n    particleCount: 200,\r\n    startVelocity: 30,\r\n    gravity: 0.5,\r\n    spread: 350,\r\n    origin: {\r\n      x: 0.5,\r\n      y: 0.3,\r\n    },\r\n  })\r\n}\r\n\r\ninterface NftGiveawayModalProps extends InjectedModalProps {\r\n  nfts: Nft[]\r\n}\r\n\r\nconst NftGiveawayModal: React.FC<NftGiveawayModalProps> = ({ onDismiss, nfts }) => {\r\n  const { t } = useTranslation()\r\n\r\n  // This is required because the modal exists outside the Router\r\n  const handleClick = () => {\r\n    onDismiss()\r\n    history.push('/collectibles')\r\n  }\r\n\r\n  useEffect(() => {\r\n    delay(showConfetti, 100)\r\n  }, [])\r\n\r\n  const getImages = () => {\r\n    return nfts.map((nft) => <NftImage key={nft.variationId} src={`/images/nfts/${nft.images.md}`} />)\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\r\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        <Flex flexWrap=\"wrap\" alignItems=\"center\" justifyContent=\"center\">\r\n          {getImages()}\r\n        </Flex>\r\n        <Text textAlign=\"center\" bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\r\n          {nfts.length > 1 ? t('You won multiple collectibles!') : t('You won a collectible!')}\r\n        </Text>\r\n        <Button onClick={handleClick}>{t('Claim now')}</Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default NftGiveawayModal\r\n"]},"metadata":{},"sourceType":"module"}