{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97154\\\\swap\\\\hami\\\\LokiswapUI\\\\src\\\\views\\\\Farms\\\\components\\\\FarmCard\\\\FarmCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Card, Flex, Text, Skeleton } from '@pancakeswap/uikit';\nimport { getBscScanLink } from 'utils';\nimport { useTranslation } from 'contexts/Localization';\nimport ExpandableSectionButton from 'components/ExpandableSectionButton';\nimport { BASE_ADD_LIQUIDITY_URL, BASE_URL } from 'config';\nimport { getAddress } from 'utils/addressHelpers';\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts';\nimport DetailsSection from './DetailsSection';\nimport CardHeading from './CardHeading';\nimport CardActionsContainer from './CardActionsContainer';\nimport ApyButton from './ApyButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCard = styled(Card)`\n  align-self: baseline;\n  > div {\n    background: #221779;\n  }\n`;\n_c = StyledCard;\nconst FarmCardInnerContainer = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n`;\n_c2 = FarmCardInnerContainer;\nconst ExpandingWrapper = styled.div`\n  padding: 24px;\n  border-top: 2px solid ${({\n  theme\n}) => theme.colors.cardBorder};\n  overflow: hidden;\n`;\n_c3 = ExpandingWrapper;\n\nconst FarmCard = ({\n  farm,\n  displayApr,\n  removed,\n  cakePrice,\n  account\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [showExpandableSection, setShowExpandableSection] = useState(false);\n  const totalValueFormatted = farm.liquidity && farm.liquidity.gt(0) ? `$${farm.liquidity.toNumber().toLocaleString(undefined, {\n    maximumFractionDigits: 0\n  })}` : '';\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '');\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('LOKI');\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address\n  });\n  const addLiquidityUrl = farm.isTokenOnly ? `${BASE_URL}/swap?outputCurrency=${getAddress(farm.token.address)}` : `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`;\n  const lpAddress = farm.isTokenOnly ? getAddress(farm.token.address) : getAddress(farm.lpAddresses);\n  const isPromotedFarm = farm.token.symbol === 'LOKI';\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    isActive: isPromotedFarm,\n    children: [/*#__PURE__*/_jsxDEV(FarmCardInnerContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeading, {\n        lpLabel: lpLabel,\n        multiplier: farm.multiplier,\n        isCommunityFarm: farm.isCommunity,\n        token: farm.token,\n        quoteToken: farm.quoteToken,\n        isTokenOnly: farm.isTokenOnly,\n        depositfee: farm.depositfee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), !removed && /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [t('APR'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: farm.apr ? /*#__PURE__*/_jsxDEV(ApyButton, {\n            variant: \"text-and-button\",\n            pid: farm.pid,\n            lpSymbol: farm.isTokenOnly ? farm.token.symbol : farm.lpSymbol,\n            multiplier: farm.multiplier,\n            lpLabel: lpLabel,\n            addLiquidityUrl: addLiquidityUrl,\n            cakePrice: cakePrice,\n            apr: farm.apr,\n            displayApr: displayApr,\n            isTokenOnly: farm.isTokenOnly\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n            height: 24,\n            width: 80\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [t('Earn'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: earnLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [t('Deposit Fee'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), farm.depositfee ? /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: farm.depositfee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 24,\n          width: 80\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActionsContainer, {\n        farm: farm,\n        lpLabel: lpLabel,\n        account: account,\n        cakePrice: cakePrice,\n        addLiquidityUrl: addLiquidityUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpandingWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ExpandableSectionButton, {\n        onClick: () => setShowExpandableSection(!showExpandableSection),\n        expanded: showExpandableSection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), showExpandableSection && /*#__PURE__*/_jsxDEV(DetailsSection, {\n        removed: removed,\n        bscScanAddress: getBscScanLink(lpAddress, 'address'),\n        infoAddress: farm.isTokenOnly ? `https://pancakeswap.info/tokens/${lpAddress}` : `https://pancakeswap.info/pool/${lpAddress}`,\n        totalValueFormatted: totalValueFormatted,\n        lpLabel: lpLabel,\n        addLiquidityUrl: addLiquidityUrl,\n        isTokenOnly: farm.isTokenOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmCard, \"jzyAoNoVq4xL0xgWre/6gUb8dXA=\", false, function () {\n  return [useTranslation];\n});\n\n_c4 = FarmCard;\nexport default FarmCard;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"FarmCardInnerContainer\");\n$RefreshReg$(_c3, \"ExpandingWrapper\");\n$RefreshReg$(_c4, \"FarmCard\");","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Farms/components/FarmCard/FarmCard.tsx"],"names":["React","useState","styled","Card","Flex","Text","Skeleton","getBscScanLink","useTranslation","ExpandableSectionButton","BASE_ADD_LIQUIDITY_URL","BASE_URL","getAddress","getLiquidityUrlPathParts","DetailsSection","CardHeading","CardActionsContainer","ApyButton","StyledCard","FarmCardInnerContainer","ExpandingWrapper","div","theme","colors","cardBorder","FarmCard","farm","displayApr","removed","cakePrice","account","t","showExpandableSection","setShowExpandableSection","totalValueFormatted","liquidity","gt","toNumber","toLocaleString","undefined","maximumFractionDigits","lpLabel","lpSymbol","toUpperCase","replace","earnLabel","dual","liquidityUrlPathParts","quoteTokenAddress","quoteToken","address","tokenAddress","token","addLiquidityUrl","isTokenOnly","lpAddress","lpAddresses","isPromotedFarm","symbol","multiplier","isCommunity","depositfee","display","alignItems","apr","pid"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Card, Flex, Text, Skeleton } from '@pancakeswap/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { BASE_ADD_LIQUIDITY_URL, BASE_URL } from 'config'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apr?: number\r\n  lpRewardsApr?: number\r\n  liquidity?: BigNumber\r\n}\r\n\r\nconst StyledCard = styled(Card)`\r\n  align-self: baseline;\r\n  > div {\r\n    background: #221779;\r\n  }\r\n`\r\n\r\nconst FarmCardInnerContainer = styled(Flex)`\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div`\r\n  padding: 24px;\r\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  displayApr: string\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\r\n  const { t } = useTranslation()\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  const totalValueFormatted =\r\n    farm.liquidity && farm.liquidity.gt(0)\r\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n      : ''\r\n\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('LOKI')\r\n\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: farm.quoteToken.address,\r\n    tokenAddress: farm.token.address,\r\n  })\r\n  const addLiquidityUrl = farm.isTokenOnly ? `${BASE_URL}/swap?outputCurrency=${getAddress(farm.token.address)}` : `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n  const lpAddress = farm.isTokenOnly ? getAddress(farm.token.address) : getAddress(farm.lpAddresses)\r\n  const isPromotedFarm = farm.token.symbol === 'LOKI'\r\n\r\n  return (\r\n    <StyledCard isActive={isPromotedFarm}>\r\n      <FarmCardInnerContainer>\r\n        <CardHeading\r\n          lpLabel={lpLabel}\r\n          multiplier={farm.multiplier}\r\n          isCommunityFarm={farm.isCommunity}\r\n          token={farm.token}\r\n          quoteToken={farm.quoteToken}\r\n          isTokenOnly={farm.isTokenOnly}\r\n          depositfee={farm.depositfee}\r\n        />\r\n        {!removed && (\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Text>{t('APR')}:</Text>\r\n            <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n              {farm.apr ? (\r\n                <ApyButton\r\n                  variant=\"text-and-button\"\r\n                  pid={farm.pid}\r\n                  lpSymbol={farm.isTokenOnly ? farm.token.symbol : farm.lpSymbol}\r\n                  multiplier={farm.multiplier}\r\n                  lpLabel={lpLabel}\r\n                  addLiquidityUrl={addLiquidityUrl}\r\n                  cakePrice={cakePrice}\r\n                  apr={farm.apr}\r\n                  displayApr={displayApr}\r\n                  isTokenOnly={farm.isTokenOnly}\r\n                />\r\n              ) : (\r\n                <Skeleton height={24} width={80} />\r\n              )}\r\n            </Text>\r\n          </Flex>\r\n        )}\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{t('Earn')}:</Text>\r\n          <Text bold>{earnLabel}</Text>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{t('Deposit Fee')}:</Text>\r\n          {farm.depositfee ? (\r\n              <Text bold>{farm.depositfee}</Text>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n          )}\r\n        </Flex>\r\n        <CardActionsContainer\r\n          farm={farm}\r\n          lpLabel={lpLabel}\r\n          account={account}\r\n          cakePrice={cakePrice}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </FarmCardInnerContainer>\r\n\r\n      <ExpandingWrapper>\r\n        <ExpandableSectionButton\r\n          onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n          expanded={showExpandableSection}\r\n        />\r\n        {showExpandableSection && (\r\n          <DetailsSection\r\n            removed={removed}\r\n            bscScanAddress={getBscScanLink(lpAddress, 'address')}\r\n            infoAddress={ farm.isTokenOnly ? `https://pancakeswap.info/tokens/${lpAddress}` : `https://pancakeswap.info/pool/${lpAddress}`}\r\n            totalValueFormatted={totalValueFormatted}\r\n            lpLabel={lpLabel}\r\n            addLiquidityUrl={addLiquidityUrl}\r\n            isTokenOnly={farm.isTokenOnly}\r\n          />\r\n        )}\r\n      </ExpandingWrapper>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n"]},"metadata":{},"sourceType":"module"}