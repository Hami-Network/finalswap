{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import BigNumber from'bignumber.js';import{DEFAULT_GAS_LIMIT,DEFAULT_TOKEN_DECIMAL}from'config';import getGasPrice from'utils/getGasPrice';import Cookies from'universal-cookie';import rot13 from'utils/encode';import{isAddress}from'utils';import{BIG_TEN}from'utils/bigNumber';var options={gasLimit:DEFAULT_GAS_LIMIT};var cookies=new Cookies();export var stakeFarm=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(masterChefContract,pid,amount,decimals){var gasPrice,value,ref,tx,receipt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:gasPrice=getGasPrice();value=decimals?new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString():new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString();// if (pid === 0) {\n//   const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\n//   const receipt = await tx.wait()\n//   return receipt.status\n// }\nif(cookies.get('ref')){if(isAddress(rot13(cookies.get('ref')))){ref=rot13(cookies.get('ref'));}}else{ref=\"0x0000000000000000000000000000000000000000\";}_context.next=5;return masterChefContract.deposit(pid,value,ref,_objectSpread(_objectSpread({},options),{},{gasPrice:gasPrice}));case 5:tx=_context.sent;_context.next=8;return tx.wait();case 8:receipt=_context.sent;return _context.abrupt(\"return\",receipt.status);case 10:case\"end\":return _context.stop();}}},_callee);}));return function stakeFarm(_x,_x2,_x3,_x4){return _ref.apply(this,arguments);};}();export var unstakeFarm=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(masterChefContract,pid,amount,decimals){var gasPrice,value,tx,receipt;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:gasPrice=getGasPrice();value=decimals?new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString():new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString();// if (pid === 0) {\n//   const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\n//   const receipt = await tx.wait()\n//   return receipt.status\n// }\n_context2.next=4;return masterChefContract.withdraw(pid,value,_objectSpread(_objectSpread({},options),{},{gasPrice:gasPrice}));case 4:tx=_context2.sent;_context2.next=7;return tx.wait();case 7:receipt=_context2.sent;return _context2.abrupt(\"return\",receipt.status);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function unstakeFarm(_x5,_x6,_x7,_x8){return _ref2.apply(this,arguments);};}();export var harvestFarm=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(masterChefContract,pid){var ref,gasPrice,tx,receipt;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(cookies.get('ref')){if(isAddress(rot13(cookies.get('ref')))){ref=rot13(cookies.get('ref'));}}else{ref=\"0x0000000000000000000000000000000000000000\";}gasPrice=getGasPrice();// if (pid === 0) {\n//   const tx = await await masterChefContract.leaveStaking('0', { ...options, gasPrice })\n//   const receipt = await tx.wait()\n//   return receipt.status\n// }\n_context3.next=4;return masterChefContract.deposit(pid,'0',ref,_objectSpread(_objectSpread({},options),{},{gasPrice:gasPrice}));case 4:tx=_context3.sent;_context3.next=7;return tx.wait();case 7:receipt=_context3.sent;return _context3.abrupt(\"return\",receipt.status);case 9:case\"end\":return _context3.stop();}}},_callee3);}));return function harvestFarm(_x9,_x10){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/utils/calls/farms.ts"],"names":["BigNumber","DEFAULT_GAS_LIMIT","DEFAULT_TOKEN_DECIMAL","getGasPrice","Cookies","rot13","isAddress","BIG_TEN","options","gasLimit","cookies","stakeFarm","masterChefContract","pid","amount","decimals","gasPrice","value","times","pow","toString","get","ref","deposit","tx","wait","receipt","status","unstakeFarm","withdraw","harvestFarm"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport getGasPrice from 'utils/getGasPrice'\r\nimport { ethers } from 'ethers'\r\nimport Cookies from 'universal-cookie';\r\nimport rot13 from 'utils/encode';\r\nimport { isAddress } from 'utils';\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const stakeFarm = async (masterChefContract, pid, amount, decimals?) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = decimals ? new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString() : new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  // if (pid === 0) {\r\n  //   const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\r\n  //   const receipt = await tx.wait()\r\n  //   return receipt.status\r\n  // }\r\n\r\n  let ref\r\n  if(cookies.get('ref')) {\r\n    if(isAddress( rot13(cookies.get('ref')) )) {\r\n      ref = rot13(cookies.get('ref'))\r\n    }\r\n  } else {\r\n    ref = \"0x0000000000000000000000000000000000000000\"\r\n  }\r\n  const tx = await masterChefContract.deposit(pid, value, ref, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const unstakeFarm = async (masterChefContract, pid, amount, decimals?) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = decimals ? new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString() : new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  // if (pid === 0) {\r\n  //   const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\r\n  //   const receipt = await tx.wait()\r\n  //   return receipt.status\r\n  // }\r\n\r\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const harvestFarm = async (masterChefContract, pid) => {\r\n  let ref\r\n  if(cookies.get('ref')) {\r\n    if(isAddress( rot13(cookies.get('ref')) )) {\r\n      ref = rot13(cookies.get('ref'))\r\n    }\r\n  } else {\r\n    ref = \"0x0000000000000000000000000000000000000000\"\r\n  }\r\n  const gasPrice = getGasPrice()\r\n  // if (pid === 0) {\r\n  //   const tx = await await masterChefContract.leaveStaking('0', { ...options, gasPrice })\r\n  //   const receipt = await tx.wait()\r\n  //   return receipt.status\r\n  // }\r\n\r\n  const tx = await masterChefContract.deposit(pid, '0', ref, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n"]},"metadata":{},"sourceType":"module"}