{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useState,useCallback}from'react';import styled from'styled-components';import{Heading,Card,CardBody,Button,Flex}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import useTokenBalance from'hooks/useTokenBalance';import useFarmsWithBalance from'views/Home/hooks/useFarmsWithBalance';import{getCakeAddress}from'utils/addressHelpers';import{useTranslation}from'contexts/Localization';import useToast from'hooks/useToast';import{useMasterchef}from'hooks/useContract';import{harvestFarm}from'utils/calls';import UnlockButton from'components/UnlockButton';import{usePriceCakeBusd}from'state/farms/hooks';import{getBalanceNumber}from'utils/formatBalance';import CakeHarvestBalance from'./CakeHarvestBalance';import CakeWalletBalance from'./CakeWalletBalance';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledFarmStakingCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-image: url('/images/home/2a.png');\\n  background-repeat: no-repeat;\\n  background-position: top right;\\n  min-height: 376px;\\n\"])));var Block=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"])));var CardImage=styled.img(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"])));var Label=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: 14px;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.textSubtle;});var Actions=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  margin-top: 24px;\\n\"])));var FarmedStakingCard=function FarmedStakingCard(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useTranslation=useTranslation(),t=_useTranslation.t;var lokiBalance=useTokenBalance(getCakeAddress());var lokiUserBalance=lokiBalance.balance?getBalanceNumber(lokiBalance.balance):0;var lokiPrice=usePriceCakeBusd().toNumber();var registerToken=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(tokenAddress,tokenSymbol,tokenDecimals){var tokenAdded;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return window.ethereum.request({method:'wallet_watchAsset',params:{type:'ERC20',options:{address:tokenAddress,symbol:tokenSymbol,decimals:tokenDecimals,image:\"https://lokiswap.com/images/token.png\"}}});case 2:tokenAdded=_context.sent;return _context.abrupt(\"return\",tokenAdded);case 4:case\"end\":return _context.stop();}}},_callee);}));return function registerToken(_x,_x2,_x3){return _ref2.apply(this,arguments);};}();var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var _useFarmsWithBalance=useFarmsWithBalance(),farmsWithStakedBalance=_useFarmsWithBalance.farmsWithStakedBalance,farmEarningsSum=_useFarmsWithBalance.earningsSum;var numFarmsToCollect=farmsWithStakedBalance.filter(function(value){return value.pid!==0;}).length;var masterChefContract=useMasterchef();var harvestAllFarms=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _iterator,_step,farmWithBalance;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setPendingTx(true);// eslint-disable-next-line no-restricted-syntax\n_iterator=_createForOfIteratorHelper(farmsWithStakedBalance);_context2.prev=2;_iterator.s();case 4:if((_step=_iterator.n()).done){_context2.next=17;break;}farmWithBalance=_step.value;_context2.prev=6;_context2.next=9;return harvestFarm(masterChefContract,farmWithBalance.pid);case 9:toastSuccess(\"\".concat(t('Harvested'),\"!\"),t('Your %symbol% earnings have been sent to your wallet!',{symbol:'CAKE'}));_context2.next=15;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](6);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));case 15:_context2.next=4;break;case 17:_context2.next=22;break;case 19:_context2.prev=19;_context2.t1=_context2[\"catch\"](2);_iterator.e(_context2.t1);case 22:_context2.prev=22;_iterator.f();return _context2.finish(22);case 25:setPendingTx(false);case 26:case\"end\":return _context2.stop();}}},_callee2,null,[[2,19,22,25],[6,12]]);})),[farmsWithStakedBalance,masterChefContract,toastSuccess,toastError,t]);return/*#__PURE__*/_jsx(StyledFarmStakingCard,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{scale:\"xl\",mb:\"24px\",children:t('Farms & Staking')}),/*#__PURE__*/_jsxs(Flex,{style:{verticalAlign:'center'},children:[/*#__PURE__*/_jsx(CardImage,{src:\"/logo.png\",alt:\"cake logo\",width:64,height:64}),/*#__PURE__*/_jsxs(Button,{variant:\"text\",style:{height:32,marginTop:20,marginLeft:16,backgroundColor:'#d9d7f2'},onClick:function onClick(){return registerToken('0xb03B19aB28EC881A236448240F31570b1Ff8894a','LOKI',18);},children:[\"+\",/*#__PURE__*/_jsx(\"img\",{src:\"/images/metamask.png\",alt:\"MetaMask Logo\",style:{width:16,height:16,marginLeft:4}})]})]}),/*#__PURE__*/_jsxs(Block,{children:[/*#__PURE__*/_jsx(Label,{children:t('LOKI to Harvest')}),/*#__PURE__*/_jsx(CakeHarvestBalance,{earningsSum:farmEarningsSum}),/*#__PURE__*/_jsxs(Label,{children:[\"~$\",(lokiPrice*farmEarningsSum).toFixed(2)]})]}),/*#__PURE__*/_jsxs(Block,{children:[/*#__PURE__*/_jsx(Label,{children:t('LOKI in Wallet')}),/*#__PURE__*/_jsx(CakeWalletBalance,{lokiBalance:lokiUserBalance}),/*#__PURE__*/_jsxs(Label,{children:[\"~$\",(lokiPrice*lokiUserBalance).toFixed(2)]})]}),/*#__PURE__*/_jsx(Actions,{children:account?/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Button,{mr:\"8px\",id:\"harvest-all\",disabled:numFarmsToCollect<=0||pendingTx,onClick:harvestAllFarms,children:pendingTx?t('Collecting LOKI'):t(\"Harvest all (\".concat(numFarmsToCollect,\")\"))}),/*#__PURE__*/_jsx(Button,{target:\"_blank\",as:\"a\",href:\"/swap\",children:\"Buy LOKI Token\"})]}):/*#__PURE__*/_jsx(UnlockButton,{})})]})});};export default FarmedStakingCard;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Home/components/FarmStakingCard.tsx"],"names":["React","useState","useCallback","styled","Heading","Card","CardBody","Button","Flex","useWeb3React","useTokenBalance","useFarmsWithBalance","getCakeAddress","useTranslation","useToast","useMasterchef","harvestFarm","UnlockButton","usePriceCakeBusd","getBalanceNumber","CakeHarvestBalance","CakeWalletBalance","StyledFarmStakingCard","Block","div","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","account","t","lokiBalance","lokiUserBalance","balance","lokiPrice","toNumber","registerToken","tokenAddress","tokenSymbol","tokenDecimals","window","ethereum","request","method","params","type","options","address","symbol","decimals","image","tokenAdded","toastSuccess","toastError","farmsWithStakedBalance","farmEarningsSum","earningsSum","numFarmsToCollect","filter","value","pid","length","masterChefContract","harvestAllFarms","farmWithBalance","verticalAlign","height","marginTop","marginLeft","backgroundColor","width","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Button, Flex } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useToast from 'hooks/useToast'\r\nimport { useMasterchef } from 'hooks/useContract'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport CakeHarvestBalance from './CakeHarvestBalance'\r\nimport CakeWalletBalance from './CakeWalletBalance'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-image: url('/images/home/2a.png');\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  min-height: 376px;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst CardImage = styled.img`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const {t} = useTranslation()\r\n  const lokiBalance = useTokenBalance(getCakeAddress())\r\n  const lokiUserBalance = lokiBalance.balance ? getBalanceNumber(lokiBalance.balance) : 0\r\n  const lokiPrice = usePriceCakeBusd().toNumber()\r\n\r\n  const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\r\n    const tokenAdded = await window.ethereum.request({\r\n      method: 'wallet_watchAsset',\r\n      params: {\r\n        type: 'ERC20',\r\n        options: {\r\n          address: tokenAddress,\r\n          symbol: tokenSymbol,\r\n          decimals: tokenDecimals,\r\n          image: `https://lokiswap.com/images/token.png`,\r\n        },\r\n      },\r\n    })\r\n  \r\n    return tokenAdded\r\n  }\r\n\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\r\n  const numFarmsToCollect = farmsWithStakedBalance.filter((value) => value.pid !== 0).length\r\n  const masterChefContract = useMasterchef()\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const farmWithBalance of farmsWithStakedBalance) {\r\n      try {\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\r\n        )\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    }\r\n    setPendingTx(false)\r\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\r\n\r\n  \r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading scale=\"xl\" mb=\"24px\">\r\n          {t('Farms & Staking')}\r\n        </Heading>\r\n        <Flex style={{verticalAlign: 'center'}}>\r\n        <CardImage src=\"/logo.png\" alt=\"cake logo\" width={64} height={64} />\r\n          <Button \r\n            variant=\"text\"\r\n            style={{height: 32, marginTop: 20, marginLeft: 16, backgroundColor: '#d9d7f2'}}\r\n            onClick={() => registerToken('0xb03B19aB28EC881A236448240F31570b1Ff8894a', 'LOKI', 18)}>\r\n            +\r\n            <img src='/images/metamask.png' alt='MetaMask Logo' style={{width: 16, height: 16, marginLeft: 4}}/>\r\n          </Button>\r\n        </Flex>\r\n        <Block>\r\n          <Label>{t('LOKI to Harvest')}</Label>\r\n          <CakeHarvestBalance earningsSum={farmEarningsSum}/>\r\n          <Label>~${(lokiPrice * farmEarningsSum).toFixed(2)}</Label>\r\n        </Block>\r\n        <Block>\r\n          <Label>{t('LOKI in Wallet')}</Label>\r\n          <CakeWalletBalance lokiBalance={lokiUserBalance} />\r\n          <Label>~${(lokiPrice * lokiUserBalance).toFixed(2)}</Label>\r\n        </Block>\r\n        <Actions>\r\n          {account ? (\r\n          <Flex >\r\n            \r\n            <Button\r\n              mr=\"8px\"\r\n              id=\"harvest-all\"\r\n              disabled={numFarmsToCollect <= 0 || pendingTx}\r\n              onClick={harvestAllFarms}\r\n            >\r\n              {pendingTx ? t('Collecting LOKI') : t(`Harvest all (${numFarmsToCollect})`)}\r\n            </Button>\r\n            <Button \r\n            target=\"_blank\"\r\n            as='a' href=\"/swap\">\r\n              Buy LOKI Token\r\n              </Button>\r\n            </Flex>\r\n          ) : (\r\n            <UnlockButton />\r\n          )}\r\n        </Actions>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n"]},"metadata":{},"sourceType":"module"}