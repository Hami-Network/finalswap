{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97154\\\\swap\\\\hami\\\\LokiswapUI\\\\src\\\\views\\\\Home\\\\components\\\\FarmStakingCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Heading, Card, CardBody, Button, Flex } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport { useTranslation } from 'contexts/Localization';\nimport useToast from 'hooks/useToast';\nimport { useMasterchef } from 'hooks/useContract';\nimport { harvestFarm } from 'utils/calls';\nimport UnlockButton from 'components/UnlockButton';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport CakeHarvestBalance from './CakeHarvestBalance';\nimport CakeWalletBalance from './CakeWalletBalance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledFarmStakingCard = styled(Card)`\n  background-image: url('/images/home/2a.png');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`;\n_c = StyledFarmStakingCard;\nconst Block = styled.div`\n  margin-bottom: 16px;\n`;\n_c2 = Block;\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`;\n_c3 = CardImage;\nconst Label = styled.div`\n  color: ${({\n  theme\n}) => theme.colors.textSubtle};\n  font-size: 14px;\n`;\n_c4 = Label;\nconst Actions = styled.div`\n  margin-top: 24px;\n`;\n_c5 = Actions;\n\nconst FarmedStakingCard = () => {\n  _s();\n\n  const [pendingTx, setPendingTx] = useState(false);\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const lokiBalance = useTokenBalance(getCakeAddress());\n  const lokiUserBalance = lokiBalance.balance ? getBalanceNumber(lokiBalance.balance) : 0;\n  const lokiPrice = usePriceCakeBusd().toNumber();\n\n  const registerToken = async (tokenAddress, tokenSymbol, tokenDecimals) => {\n    const tokenAdded = await window.ethereum.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20',\n        options: {\n          address: tokenAddress,\n          symbol: tokenSymbol,\n          decimals: tokenDecimals,\n          image: `https://lokiswap.com/images/token.png`\n        }\n      }\n    });\n    return tokenAdded;\n  };\n\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const {\n    farmsWithStakedBalance,\n    earningsSum: farmEarningsSum\n  } = useFarmsWithBalance();\n  const numFarmsToCollect = farmsWithStakedBalance.filter(value => value.pid !== 0).length;\n  const masterChefContract = useMasterchef();\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true); // eslint-disable-next-line no-restricted-syntax\n\n    for (const farmWithBalance of farmsWithStakedBalance) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvestFarm(masterChefContract, farmWithBalance.pid);\n        toastSuccess(`${t('Harvested')}!`, t('Your %symbol% earnings have been sent to your wallet!', {\n          symbol: 'CAKE'\n        }));\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));\n      }\n    }\n\n    setPendingTx(false);\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t]);\n  return /*#__PURE__*/_jsxDEV(StyledFarmStakingCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        scale: \"xl\",\n        mb: \"24px\",\n        children: t('Farms & Staking')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        style: {\n          verticalAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardImage, {\n          src: \"/logo.png\",\n          alt: \"cake logo\",\n          width: 64,\n          height: 64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          style: {\n            height: 32,\n            marginTop: 20,\n            marginLeft: 16,\n            backgroundColor: '#d9d7f2'\n          },\n          onClick: () => registerToken('0xb03B19aB28EC881A236448240F31570b1Ff8894a', 'LOKI', 18),\n          children: [\"+\", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/metamask.png\",\n            alt: \"MetaMask Logo\",\n            style: {\n              width: 16,\n              height: 16,\n              marginLeft: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: t('LOKI to Harvest')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CakeHarvestBalance, {\n          earningsSum: farmEarningsSum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: [\"~$\", (lokiPrice * farmEarningsSum).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: t('LOKI in Wallet')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CakeWalletBalance, {\n          lokiBalance: lokiUserBalance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: [\"~$\", (lokiPrice * lokiUserBalance).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Actions, {\n        children: account ? /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            mr: \"8px\",\n            id: \"harvest-all\",\n            disabled: numFarmsToCollect <= 0 || pendingTx,\n            onClick: harvestAllFarms,\n            children: pendingTx ? t('Collecting LOKI') : t(`Harvest all (${numFarmsToCollect})`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            target: \"_blank\",\n            as: \"a\",\n            href: \"/swap\",\n            children: \"Buy LOKI Token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(UnlockButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmedStakingCard, \"YQm1eD81VRz7L+Ejpw08CFq7GmU=\", false, function () {\n  return [useWeb3React, useTranslation, useTokenBalance, usePriceCakeBusd, useToast, useFarmsWithBalance, useMasterchef];\n});\n\n_c6 = FarmedStakingCard;\nexport default FarmedStakingCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledFarmStakingCard\");\n$RefreshReg$(_c2, \"Block\");\n$RefreshReg$(_c3, \"CardImage\");\n$RefreshReg$(_c4, \"Label\");\n$RefreshReg$(_c5, \"Actions\");\n$RefreshReg$(_c6, \"FarmedStakingCard\");","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Home/components/FarmStakingCard.tsx"],"names":["React","useState","useCallback","styled","Heading","Card","CardBody","Button","Flex","useWeb3React","useTokenBalance","useFarmsWithBalance","getCakeAddress","useTranslation","useToast","useMasterchef","harvestFarm","UnlockButton","usePriceCakeBusd","getBalanceNumber","CakeHarvestBalance","CakeWalletBalance","StyledFarmStakingCard","Block","div","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","account","t","lokiBalance","lokiUserBalance","balance","lokiPrice","toNumber","registerToken","tokenAddress","tokenSymbol","tokenDecimals","tokenAdded","window","ethereum","request","method","params","type","options","address","symbol","decimals","image","toastSuccess","toastError","farmsWithStakedBalance","earningsSum","farmEarningsSum","numFarmsToCollect","filter","value","pid","length","masterChefContract","harvestAllFarms","farmWithBalance","error","verticalAlign","height","marginTop","marginLeft","backgroundColor","width","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,QAAxB,EAAkCC,MAAlC,EAA0CC,IAA1C,QAAsD,oBAAtD;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,qBAAqB,GAAGnB,MAAM,CAACE,IAAD,CAAO;AAC3C;AACA;AACA;AACA;AACA,CALA;KAAMiB,qB;AAON,MAAMC,KAAK,GAAGpB,MAAM,CAACqB,GAAI;AACzB;AACA,CAFA;MAAMD,K;AAIN,MAAME,SAAS,GAAGtB,MAAM,CAACuB,GAAI;AAC7B;AACA,CAFA;MAAMD,S;AAIN,MAAME,KAAK,GAAGxB,MAAM,CAACqB,GAAI;AACzB,WAAW,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,UAAW;AAClD;AACA,CAHA;MAAMH,K;AAKN,MAAMI,OAAO,GAAG5B,MAAM,CAACqB,GAAI;AAC3B;AACA,CAFA;MAAMO,O;;AAIN,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEkC,IAAAA;AAAF,MAAc1B,YAAY,EAAhC;AACA,QAAM;AAAC2B,IAAAA;AAAD,MAAMvB,cAAc,EAA1B;AACA,QAAMwB,WAAW,GAAG3B,eAAe,CAACE,cAAc,EAAf,CAAnC;AACA,QAAM0B,eAAe,GAAGD,WAAW,CAACE,OAAZ,GAAsBpB,gBAAgB,CAACkB,WAAW,CAACE,OAAb,CAAtC,GAA8D,CAAtF;AACA,QAAMC,SAAS,GAAGtB,gBAAgB,GAAGuB,QAAnB,EAAlB;;AAEA,QAAMC,aAAa,GAAG,OAAOC,YAAP,EAA6BC,WAA7B,EAAkDC,aAAlD,KAA4E;AAChG,UAAMC,UAAU,GAAG,MAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAC/CC,MAAAA,MAAM,EAAE,mBADuC;AAE/CC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,OADA;AAENC,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAEX,YADF;AAEPY,UAAAA,MAAM,EAAEX,WAFD;AAGPY,UAAAA,QAAQ,EAAEX,aAHH;AAIPY,UAAAA,KAAK,EAAG;AAJD;AAFH;AAFuC,KAAxB,CAAzB;AAaA,WAAOX,UAAP;AACD,GAfD;;AAiBA,QAAM;AAAEY,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA+B7C,QAAQ,EAA7C;AACA,QAAM;AAAE8C,IAAAA,sBAAF;AAA0BC,IAAAA,WAAW,EAAEC;AAAvC,MAA2DnD,mBAAmB,EAApF;AACA,QAAMoD,iBAAiB,GAAGH,sBAAsB,CAACI,MAAvB,CAA+BC,KAAD,IAAWA,KAAK,CAACC,GAAN,KAAc,CAAvD,EAA0DC,MAApF;AACA,QAAMC,kBAAkB,GAAGrD,aAAa,EAAxC;AACA,QAAMsD,eAAe,GAAGnE,WAAW,CAAC,YAAY;AAC9CgC,IAAAA,YAAY,CAAC,IAAD,CAAZ,CAD8C,CAE9C;;AACA,SAAK,MAAMoC,eAAX,IAA8BV,sBAA9B,EAAsD;AACpD,UAAI;AACF;AACA,cAAM5C,WAAW,CAACoD,kBAAD,EAAqBE,eAAe,CAACJ,GAArC,CAAjB;AACAR,QAAAA,YAAY,CACT,GAAEtB,CAAC,CAAC,WAAD,CAAc,GADR,EAEVA,CAAC,CAAC,uDAAD,EAA0D;AAAEmB,UAAAA,MAAM,EAAE;AAAV,SAA1D,CAFS,CAAZ;AAID,OAPD,CAOE,OAAOgB,KAAP,EAAc;AACdZ,QAAAA,UAAU,CAACvB,CAAC,CAAC,OAAD,CAAF,EAAaA,CAAC,CAAC,oFAAD,CAAd,CAAV;AACD;AACF;;AACDF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAhBkC,EAgBhC,CAAC0B,sBAAD,EAAyBQ,kBAAzB,EAA6CV,YAA7C,EAA2DC,UAA3D,EAAuEvB,CAAvE,CAhBgC,CAAnC;AAmBA,sBACE,QAAC,qBAAD;AAAA,2BACE,QAAC,QAAD;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,IAAf;AAAoB,QAAA,EAAE,EAAC,MAAvB;AAAA,kBACGA,CAAC,CAAC,iBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACoC,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA,gCACA,QAAC,SAAD;AAAW,UAAA,GAAG,EAAC,WAAf;AAA2B,UAAA,GAAG,EAAC,WAA/B;AAA2C,UAAA,KAAK,EAAE,EAAlD;AAAsD,UAAA,MAAM,EAAE;AAA9D;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAE,EAAT;AAAaC,YAAAA,SAAS,EAAE,EAAxB;AAA4BC,YAAAA,UAAU,EAAE,EAAxC;AAA4CC,YAAAA,eAAe,EAAE;AAA7D,WAFT;AAGE,UAAA,OAAO,EAAE,MAAMlC,aAAa,CAAC,4CAAD,EAA+C,MAA/C,EAAuD,EAAvD,CAH9B;AAAA,uCAKE;AAAK,YAAA,GAAG,EAAC,sBAAT;AAAgC,YAAA,GAAG,EAAC,eAApC;AAAoD,YAAA,KAAK,EAAE;AAACmC,cAAAA,KAAK,EAAE,EAAR;AAAYJ,cAAAA,MAAM,EAAE,EAApB;AAAwBE,cAAAA,UAAU,EAAE;AAApC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAcE,QAAC,KAAD;AAAA,gCACE,QAAC,KAAD;AAAA,oBAAQvC,CAAC,CAAC,iBAAD;AAAT;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,kBAAD;AAAoB,UAAA,WAAW,EAAE0B;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAA,2BAAU,CAACtB,SAAS,GAAGsB,eAAb,EAA8BgB,OAA9B,CAAsC,CAAtC,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAmBE,QAAC,KAAD;AAAA,gCACE,QAAC,KAAD;AAAA,oBAAQ1C,CAAC,CAAC,gBAAD;AAAT;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,iBAAD;AAAmB,UAAA,WAAW,EAAEE;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAA,2BAAU,CAACE,SAAS,GAAGF,eAAb,EAA8BwC,OAA9B,CAAsC,CAAtC,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,eAwBE,QAAC,OAAD;AAAA,kBACG3C,OAAO,gBACR,QAAC,IAAD;AAAA,kCAEE,QAAC,MAAD;AACE,YAAA,EAAE,EAAC,KADL;AAEE,YAAA,EAAE,EAAC,aAFL;AAGE,YAAA,QAAQ,EAAE4B,iBAAiB,IAAI,CAArB,IAA0B9B,SAHtC;AAIE,YAAA,OAAO,EAAEoC,eAJX;AAAA,sBAMGpC,SAAS,GAAGG,CAAC,CAAC,iBAAD,CAAJ,GAA0BA,CAAC,CAAE,gBAAe2B,iBAAkB,GAAnC;AANvC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAUE,QAAC,MAAD;AACA,YAAA,MAAM,EAAC,QADP;AAEA,YAAA,EAAE,EAAC,GAFH;AAEO,YAAA,IAAI,EAAC,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADQ,gBAkBN,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD,CAnGD;;GAAM/B,iB;UAEgBvB,Y,EACRI,c,EACQH,e,EAEFQ,gB,EAmBmBJ,Q,EAC4BH,mB,EAEtCI,a;;;MA5BvBiB,iB;AAqGN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Button, Flex } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useToast from 'hooks/useToast'\r\nimport { useMasterchef } from 'hooks/useContract'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport CakeHarvestBalance from './CakeHarvestBalance'\r\nimport CakeWalletBalance from './CakeWalletBalance'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-image: url('/images/home/2a.png');\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  min-height: 376px;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst CardImage = styled.img`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const {t} = useTranslation()\r\n  const lokiBalance = useTokenBalance(getCakeAddress())\r\n  const lokiUserBalance = lokiBalance.balance ? getBalanceNumber(lokiBalance.balance) : 0\r\n  const lokiPrice = usePriceCakeBusd().toNumber()\r\n\r\n  const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\r\n    const tokenAdded = await window.ethereum.request({\r\n      method: 'wallet_watchAsset',\r\n      params: {\r\n        type: 'ERC20',\r\n        options: {\r\n          address: tokenAddress,\r\n          symbol: tokenSymbol,\r\n          decimals: tokenDecimals,\r\n          image: `https://lokiswap.com/images/token.png`,\r\n        },\r\n      },\r\n    })\r\n  \r\n    return tokenAdded\r\n  }\r\n\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\r\n  const numFarmsToCollect = farmsWithStakedBalance.filter((value) => value.pid !== 0).length\r\n  const masterChefContract = useMasterchef()\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const farmWithBalance of farmsWithStakedBalance) {\r\n      try {\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\r\n        )\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    }\r\n    setPendingTx(false)\r\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\r\n\r\n  \r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading scale=\"xl\" mb=\"24px\">\r\n          {t('Farms & Staking')}\r\n        </Heading>\r\n        <Flex style={{verticalAlign: 'center'}}>\r\n        <CardImage src=\"/logo.png\" alt=\"cake logo\" width={64} height={64} />\r\n          <Button \r\n            variant=\"text\"\r\n            style={{height: 32, marginTop: 20, marginLeft: 16, backgroundColor: '#d9d7f2'}}\r\n            onClick={() => registerToken('0xb03B19aB28EC881A236448240F31570b1Ff8894a', 'LOKI', 18)}>\r\n            +\r\n            <img src='/images/metamask.png' alt='MetaMask Logo' style={{width: 16, height: 16, marginLeft: 4}}/>\r\n          </Button>\r\n        </Flex>\r\n        <Block>\r\n          <Label>{t('LOKI to Harvest')}</Label>\r\n          <CakeHarvestBalance earningsSum={farmEarningsSum}/>\r\n          <Label>~${(lokiPrice * farmEarningsSum).toFixed(2)}</Label>\r\n        </Block>\r\n        <Block>\r\n          <Label>{t('LOKI in Wallet')}</Label>\r\n          <CakeWalletBalance lokiBalance={lokiUserBalance} />\r\n          <Label>~${(lokiPrice * lokiUserBalance).toFixed(2)}</Label>\r\n        </Block>\r\n        <Actions>\r\n          {account ? (\r\n          <Flex >\r\n            \r\n            <Button\r\n              mr=\"8px\"\r\n              id=\"harvest-all\"\r\n              disabled={numFarmsToCollect <= 0 || pendingTx}\r\n              onClick={harvestAllFarms}\r\n            >\r\n              {pendingTx ? t('Collecting LOKI') : t(`Harvest all (${numFarmsToCollect})`)}\r\n            </Button>\r\n            <Button \r\n            target=\"_blank\"\r\n            as='a' href=\"/swap\">\r\n              Buy LOKI Token\r\n              </Button>\r\n            </Flex>\r\n          ) : (\r\n            <UnlockButton />\r\n          )}\r\n        </Actions>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n"]},"metadata":{},"sourceType":"module"}