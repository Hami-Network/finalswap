{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import styled from'styled-components';import{ChevronDownIcon,useMatchBreakpoints}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  justify-content: flex-end;\\n  padding-right: 8px;\\n  color: \",\";\\n\\n  \",\" {\\n    padding-right: 0px;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.primary;},function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.sm;});var ArrowIcon=styled(ChevronDownIcon)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  transform: \",\";\\n  height: 20px;\\n\"])),function(_ref3){var toggled=_ref3.toggled;return toggled?'rotate(180deg)':'rotate(0)';});var Details=function Details(_ref4){var actionPanelToggled=_ref4.actionPanelToggled;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useMatchBreakpoints=useMatchBreakpoints(),isDesktop=_useMatchBreakpoints.isDesktop;return/*#__PURE__*/_jsxs(Container,{children:[!isDesktop&&t('Details'),/*#__PURE__*/_jsx(ArrowIcon,{color:\"text\",toggled:actionPanelToggled})]});};export default Details;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Farms/components/FarmTable/Details.tsx"],"names":["React","styled","ChevronDownIcon","useMatchBreakpoints","useTranslation","Container","div","theme","colors","primary","mediaQueries","sm","ArrowIcon","toggled","Details","actionPanelToggled","t","isDesktop"],"mappings":"+MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,eAAT,CAA0BC,mBAA1B,KAAqD,oBAArD,CACA,OAASC,cAAT,KAA+B,uBAA/B,C,wFAMA,GAAMC,CAAAA,SAAS,CAAGJ,MAAM,CAACK,GAAV,kNAKJ,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAAN,CAAaC,OAA5B,EALI,CAOX,mBAAGF,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACG,YAAN,CAAmBC,EAAlC,EAPW,CAAf,CAYA,GAAMC,CAAAA,SAAS,CAAGX,MAAM,CAACC,eAAD,CAAT,yGACA,mBAAGW,CAAAA,OAAH,OAAGA,OAAH,OAAkBA,CAAAA,OAAO,CAAG,gBAAH,CAAsB,WAA/C,EADA,CAAf,CAKA,GAAMC,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,OAA4B,IAAzBC,CAAAA,kBAAyB,OAAzBA,kBAAyB,CAClE,oBAAcX,cAAc,EAA5B,CAAQY,CAAR,iBAAQA,CAAR,CACA,yBAAsBb,mBAAmB,EAAzC,CAAQc,SAAR,sBAAQA,SAAR,CAEA,mBACE,MAAC,SAAD,YACG,CAACA,SAAD,EAAcD,CAAC,CAAC,SAAD,CADlB,cAEE,KAAC,SAAD,EAAW,KAAK,CAAC,MAAjB,CAAwB,OAAO,CAAED,kBAAjC,EAFF,GADF,CAMD,CAVD,CAYA,cAAeD,CAAAA,OAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface DetailsProps {\r\n  actionPanelToggled: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  padding-right: 8px;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 0px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 20px;\r\n`\r\n\r\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\r\n  const { t } = useTranslation()\r\n  const { isDesktop } = useMatchBreakpoints()\r\n\r\n  return (\r\n    <Container>\r\n      {!isDesktop && t('Details')}\r\n      <ArrowIcon color=\"text\" toggled={actionPanelToggled} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Details\r\n"]},"metadata":{},"sourceType":"module"}