{"ast":null,"code":"import _slicedToArray from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useCallback,useEffect,useState}from'react';import{ETHER,JSBI}from'@pancakeswap/sdk';import{Button,ChevronDownIcon,Text,AddIcon,useModal}from'@pancakeswap/uikit';import styled from'styled-components';import{useTranslation}from'contexts/Localization';import{LightCard}from'../../components/Card';import{AutoColumn,ColumnCenter}from'../../components/Layout/Column';import{CurrencyLogo}from'../../components/Logo';import{MinimalPositionCard}from'../../components/PositionCard';import Row from'../../components/Layout/Row';import CurrencySearchModal from'../../components/SearchModal/CurrencySearchModal';import{PairState,usePair}from'../../hooks/usePairs';import useActiveWeb3React from'../../hooks/useActiveWeb3React';import{usePairAdder}from'../../state/user/hooks';import{useTokenBalance}from'../../state/wallet/hooks';import StyledInternalLink from'../../components/Links';import{currencyId}from'../../utils/currencyId';import Dots from'../../components/Loader/Dots';import{AppHeader,AppBody}from'../../components/App';import Page from'../Page';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Fields;(function(Fields){Fields[Fields[\"TOKEN0\"]=0]=\"TOKEN0\";Fields[Fields[\"TOKEN1\"]=1]=\"TOKEN1\";})(Fields||(Fields={}));var StyledButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  color: \",\";\\n  box-shadow: none;\\n  border-radius: 16px;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.input;},function(_ref2){var theme=_ref2.theme;return theme.colors.text;});export default function PoolFinder(){var _ref3;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(Fields.TOKEN1),_useState2=_slicedToArray(_useState,2),activeField=_useState2[0],setActiveField=_useState2[1];var _useState3=useState(ETHER),_useState4=_slicedToArray(_useState3,2),currency0=_useState4[0],setCurrency0=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),currency1=_useState6[0],setCurrency1=_useState6[1];var _usePair=usePair(currency0!==null&&currency0!==void 0?currency0:undefined,currency1!==null&&currency1!==void 0?currency1:undefined),_usePair2=_slicedToArray(_usePair,2),pairState=_usePair2[0],pair=_usePair2[1];var addPair=usePairAdder();useEffect(function(){if(pair){addPair(pair);}},[pair,addPair]);var validPairNoLiquidity=pairState===PairState.NOT_EXISTS||Boolean(pairState===PairState.EXISTS&&pair&&JSBI.equal(pair.reserve0.raw,JSBI.BigInt(0))&&JSBI.equal(pair.reserve1.raw,JSBI.BigInt(0)));var position=useTokenBalance(account!==null&&account!==void 0?account:undefined,pair===null||pair===void 0?void 0:pair.liquidityToken);var hasPosition=Boolean(position&&JSBI.greaterThan(position.raw,JSBI.BigInt(0)));var handleCurrencySelect=useCallback(function(currency){if(activeField===Fields.TOKEN0){setCurrency0(currency);}else{setCurrency1(currency);}},[activeField]);var prerequisiteMessage=/*#__PURE__*/_jsx(LightCard,{padding:\"45px 10px\",children:/*#__PURE__*/_jsx(Text,{textAlign:\"center\",children:!account?t('Connect to a wallet to find pools'):t('Select a token to find your liquidity.')})});var _useModal=useModal(/*#__PURE__*/_jsx(CurrencySearchModal,{onCurrencySelect:handleCurrencySelect,showCommonBases:true,selectedCurrency:(_ref3=activeField===Fields.TOKEN0?currency1:currency0)!==null&&_ref3!==void 0?_ref3:undefined}),true,true,'selectCurrencyModal'),_useModal2=_slicedToArray(_useModal,1),onPresentCurrencyModal=_useModal2[0];return/*#__PURE__*/_jsx(Page,{children:/*#__PURE__*/_jsxs(AppBody,{children:[/*#__PURE__*/_jsx(AppHeader,{title:t('Import Pool'),subtitle:t('Import an existing pool'),backTo:\"/pool\"}),/*#__PURE__*/_jsxs(AutoColumn,{style:{padding:'1rem'},gap:\"md\",children:[/*#__PURE__*/_jsx(StyledButton,{endIcon:/*#__PURE__*/_jsx(ChevronDownIcon,{}),onClick:function onClick(){onPresentCurrencyModal();setActiveField(Fields.TOKEN0);},children:currency0?/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(CurrencyLogo,{currency:currency0}),/*#__PURE__*/_jsx(Text,{ml:\"8px\",children:currency0.symbol})]}):/*#__PURE__*/_jsx(Text,{ml:\"8px\",children:t('Select a Token')})}),/*#__PURE__*/_jsx(ColumnCenter,{children:/*#__PURE__*/_jsx(AddIcon,{})}),/*#__PURE__*/_jsx(StyledButton,{endIcon:/*#__PURE__*/_jsx(ChevronDownIcon,{}),onClick:function onClick(){onPresentCurrencyModal();setActiveField(Fields.TOKEN1);},children:currency1?/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(CurrencyLogo,{currency:currency1}),/*#__PURE__*/_jsx(Text,{ml:\"8px\",children:currency1.symbol})]}):/*#__PURE__*/_jsx(Text,{as:Row,children:t('Select a Token')})}),hasPosition&&/*#__PURE__*/_jsxs(ColumnCenter,{style:{justifyItems:'center',backgroundColor:'',padding:'12px 0px',borderRadius:'12px'},children:[/*#__PURE__*/_jsx(Text,{textAlign:\"center\",children:t('Pool Found!')}),/*#__PURE__*/_jsx(StyledInternalLink,{to:\"/pool\",children:/*#__PURE__*/_jsx(Text,{textAlign:\"center\",children:t('Manage this pool.')})})]}),currency0&&currency1?pairState===PairState.EXISTS?hasPosition&&pair?/*#__PURE__*/_jsx(MinimalPositionCard,{pair:pair}):/*#__PURE__*/_jsx(LightCard,{padding:\"45px 10px\",children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"sm\",justify:\"center\",children:[/*#__PURE__*/_jsx(Text,{textAlign:\"center\",children:t('You donâ€™t have liquidity in this pool yet.')}),/*#__PURE__*/_jsx(StyledInternalLink,{to:\"/add/\".concat(currencyId(currency0),\"/\").concat(currencyId(currency1)),children:/*#__PURE__*/_jsx(Text,{textAlign:\"center\",children:t('Add Liquidity')})})]})}):validPairNoLiquidity?/*#__PURE__*/_jsx(LightCard,{padding:\"45px 10px\",children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"sm\",justify:\"center\",children:[/*#__PURE__*/_jsx(Text,{textAlign:\"center\",children:t('No pool found.')}),/*#__PURE__*/_jsx(StyledInternalLink,{to:\"/add/\".concat(currencyId(currency0),\"/\").concat(currencyId(currency1)),children:t('Create pool.')})]})}):pairState===PairState.INVALID?/*#__PURE__*/_jsx(LightCard,{padding:\"45px 10px\",children:/*#__PURE__*/_jsx(AutoColumn,{gap:\"sm\",justify:\"center\",children:/*#__PURE__*/_jsx(Text,{textAlign:\"center\",fontWeight:500,children:t('Invalid pair.')})})}):pairState===PairState.LOADING?/*#__PURE__*/_jsx(LightCard,{padding:\"45px 10px\",children:/*#__PURE__*/_jsx(AutoColumn,{gap:\"sm\",justify:\"center\",children:/*#__PURE__*/_jsxs(Text,{textAlign:\"center\",children:[t('Loading'),/*#__PURE__*/_jsx(Dots,{})]})})}):null:prerequisiteMessage]})]})});}","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/PoolFinder/index.tsx"],"names":["React","useCallback","useEffect","useState","ETHER","JSBI","Button","ChevronDownIcon","Text","AddIcon","useModal","styled","useTranslation","LightCard","AutoColumn","ColumnCenter","CurrencyLogo","MinimalPositionCard","Row","CurrencySearchModal","PairState","usePair","useActiveWeb3React","usePairAdder","useTokenBalance","StyledInternalLink","currencyId","Dots","AppHeader","AppBody","Page","Fields","StyledButton","theme","colors","input","text","PoolFinder","account","t","TOKEN1","activeField","setActiveField","currency0","setCurrency0","currency1","setCurrency1","undefined","pairState","pair","addPair","validPairNoLiquidity","NOT_EXISTS","Boolean","EXISTS","equal","reserve0","raw","BigInt","reserve1","position","liquidityToken","hasPosition","greaterThan","handleCurrencySelect","currency","TOKEN0","prerequisiteMessage","onPresentCurrencyModal","padding","symbol","justifyItems","backgroundColor","borderRadius","INVALID","LOADING"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Currency, ETHER, JSBI, TokenAmount } from '@pancakeswap/sdk'\r\nimport { Button, ChevronDownIcon, Text, AddIcon, useModal } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { LightCard } from '../../components/Card'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\r\nimport { CurrencyLogo } from '../../components/Logo'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport Row from '../../components/Layout/Row'\r\nimport CurrencySearchModal from '../../components/SearchModal/CurrencySearchModal'\r\nimport { PairState, usePair } from '../../hooks/usePairs'\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\r\nimport { usePairAdder } from '../../state/user/hooks'\r\nimport { useTokenBalance } from '../../state/wallet/hooks'\r\nimport StyledInternalLink from '../../components/Links'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport Dots from '../../components/Loader/Dots'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport Page from '../Page'\r\n\r\nenum Fields {\r\n  TOKEN0 = 0,\r\n  TOKEN1 = 1,\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  box-shadow: none;\r\n  border-radius: 16px;\r\n`\r\n\r\nexport default function PoolFinder() {\r\n  const { account } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  const [activeField, setActiveField] = useState<number>(Fields.TOKEN1)\r\n  const [currency0, setCurrency0] = useState<Currency | null>(ETHER)\r\n  const [currency1, setCurrency1] = useState<Currency | null>(null)\r\n\r\n  const [pairState, pair] = usePair(currency0 ?? undefined, currency1 ?? undefined)\r\n  const addPair = usePairAdder()\r\n  useEffect(() => {\r\n    if (pair) {\r\n      addPair(pair)\r\n    }\r\n  }, [pair, addPair])\r\n\r\n  const validPairNoLiquidity: boolean =\r\n    pairState === PairState.NOT_EXISTS ||\r\n    Boolean(\r\n      pairState === PairState.EXISTS &&\r\n        pair &&\r\n        JSBI.equal(pair.reserve0.raw, JSBI.BigInt(0)) &&\r\n        JSBI.equal(pair.reserve1.raw, JSBI.BigInt(0)),\r\n    )\r\n\r\n  const position: TokenAmount | undefined = useTokenBalance(account ?? undefined, pair?.liquidityToken)\r\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.raw, JSBI.BigInt(0)))\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      if (activeField === Fields.TOKEN0) {\r\n        setCurrency0(currency)\r\n      } else {\r\n        setCurrency1(currency)\r\n      }\r\n    },\r\n    [activeField],\r\n  )\r\n\r\n  const prerequisiteMessage = (\r\n    <LightCard padding=\"45px 10px\">\r\n      <Text textAlign=\"center\">\r\n        {!account ? t('Connect to a wallet to find pools') : t('Select a token to find your liquidity.')}\r\n      </Text>\r\n    </LightCard>\r\n  )\r\n\r\n  const [onPresentCurrencyModal] = useModal(\r\n    <CurrencySearchModal\r\n      onCurrencySelect={handleCurrencySelect}\r\n      showCommonBases\r\n      selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\r\n    />,\r\n    true,\r\n    true,\r\n    'selectCurrencyModal',\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <AppBody>\r\n        <AppHeader title={t('Import Pool')} subtitle={t('Import an existing pool')} backTo=\"/pool\" />\r\n        <AutoColumn style={{ padding: '1rem' }} gap=\"md\">\r\n          <StyledButton\r\n            endIcon={<ChevronDownIcon />}\r\n            onClick={() => {\r\n              onPresentCurrencyModal()\r\n              setActiveField(Fields.TOKEN0)\r\n            }}\r\n          >\r\n            {currency0 ? (\r\n              <Row>\r\n                <CurrencyLogo currency={currency0} />\r\n                <Text ml=\"8px\">{currency0.symbol}</Text>\r\n              </Row>\r\n            ) : (\r\n              <Text ml=\"8px\">{t('Select a Token')}</Text>\r\n            )}\r\n          </StyledButton>\r\n\r\n          <ColumnCenter>\r\n            <AddIcon />\r\n          </ColumnCenter>\r\n\r\n          <StyledButton\r\n            endIcon={<ChevronDownIcon />}\r\n            onClick={() => {\r\n              onPresentCurrencyModal()\r\n              setActiveField(Fields.TOKEN1)\r\n            }}\r\n          >\r\n            {currency1 ? (\r\n              <Row>\r\n                <CurrencyLogo currency={currency1} />\r\n                <Text ml=\"8px\">{currency1.symbol}</Text>\r\n              </Row>\r\n            ) : (\r\n              <Text as={Row}>{t('Select a Token')}</Text>\r\n            )}\r\n          </StyledButton>\r\n\r\n          {hasPosition && (\r\n            <ColumnCenter\r\n              style={{ justifyItems: 'center', backgroundColor: '', padding: '12px 0px', borderRadius: '12px' }}\r\n            >\r\n              <Text textAlign=\"center\">{t('Pool Found!')}</Text>\r\n              <StyledInternalLink to=\"/pool\">\r\n                <Text textAlign=\"center\">{t('Manage this pool.')}</Text>\r\n              </StyledInternalLink>\r\n            </ColumnCenter>\r\n          )}\r\n\r\n          {currency0 && currency1 ? (\r\n            pairState === PairState.EXISTS ? (\r\n              hasPosition && pair ? (\r\n                <MinimalPositionCard pair={pair} />\r\n              ) : (\r\n                <LightCard padding=\"45px 10px\">\r\n                  <AutoColumn gap=\"sm\" justify=\"center\">\r\n                    <Text textAlign=\"center\">{t('You donâ€™t have liquidity in this pool yet.')}</Text>\r\n                    <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\r\n                      <Text textAlign=\"center\">{t('Add Liquidity')}</Text>\r\n                    </StyledInternalLink>\r\n                  </AutoColumn>\r\n                </LightCard>\r\n              )\r\n            ) : validPairNoLiquidity ? (\r\n              <LightCard padding=\"45px 10px\">\r\n                <AutoColumn gap=\"sm\" justify=\"center\">\r\n                  <Text textAlign=\"center\">{t('No pool found.')}</Text>\r\n                  <StyledInternalLink to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}>\r\n                    {t('Create pool.')}\r\n                  </StyledInternalLink>\r\n                </AutoColumn>\r\n              </LightCard>\r\n            ) : pairState === PairState.INVALID ? (\r\n              <LightCard padding=\"45px 10px\">\r\n                <AutoColumn gap=\"sm\" justify=\"center\">\r\n                  <Text textAlign=\"center\" fontWeight={500}>\r\n                    {t('Invalid pair.')}\r\n                  </Text>\r\n                </AutoColumn>\r\n              </LightCard>\r\n            ) : pairState === PairState.LOADING ? (\r\n              <LightCard padding=\"45px 10px\">\r\n                <AutoColumn gap=\"sm\" justify=\"center\">\r\n                  <Text textAlign=\"center\">\r\n                    {t('Loading')}\r\n                    <Dots />\r\n                  </Text>\r\n                </AutoColumn>\r\n              </LightCard>\r\n            ) : null\r\n          ) : (\r\n            prerequisiteMessage\r\n          )}\r\n        </AutoColumn>\r\n\r\n        {/* <CurrencySearchModal\r\n          isOpen={showSearch}\r\n          onCurrencySelect={handleCurrencySelect}\r\n          onDismiss={handleSearchDismiss}\r\n          showCommonBases\r\n          selectedCurrency={(activeField === Fields.TOKEN0 ? currency1 : currency0) ?? undefined}\r\n        /> */}\r\n      </AppBody>\r\n    </Page>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}