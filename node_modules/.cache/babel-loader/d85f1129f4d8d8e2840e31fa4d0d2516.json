{"ast":null,"code":"import _objectSpread from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _taggedTemplateLiteral from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _excluded=[\"steps\",\"disabled\"];var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React from'react';import styled from'styled-components';import{RowBetween}from'components/Layout/Row';import{AutoColumn}from'components/Layout/Column';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Grouping=styled(RowBetween)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 50%;\\n\"])));var Circle=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  min-width: 20px;\\n  min-height: 20px;\\n  background-color: \",\";\\n  border-radius: 50%;\\n  color: #ffffff;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  line-height: 8px;\\n  font-size: 12px;\\n\"])),function(_ref){var theme=_ref.theme,confirmed=_ref.confirmed,disabled=_ref.disabled;return disabled?theme.colors.backgroundDisabled:confirmed?theme.colors.success:theme.colors.primary;});var CircleRow=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: calc(100% - 20px);\\n  display: flex;\\n  align-items: center;\\n\"])));var Connector=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 2px;\\n  background: linear-gradient(\\n    90deg,\\n    \",\"\\n      0%,\\n    \",\"\\n      80%\\n  );\\n  opacity: 0.6;\\n\"])),function(_ref2){var theme=_ref2.theme,prevConfirmed=_ref2.prevConfirmed,disabled=_ref2.disabled;return disabled?theme.colors.backgroundDisabled:prevConfirmed?theme.colors.success:theme.colors.primary;},function(_ref3){var theme=_ref3.theme,prevConfirmed=_ref3.prevConfirmed,disabled=_ref3.disabled;return disabled?theme.colors.backgroundDisabled:prevConfirmed?theme.colors.primary:theme.colors.backgroundDisabled;});/**\r\n * Based on array of steps, create a step counter of circles.\r\n * A circle can be enabled, disabled, or confirmed. States are derived\r\n * from previous step.\r\n *\r\n * An extra circle is added to represent the ability to swap, add, or remove.\r\n * This step will never be marked as complete (because no 'txn done' state in body ui).\r\n *\r\n * @param steps  array of booleans where true means step is complete\r\n */export default function ProgressCircles(_ref4){var steps=_ref4.steps,_ref4$disabled=_ref4.disabled,disabled=_ref4$disabled===void 0?false:_ref4$disabled,rest=_objectWithoutProperties(_ref4,_excluded);return/*#__PURE__*/_jsx(AutoColumn,_objectSpread(_objectSpread({justify:\"center\"},rest),{},{children:/*#__PURE__*/_jsxs(Grouping,{children:[steps.map(function(step,i){return/*#__PURE__*/ (// eslint-disable-next-line react/no-array-index-key\n_jsxs(CircleRow,{children:[/*#__PURE__*/_jsx(Circle,{confirmed:step,disabled:disabled||!steps[i-1]&&i!==0,children:step?'✓':i+1}),/*#__PURE__*/_jsx(Connector,{prevConfirmed:step,disabled:disabled})]},i));}),/*#__PURE__*/_jsx(Circle,{disabled:disabled||!steps[steps.length-1],children:steps.length+1})]})}));}","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Swap/components/ProgressSteps.tsx"],"names":["React","styled","RowBetween","AutoColumn","Grouping","Circle","div","theme","confirmed","disabled","colors","backgroundDisabled","success","primary","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","rest","map","step","i","length"],"mappings":"2lBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,UAAT,KAA2B,uBAA3B,CACA,OAASC,UAAT,KAA2B,0BAA3B,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAGH,MAAM,CAACC,UAAD,CAAT,kFAAd,CAIA,GAAMG,CAAAA,MAAM,CAAGJ,MAAM,CAACK,GAAV,iSAGU,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,CAAUC,SAAV,MAAUA,SAAV,CAAqBC,QAArB,MAAqBA,QAArB,OAClBA,CAAAA,QAAQ,CAAGF,KAAK,CAACG,MAAN,CAAaC,kBAAhB,CAAqCH,SAAS,CAAGD,KAAK,CAACG,MAAN,CAAaE,OAAhB,CAA0BL,KAAK,CAACG,MAAN,CAAaG,OAD3E,EAHV,CAAZ,CAcA,GAAMC,CAAAA,SAAS,CAAGb,MAAM,CAACK,GAAV,4IAAf,CAMA,GAAMS,CAAAA,SAAS,CAAGd,MAAM,CAACK,GAAV,gNAKT,mBAAGC,CAAAA,KAAH,OAAGA,KAAH,CAAUS,aAAV,OAAUA,aAAV,CAAyBP,QAAzB,OAAyBA,QAAzB,OACEA,CAAAA,QAAQ,CAAGF,KAAK,CAACG,MAAN,CAAaC,kBAAhB,CAAqCK,aAAa,CAAGT,KAAK,CAACG,MAAN,CAAaE,OAAhB,CAA0BL,KAAK,CAACG,MAAN,CAAaG,OADnG,EALS,CAQT,mBAAGN,CAAAA,KAAH,OAAGA,KAAH,CAAUS,aAAV,OAAUA,aAAV,CAAyBP,QAAzB,OAAyBA,QAAzB,OACEA,CAAAA,QAAQ,CACJF,KAAK,CAACG,MAAN,CAAaC,kBADT,CAEJK,aAAa,CACbT,KAAK,CAACG,MAAN,CAAaG,OADA,CAEbN,KAAK,CAACG,MAAN,CAAaC,kBALnB,EARS,CAAf,CAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAe,SAASM,CAAAA,eAAT,OAAqF,IAA1DC,CAAAA,KAA0D,OAA1DA,KAA0D,sBAAnDT,QAAmD,CAAnDA,QAAmD,yBAAxC,KAAwC,gBAA9BU,IAA8B,2CAClG,mBACE,KAAC,UAAD,8BAAY,OAAO,CAAC,QAApB,EAAiCA,IAAjC,4BACE,MAAC,QAAD,YACGD,KAAK,CAACE,GAAN,CAAU,SAACC,IAAD,CAAOC,CAAP,CAAa,CACtB,oBACE;AACA,MAAC,SAAD,yBACE,KAAC,MAAD,EAAQ,SAAS,CAAED,IAAnB,CAAyB,QAAQ,CAAEZ,QAAQ,EAAK,CAACS,KAAK,CAACI,CAAC,CAAG,CAAL,CAAN,EAAiBA,CAAC,GAAK,CAAvE,UACGD,IAAI,CAAG,GAAH,CAASC,CAAC,CAAG,CADpB,EADF,cAIE,KAAC,SAAD,EAAW,aAAa,CAAED,IAA1B,CAAgC,QAAQ,CAAEZ,QAA1C,EAJF,GAAgBa,CAAhB,CAFF,EASD,CAVA,CADH,cAYE,KAAC,MAAD,EAAQ,QAAQ,CAAEb,QAAQ,EAAI,CAACS,KAAK,CAACA,KAAK,CAACK,MAAN,CAAe,CAAhB,CAApC,UAAyDL,KAAK,CAACK,MAAN,CAAe,CAAxE,EAZF,GADF,GADF,CAkBD","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { RowBetween } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\n\r\nconst Grouping = styled(RowBetween)`\r\n  width: 50%;\r\n`\r\n\r\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  background-color: ${({ theme, confirmed, disabled }) =>\r\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\r\n  border-radius: 50%;\r\n  color: #ffffff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  line-height: 8px;\r\n  font-size: 12px;\r\n`\r\n\r\nconst CircleRow = styled.div`\r\n  width: calc(100% - 20px);\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(\r\n    90deg,\r\n    ${({ theme, prevConfirmed, disabled }) =>\r\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\r\n      0%,\r\n    ${({ theme, prevConfirmed, disabled }) =>\r\n        disabled\r\n          ? theme.colors.backgroundDisabled\r\n          : prevConfirmed\r\n          ? theme.colors.primary\r\n          : theme.colors.backgroundDisabled}\r\n      80%\r\n  );\r\n  opacity: 0.6;\r\n`\r\n\r\ninterface ProgressCirclesProps {\r\n  steps: boolean[]\r\n  disabled?: boolean\r\n}\r\n\r\n/**\r\n * Based on array of steps, create a step counter of circles.\r\n * A circle can be enabled, disabled, or confirmed. States are derived\r\n * from previous step.\r\n *\r\n * An extra circle is added to represent the ability to swap, add, or remove.\r\n * This step will never be marked as complete (because no 'txn done' state in body ui).\r\n *\r\n * @param steps  array of booleans where true means step is complete\r\n */\r\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\r\n  return (\r\n    <AutoColumn justify=\"center\" {...rest}>\r\n      <Grouping>\r\n        {steps.map((step, i) => {\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <CircleRow key={i}>\r\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\r\n                {step ? '✓' : i + 1}\r\n              </Circle>\r\n              <Connector prevConfirmed={step} disabled={disabled} />\r\n            </CircleRow>\r\n          )\r\n        })}\r\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\r\n      </Grouping>\r\n    </AutoColumn>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}