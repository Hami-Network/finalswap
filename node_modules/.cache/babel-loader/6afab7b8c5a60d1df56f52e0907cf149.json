{"ast":null,"code":"import _objectSpread from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import React,{useEffect,useCallback,useState,useMemo,useRef}from'react';import{Route,useRouteMatch,useLocation}from'react-router-dom';import BigNumber from'bignumber.js';import{useWeb3React}from'@web3-react/core';import{Heading,Toggle,Text,Flex}from'@pancakeswap/uikit';import{ChainId}from'@pancakeswap/sdk';import styled from'styled-components';import FlexLayout from'components/Layout/Flex';import Page from'components/Layout/Page';import{useFarms,usePollFarmsData,usePriceCakeBusd}from'state/farms/hooks';import usePersistState from'hooks/usePersistState';import{useTranslation}from'contexts/Localization';import{getBalanceNumber}from'utils/formatBalance';import{getFarmApr}from'utils/apr';import{orderBy}from'lodash';import isArchivedPid from'utils/farmHelpers';import{latinise}from'utils/latinise';import{useUserFarmStakedOnly}from'state/user/hooks';import PageHeader from'components/PageHeader';import SearchInput from'components/SearchInput';import Select from'components/Select/Select';import Loading from'components/Loading';// import { getCountdownparams } from 'state/farms/fetchPublicFarmData'\nimport FarmCard from'./components/FarmCard/FarmCard';import Table from'./components/FarmTable/FarmTable';import FarmTabButtons from'./components/FarmTabButtons';import ToggleView from'./components/ToggleView/ToggleView';import{DesktopColumnSchema,ViewMode}from'./components/types';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ControlContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  align-items: center;\\n  position: relative;\\n\\n  justify-content: space-between;\\n  flex-direction: column;\\n  margin-bottom: 32px;\\n\\n  \",\" {\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    padding: 16px 32px;\\n    margin-bottom: 0;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.sm;});var ToggleWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  margin-left: 10px;\\n\\n  \",\" {\\n    margin-left: 8px;\\n  }\\n\"])),Text);var LabelWrapper=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  > \",\" {\\n    font-size: 12px;\\n  }\\n\"])),Text);var FilterContainer=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n  padding: 8px 0px;\\n\\n  \",\" {\\n    width: auto;\\n    padding: 0;\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.sm;});var ViewControls=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n\\n  > div {\\n    padding: 8px 0px;\\n  }\\n\\n  \",\" {\\n    justify-content: flex-start;\\n    width: auto;\\n\\n    > div {\\n      padding: 0;\\n    }\\n  }\\n\"])),function(_ref3){var theme=_ref3.theme;return theme.mediaQueries.sm;});var StyledPageHeader=styled(PageHeader)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  > div {\\n    padding-bottom: 5px;\\n  }\\n\"])));var NUMBER_OF_FARMS_VISIBLE=12;var getDisplayApr=function getDisplayApr(cakeRewardsApr,lpRewardsApr){// if (cakeRewardsApr && lpRewardsApr) {\n//   return (cakeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\n// }\nif(cakeRewardsApr){return cakeRewardsApr.toLocaleString('en-US',{maximumFractionDigits:2});}return null;};var Farms=function Farms(farmsProps){var _useRouteMatch=useRouteMatch(),path=_useRouteMatch.path;var _useLocation=useLocation(),pathname=_useLocation.pathname;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useFarms=useFarms(),farmsLP=_useFarms.data,userDataLoaded=_useFarms.userDataLoaded;var cakePrice=usePriceCakeBusd();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _usePersistState=usePersistState(ViewMode.TABLE,{localStorageKey:'pancake_farm_view'}),_usePersistState2=_slicedToArray(_usePersistState,2),viewMode=_usePersistState2[0],setViewMode=_usePersistState2[1];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useState3=useState('hot'),_useState4=_slicedToArray(_useState3,2),sortOption=_useState4[0],setSortOption=_useState4[1];var chosenFarmsLength=useRef(0);var tokenMode=farmsProps.tokenMode;var isArchived=pathname.includes('archived');var isInactive=pathname.includes('history');var isActive=!isInactive&&!isArchived;usePollFarmsData(isArchived);// Users with no wallet connected should see 0 as Earned amount\n// Connected users should see loading indicator until first userData has loaded\nvar userDataReady=!account||!!account&&userDataLoaded;var _useUserFarmStakedOnl=useUserFarmStakedOnly(isActive),_useUserFarmStakedOnl2=_slicedToArray(_useUserFarmStakedOnl,2),stakedOnly=_useUserFarmStakedOnl2[0],setStakedOnly=_useUserFarmStakedOnl2[1];var activeFarms=farmsLP.filter(function(farm){return!!farm.isTokenOnly===!!tokenMode&&farm.multiplier!=='0X'&&!isArchivedPid(farm.pid);});var inactiveFarms=farmsLP.filter(function(farm){return!!farm.isTokenOnly===!!tokenMode&&farm.multiplier==='0X'&&!isArchivedPid(farm.pid);});var archivedFarms=farmsLP.filter(function(farm){return isArchivedPid(farm.pid);});var stakedOnlyFarms=activeFarms.filter(function(farm){return farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0);});var stakedInactiveFarms=inactiveFarms.filter(function(farm){return farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0);});var stakedArchivedFarms=archivedFarms.filter(function(farm){return farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0);});var farmsList=useCallback(function(farmsToDisplay){var farmsToDisplayWithAPR=farmsToDisplay.map(function(farm){if(!farm.lpTotalInQuoteToken||!farm.quoteToken.busdPrice){return farm;}var totalLiquidity=farm.isTokenOnly?new BigNumber(farm.lpTotalInQuoteToken).times(farm.token.busdPrice):new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice);var _ref4=isActive?getFarmApr(new BigNumber(farm.poolWeight),cakePrice,totalLiquidity,farm.lpAddresses[ChainId.MAINNET],new BigNumber(farm.lokipersecond)):{cakeRewardsApr:0,lpRewardsApr:0},cakeRewardsApr=_ref4.cakeRewardsApr,lpRewardsApr=_ref4.lpRewardsApr;return _objectSpread(_objectSpread({},farm),{},{apr:cakeRewardsApr,lpRewardsApr:lpRewardsApr,liquidity:totalLiquidity});});if(query){var lowercaseQuery=latinise(query.toLowerCase());farmsToDisplayWithAPR=farmsToDisplayWithAPR.filter(function(farm){return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery);});}return farmsToDisplayWithAPR;},[cakePrice,query,isActive]);var handleChangeQuery=function handleChangeQuery(event){setQuery(event.target.value);};var loadMoreRef=useRef(null);var _useState5=useState(NUMBER_OF_FARMS_VISIBLE),_useState6=_slicedToArray(_useState5,2),numberOfFarmsVisible=_useState6[0],setNumberOfFarmsVisible=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),observerIsSet=_useState8[0],setObserverIsSet=_useState8[1];// const [canharvest, setCanharvest] = useState(false);\n// useEffect(() => {\n//   const setcanharvest = async () => {\n//     const res = await getCountdownparams()\n//     setCanharvest(res.isharvestnow)\n//   }\n//   setcanharvest()\n// }, [])\n// const [harvestfee, setHarvestfee] = useState('69');\n// useEffect(() => {\n//   const setharvestfee = async () => {\n//     const res = await getCountdownparams()\n//     setHarvestfee(res.harvestFee)\n//   }\n//   setharvestfee()\n// }, [])\nvar chosenFarmsMemoized=useMemo(function(){var chosenFarms=[];var sortFarms=function sortFarms(farms){switch(sortOption){case'apr':return orderBy(farms,function(farm){return farm.apr+farm.lpRewardsApr;},'desc');case'multiplier':return orderBy(farms,function(farm){return farm.multiplier?Number(farm.multiplier.slice(0,-1)):0;},'desc');case'earned':return orderBy(farms,function(farm){return farm.userData?Number(farm.userData.earnings):0;},'desc');case'liquidity':return orderBy(farms,function(farm){return Number(farm.liquidity);},'desc');default:return farms;}};if(isActive){chosenFarms=stakedOnly?farmsList(stakedOnlyFarms):farmsList(activeFarms);}if(isInactive){chosenFarms=stakedOnly?farmsList(stakedInactiveFarms):farmsList(inactiveFarms);}if(isArchived){chosenFarms=stakedOnly?farmsList(stakedArchivedFarms):farmsList(archivedFarms);}return sortFarms(chosenFarms).slice(0,numberOfFarmsVisible);},[sortOption,activeFarms,farmsList,inactiveFarms,archivedFarms,isActive,isInactive,isArchived,stakedArchivedFarms,stakedInactiveFarms,stakedOnly,stakedOnlyFarms,numberOfFarmsVisible]);chosenFarmsLength.current=chosenFarmsMemoized.length;useEffect(function(){var showMoreFarms=function showMoreFarms(entries){var _entries=_slicedToArray(entries,1),entry=_entries[0];if(entry.isIntersecting){setNumberOfFarmsVisible(function(farmsCurrentlyVisible){if(farmsCurrentlyVisible<=chosenFarmsLength.current){return farmsCurrentlyVisible+NUMBER_OF_FARMS_VISIBLE;}return farmsCurrentlyVisible;});}};if(!observerIsSet){var loadMoreObserver=new IntersectionObserver(showMoreFarms,{rootMargin:'0px',threshold:1});loadMoreObserver.observe(loadMoreRef.current);setObserverIsSet(true);}},[chosenFarmsMemoized,observerIsSet]);var rowData=chosenFarmsMemoized.map(function(farm){var token=farm.token,quoteToken=farm.quoteToken;var tokenAddress=token.address;var quoteTokenAddress=quoteToken.address;var lpLabel=farm.lpSymbol&&farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE','');var row={apr:{value:getDisplayApr(farm.apr,farm.lpRewardsApr),pid:farm.pid,multiplier:farm.multiplier,lpLabel:lpLabel,lpSymbol:farm.lpSymbol,tokenAddress:tokenAddress,quoteTokenAddress:quoteTokenAddress,cakePrice:cakePrice,originalValue:farm.apr},farm:{label:lpLabel,pid:farm.pid,token:farm.token,quoteToken:farm.quoteToken,isTokenOnly:farm.isTokenOnly},earned:{earnings:getBalanceNumber(new BigNumber(farm.userData.earnings)),pid:farm.pid},liquidity:{liquidity:farm.liquidity},multiplier:{multiplier:farm.multiplier},details:farm};return row;});var renderContent=function renderContent(){if(viewMode===ViewMode.TABLE&&rowData.length){var columnSchema=DesktopColumnSchema;var columns=columnSchema.map(function(column){return{id:column.id,name:column.name,label:column.label,sort:function sort(a,b){switch(column.name){case'farm':return b.id-a.id;case'apr':if(a.original.apr.value&&b.original.apr.value){return Number(a.original.apr.value)-Number(b.original.apr.value);}return 0;case'earned':return a.original.earned.earnings-b.original.earned.earnings;default:return 1;}},sortable:column.sortable};});return/*#__PURE__*/_jsx(Table,{data:rowData,columns:columns,userDataReady:userDataReady});}return/*#__PURE__*/_jsxs(FlexLayout,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path),children:chosenFarmsMemoized.map(function(farm){return/*#__PURE__*/_jsx(FarmCard,{farm:farm,displayApr:getDisplayApr(farm.apr,farm.lpRewardsApr),cakePrice:cakePrice,account:account,removed:false},farm.pid);})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path,\"/history\"),children:chosenFarmsMemoized.map(function(farm){return/*#__PURE__*/_jsx(FarmCard,{farm:farm,displayApr:getDisplayApr(farm.apr,farm.lpRewardsApr),cakePrice:cakePrice,account:account,removed:true},farm.pid);})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path,\"/archived\"),children:chosenFarmsMemoized.map(function(farm){return/*#__PURE__*/_jsx(FarmCard,{farm:farm,displayApr:getDisplayApr(farm.apr,farm.lpRewardsApr),cakePrice:cakePrice,account:account,removed:true},farm.pid);})})]});};var handleSortOptionChange=function handleSortOptionChange(option){setSortOption(option.value);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(StyledPageHeader,{children:/*#__PURE__*/_jsx(Flex,{flexDirection:\"column\",children:/*#__PURE__*/_jsx(Flex,{flexDirection:['column',null,null,'row'],alignItems:['flex-end',null,null,'center'],justifyContent:\"center\",children:/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",flex:\"1\",alignSelf:['flex-start',null,null,'center'],children:[/*#__PURE__*/_jsx(Heading,{as:\"h1\",scale:\"xxl\",color:\"#0dcad8\",mb:\"24px\",children:tokenMode?t('Pools'):t('Farms')}),/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Heading,{scale:\"lg\",color:\"text\",children:tokenMode?t('Stake Single token to earn LOKI,'):t('Stake LP tokens to earn LOKI,')}),/*#__PURE__*/_jsx(Text,{ml:\"10px\",fontSize:\"18px\",children:t('Deposit Fee will be used to buyback LOKI')})]})]})})})}),/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsxs(ControlContainer,{children:[/*#__PURE__*/_jsxs(ViewControls,{children:[/*#__PURE__*/_jsx(ToggleView,{viewMode:viewMode,onToggle:function onToggle(mode){return setViewMode(mode);}}),/*#__PURE__*/_jsxs(ToggleWrapper,{children:[/*#__PURE__*/_jsx(Toggle,{checked:stakedOnly,onChange:function onChange(){return setStakedOnly(!stakedOnly);},scale:\"sm\"}),/*#__PURE__*/_jsxs(Text,{children:[\" \",t('Staked only')]})]}),/*#__PURE__*/_jsx(FarmTabButtons,{hasStakeInFinishedFarms:stakedInactiveFarms.length>0})]}),/*#__PURE__*/_jsxs(FilterContainer,{children:[/*#__PURE__*/_jsxs(LabelWrapper,{children:[/*#__PURE__*/_jsx(Text,{textTransform:\"uppercase\",children:t('Sort by')}),/*#__PURE__*/_jsx(Select,{options:[// {\n//   label: t('Hot'),\n//   value: 'hot',\n// },\n{label:t('APR'),value:'apr'},{label:t('Multiplier'),value:'multiplier'},{label:t('Earned'),value:'earned'},{label:t('Liquidity'),value:'liquidity'}],onChange:handleSortOptionChange})]}),/*#__PURE__*/_jsxs(LabelWrapper,{style:{marginLeft:16},children:[/*#__PURE__*/_jsx(Text,{textTransform:\"uppercase\",children:t('Search')}),/*#__PURE__*/_jsx(SearchInput,{onChange:handleChangeQuery,placeholder:\"Search Farms\"})]})]})]}),renderContent(),account&&!userDataLoaded&&stakedOnly&&/*#__PURE__*/_jsx(Flex,{justifyContent:\"center\",children:/*#__PURE__*/_jsx(Loading,{})}),/*#__PURE__*/_jsx(\"div\",{ref:loadMoreRef})]})]});};export default Farms;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Farms/Farms.tsx"],"names":["React","useEffect","useCallback","useState","useMemo","useRef","Route","useRouteMatch","useLocation","BigNumber","useWeb3React","Heading","Toggle","Text","Flex","ChainId","styled","FlexLayout","Page","useFarms","usePollFarmsData","usePriceCakeBusd","usePersistState","useTranslation","getBalanceNumber","getFarmApr","orderBy","isArchivedPid","latinise","useUserFarmStakedOnly","PageHeader","SearchInput","Select","Loading","FarmCard","Table","FarmTabButtons","ToggleView","DesktopColumnSchema","ViewMode","ControlContainer","div","theme","mediaQueries","sm","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","StyledPageHeader","NUMBER_OF_FARMS_VISIBLE","getDisplayApr","cakeRewardsApr","lpRewardsApr","toLocaleString","maximumFractionDigits","Farms","farmsProps","path","pathname","t","farmsLP","data","userDataLoaded","cakePrice","query","setQuery","TABLE","localStorageKey","viewMode","setViewMode","account","sortOption","setSortOption","chosenFarmsLength","tokenMode","isArchived","includes","isInactive","isActive","userDataReady","stakedOnly","setStakedOnly","activeFarms","filter","farm","isTokenOnly","multiplier","pid","inactiveFarms","archivedFarms","stakedOnlyFarms","userData","stakedBalance","isGreaterThan","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","map","lpTotalInQuoteToken","quoteToken","busdPrice","totalLiquidity","times","token","poolWeight","lpAddresses","MAINNET","lokipersecond","apr","liquidity","lowercaseQuery","toLowerCase","lpSymbol","handleChangeQuery","event","target","value","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","chosenFarmsMemoized","chosenFarms","sortFarms","farms","Number","slice","earnings","current","length","showMoreFarms","entries","entry","isIntersecting","farmsCurrentlyVisible","loadMoreObserver","IntersectionObserver","rootMargin","threshold","observe","rowData","tokenAddress","address","quoteTokenAddress","lpLabel","split","toUpperCase","replace","row","originalValue","label","earned","details","renderContent","columnSchema","columns","column","id","name","sort","a","b","original","sortable","handleSortOptionChange","option","mode","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\r\nimport { Route, useRouteMatch, useLocation, NavLink } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Image, Heading, RowType, Toggle, Text, Button, ArrowForwardIcon, Flex } from '@pancakeswap/uikit'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\nimport styled from 'styled-components'\r\nimport FlexLayout from 'components/Layout/Flex'\r\nimport Page from 'components/Layout/Page'\r\nimport { useFarms, usePollFarmsData, usePriceCakeBusd } from 'state/farms/hooks'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { Farm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getFarmApr } from 'utils/apr'\r\nimport { orderBy } from 'lodash'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport { latinise } from 'utils/latinise'\r\nimport { useUserFarmStakedOnly } from 'state/user/hooks'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport Loading from 'components/Loading'\r\n// import { getCountdownparams } from 'state/farms/fetchPublicFarmData'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport Table from './components/FarmTable/FarmTable'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport { RowProps } from './components/FarmTable/Row'\r\nimport ToggleView from './components/ToggleView/ToggleView'\r\nimport { DesktopColumnSchema, ViewMode } from './components/types'\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledPageHeader = styled(PageHeader)`\r\n  > div {\r\n    padding-bottom: 5px;\r\n  }\r\n`\r\nconst NUMBER_OF_FARMS_VISIBLE = 12\r\n\r\nconst getDisplayApr = (cakeRewardsApr?: number, lpRewardsApr?: number) => {\r\n  // if (cakeRewardsApr && lpRewardsApr) {\r\n  //   return (cakeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n  // }\r\n  if (cakeRewardsApr) {\r\n    return cakeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n  }\r\n  return null\r\n}\r\n\r\nexport interface FarmsProps{\r\n  tokenMode?: boolean\r\n}\r\n\r\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\r\n  const { path } = useRouteMatch()\r\n  const { pathname } = useLocation()\r\n  const { t } = useTranslation()\r\n  const { data: farmsLP, userDataLoaded } = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const [query, setQuery] = useState('')\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\r\n  const { account } = useWeb3React()\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const chosenFarmsLength = useRef(0)\r\n  const {tokenMode} = farmsProps;\r\n  const isArchived = pathname.includes('archived')\r\n  const isInactive = pathname.includes('history')\r\n  const isActive = !isInactive && !isArchived\r\n  usePollFarmsData(isArchived)\r\n\r\n  // Users with no wallet connected should see 0 as Earned amount\r\n  // Connected users should see loading indicator until first userData has loaded\r\n  const userDataReady = !account || (!!account && userDataLoaded)\r\n\r\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\r\n\r\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\r\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\r\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedInactiveFarms = inactiveFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedArchivedFarms = archivedFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\r\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\r\n          return farm\r\n        }\r\n        const totalLiquidity = farm.isTokenOnly ? new BigNumber(farm.lpTotalInQuoteToken).times(farm.token.busdPrice) : new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\r\n        const { cakeRewardsApr, lpRewardsApr } = isActive\r\n          ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET], new BigNumber(farm.lokipersecond))\r\n          : { cakeRewardsApr: 0, lpRewardsApr: 0 }\r\n\r\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = latinise(query.toLowerCase())\r\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\r\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\r\n        })\r\n      }\r\n      return farmsToDisplayWithAPR\r\n    },\r\n    [cakePrice, query, isActive],\r\n  )\r\n\r\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(event.target.value)\r\n  }\r\n\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n\r\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  // const [canharvest, setCanharvest] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   const setcanharvest = async () => {\r\n  //     const res = await getCountdownparams()\r\n  //     setCanharvest(res.isharvestnow)\r\n  //   }\r\n  //   setcanharvest()\r\n  // }, [])\r\n\r\n  // const [harvestfee, setHarvestfee] = useState('69');\r\n  // useEffect(() => {\r\n  //   const setharvestfee = async () => {\r\n  //     const res = await getCountdownparams()\r\n  //     setHarvestfee(res.harvestFee)\r\n  //   }\r\n  //   setharvestfee()\r\n  // }, [])\r\n\r\n  const chosenFarmsMemoized = useMemo(() => {\r\n    let chosenFarms = []\r\n\r\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\r\n      switch (sortOption) {\r\n        case 'apr':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr + farm.lpRewardsApr, 'desc')\r\n        case 'multiplier':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\r\n            'desc',\r\n          )\r\n        case 'earned':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\r\n            'desc',\r\n          )\r\n        case 'liquidity':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\r\n        default:\r\n          return farms\r\n      }\r\n    }\r\n\r\n    if (isActive) {\r\n      chosenFarms = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\r\n    }\r\n    if (isInactive) {\r\n      chosenFarms = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\r\n    }\r\n    if (isArchived) {\r\n      chosenFarms = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\r\n    }\r\n\r\n    return sortFarms(chosenFarms).slice(0, numberOfFarmsVisible)\r\n  }, [\r\n    sortOption,\r\n    activeFarms,\r\n    farmsList,\r\n    inactiveFarms,\r\n    archivedFarms,\r\n    isActive,\r\n    isInactive,\r\n    isArchived,\r\n    stakedArchivedFarms,\r\n    stakedInactiveFarms,\r\n    stakedOnly,\r\n    stakedOnlyFarms,\r\n    numberOfFarmsVisible,\r\n  ])\r\n\r\n  chosenFarmsLength.current = chosenFarmsMemoized.length\r\n\r\n  useEffect(() => {\r\n    const showMoreFarms = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\r\n          if (farmsCurrentlyVisible <= chosenFarmsLength.current) {\r\n            return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\r\n          }\r\n          return farmsCurrentlyVisible\r\n        })\r\n      }\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      loadMoreObserver.observe(loadMoreRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [chosenFarmsMemoized, observerIsSet])\r\n\r\n  const rowData = chosenFarmsMemoized.map((farm) => {\r\n    const { token, quoteToken } = farm\r\n    const tokenAddress = token.address\r\n    const quoteTokenAddress = quoteToken.address\r\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\r\n\r\n    const row: RowProps = {\r\n      apr: {\r\n        value: getDisplayApr(farm.apr, farm.lpRewardsApr),\r\n        pid: farm.pid,\r\n        multiplier: farm.multiplier,\r\n        lpLabel,\r\n        lpSymbol: farm.lpSymbol,\r\n        tokenAddress,\r\n        quoteTokenAddress,\r\n        cakePrice,\r\n        originalValue: farm.apr,\r\n      },\r\n      farm: {\r\n        label: lpLabel,\r\n        pid: farm.pid,\r\n        token: farm.token,\r\n        quoteToken: farm.quoteToken,\r\n        isTokenOnly: farm.isTokenOnly\r\n      },\r\n      earned: {\r\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\r\n        pid: farm.pid,\r\n      },\r\n      liquidity: {\r\n        liquidity: farm.liquidity,\r\n      },\r\n      multiplier: {\r\n        multiplier: farm.multiplier,\r\n      },\r\n      details: farm,\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    if (viewMode === ViewMode.TABLE && rowData.length) {\r\n      const columnSchema = DesktopColumnSchema\r\n\r\n      const columns = columnSchema.map((column) => ({\r\n        id: column.id,\r\n        name: column.name,\r\n        label: column.label,\r\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\r\n          switch (column.name) {\r\n            case 'farm':\r\n              return b.id - a.id\r\n            case 'apr':\r\n              if (a.original.apr.value && b.original.apr.value) {\r\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\r\n              }\r\n\r\n              return 0\r\n            case 'earned':\r\n              return a.original.earned.earnings - b.original.earned.earnings\r\n            default:\r\n              return 1\r\n          }\r\n        },\r\n        sortable: column.sortable,\r\n      }))\r\n\r\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\r\n    }\r\n\r\n    return (\r\n      <FlexLayout>\r\n        <Route exact path={`${path}`}>\r\n          {chosenFarmsMemoized.map((farm) => (\r\n            <FarmCard\r\n              key={farm.pid}\r\n              farm={farm}\r\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\r\n              cakePrice={cakePrice}\r\n              account={account}\r\n              removed={false}\r\n            />\r\n          ))}\r\n        </Route>\r\n        <Route exact path={`${path}/history`}>\r\n          {chosenFarmsMemoized.map((farm) => (\r\n            <FarmCard\r\n              key={farm.pid}\r\n              farm={farm}\r\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\r\n              cakePrice={cakePrice}\r\n              account={account}\r\n              removed\r\n            />\r\n          ))}\r\n        </Route>\r\n        <Route exact path={`${path}/archived`}>\r\n          {chosenFarmsMemoized.map((farm) => (\r\n            <FarmCard\r\n              key={farm.pid}\r\n              farm={farm}\r\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\r\n              cakePrice={cakePrice}\r\n              account={account}\r\n              removed\r\n            />\r\n          ))}\r\n        </Route>\r\n      </FlexLayout>\r\n    )\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledPageHeader>\r\n        <Flex flexDirection=\"column\">\r\n          <Flex flexDirection={['column', null, null, 'row']} alignItems={['flex-end', null, null, 'center']} justifyContent=\"center\">\r\n            <Flex flexDirection=\"column\" flex=\"1\" alignSelf={['flex-start', null, null, 'center']}>\r\n              <Heading as=\"h1\" scale=\"xxl\" color=\"#0dcad8\" mb=\"24px\">\r\n                {tokenMode ? t('Pools') : t('Farms')}\r\n              </Heading>\r\n              <Flex>\r\n                <Heading scale=\"lg\" color=\"text\">\r\n                  {tokenMode ? t('Stake Single token to earn LOKI,') : t('Stake LP tokens to earn LOKI,')}\r\n                </Heading>\r\n                <Text ml=\"10px\" fontSize=\"18px\">{t('Deposit Fee will be used to buyback LOKI')}</Text>\r\n              </Flex>\r\n            </Flex>\r\n          \r\n          {/* <Flex flexDirection=\"column\" flex=\"1\" alignSelf={['flex-start', null, null, 'center']}\r\n          >\r\n            <Heading scale=\"lg\" color=\"text\">\r\n                {canharvest ? t('Harvest Remain Time') : t('Harvest Locked')}\r\n            </Heading>\r\n            <Text>\r\n              {canharvest ? `Harvest Fee is ${harvestfee}%. It decreases by 3% every hour.`: t('Remain Time to Harvest')}\r\n            </Text>\r\n            <CountDownCircler />\r\n          </Flex> */}\r\n          </Flex>\r\n        </Flex>\r\n        {/* <NavLink exact activeClassName=\"active\" to=\"/farms/auction\" id=\"lottery-pot-banner\">\r\n          <Button p=\"0\" variant=\"text\">\r\n            <Text color=\"primary\" bold fontSize=\"16px\" mr=\"4px\">\r\n              {t('Community Auctions')}\r\n            </Text>\r\n            <ArrowForwardIcon color=\"primary\" />\r\n          </Button>\r\n        </NavLink> */}\r\n      </StyledPageHeader>\r\n      <Page>\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n            <ToggleWrapper>\r\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\r\n              <Text> {t('Staked only')}</Text>\r\n            </ToggleWrapper>\r\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\r\n          </ViewControls>\r\n          <FilterContainer>\r\n            <LabelWrapper>\r\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\r\n              <Select\r\n                options={[\r\n                  // {\r\n                  //   label: t('Hot'),\r\n                  //   value: 'hot',\r\n                  // },\r\n                  {\r\n                    label: t('APR'),\r\n                    value: 'apr',\r\n                  },\r\n                  {\r\n                    label: t('Multiplier'),\r\n                    value: 'multiplier',\r\n                  },\r\n                  {\r\n                    label: t('Earned'),\r\n                    value: 'earned',\r\n                  },\r\n                  {\r\n                    label: t('Liquidity'),\r\n                    value: 'liquidity',\r\n                  },\r\n                ]}\r\n                onChange={handleSortOptionChange}\r\n              />\r\n            </LabelWrapper>\r\n            <LabelWrapper style={{ marginLeft: 16 }}>\r\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\r\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\r\n            </LabelWrapper>\r\n          </FilterContainer>\r\n        </ControlContainer>\r\n        {renderContent()}\r\n        {account && !userDataLoaded && stakedOnly && (\r\n          <Flex justifyContent=\"center\">\r\n            <Loading />\r\n          </Flex>\r\n        )}\r\n        <div ref={loadMoreRef} />\r\n        {/* <StyledImage src=\"/images/decorations/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} /> */}\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n"]},"metadata":{},"sourceType":"module"}