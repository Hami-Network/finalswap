{"ast":null,"code":"import _slicedToArray from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useTranslation}from'contexts/Localization';import{Text,Flex,Checkbox,Button}from'@pancakeswap/uikit';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Acknowledgement=function Acknowledgement(_ref){var handleContinueClick=_ref.handleContinueClick;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isConfirmed=_useState2[0],setIsConfirmed=_useState2[1];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Checkbox,{name:\"confirmed\",type:\"checkbox\",checked:isConfirmed,onChange:function onChange(){return setIsConfirmed(!isConfirmed);},scale:\"sm\"}),/*#__PURE__*/_jsx(Text,{ml:\"10px\",style:{userSelect:'none'},children:t('I understand')})]}),/*#__PURE__*/_jsx(Button,{disabled:!isConfirmed,onClick:handleContinueClick,children:t('Continue')})]})});};export default Acknowledgement;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Swap/components/SwapWarningModal/Acknowledgement.tsx"],"names":["React","useState","useTranslation","Text","Flex","Checkbox","Button","Acknowledgement","handleContinueClick","t","isConfirmed","setIsConfirmed","userSelect"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,QAArB,CAA+BC,MAA/B,KAA6C,oBAA7C,C,6IAMA,GAAMC,CAAAA,eAA+C,CAAG,QAAlDA,CAAAA,eAAkD,MAA6B,IAA1BC,CAAAA,mBAA0B,MAA1BA,mBAA0B,CACnF,oBAAcN,cAAc,EAA5B,CAAQO,CAAR,iBAAQA,CAAR,CACA,cAAsCR,QAAQ,CAAC,KAAD,CAA9C,wCAAOS,WAAP,eAAoBC,cAApB,eAEA,mBACE,sCACE,MAAC,IAAD,EAAM,cAAc,CAAC,eAArB,wBACE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,wBACE,KAAC,QAAD,EACE,IAAI,CAAC,WADP,CAEE,IAAI,CAAC,UAFP,CAGE,OAAO,CAAED,WAHX,CAIE,QAAQ,CAAE,0BAAMC,CAAAA,cAAc,CAAC,CAACD,WAAF,CAApB,EAJZ,CAKE,KAAK,CAAC,IALR,EADF,cAQE,KAAC,IAAD,EAAM,EAAE,CAAC,MAAT,CAAgB,KAAK,CAAE,CAAEE,UAAU,CAAE,MAAd,CAAvB,UACGH,CAAC,CAAC,cAAD,CADJ,EARF,GADF,cAcE,KAAC,MAAD,EAAU,QAAQ,CAAE,CAACC,WAArB,CAAkC,OAAO,CAAEF,mBAA3C,UACGC,CAAC,CAAC,UAAD,CADJ,EAdF,GADF,EADF,CAsBD,CA1BD,CA4BA,cAAeF,CAAAA,eAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\r\n\r\ninterface AcknowledgementProps {\r\n  handleContinueClick: () => void\r\n}\r\n\r\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\r\n  const { t } = useTranslation()\r\n  const [isConfirmed, setIsConfirmed] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Flex alignItems=\"center\">\r\n          <Checkbox\r\n            name=\"confirmed\"\r\n            type=\"checkbox\"\r\n            checked={isConfirmed}\r\n            onChange={() => setIsConfirmed(!isConfirmed)}\r\n            scale=\"sm\"\r\n          />\r\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\r\n            {t('I understand')}\r\n          </Text>\r\n        </Flex>\r\n\r\n        <Button   disabled={!isConfirmed} onClick={handleContinueClick}>\r\n          {t('Continue')}\r\n        </Button>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Acknowledgement\r\n"]},"metadata":{},"sourceType":"module"}