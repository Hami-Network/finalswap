{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97154\\\\swap\\\\hami\\\\LokiswapUI\\\\src\\\\components\\\\Menu\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Menu as UikitMenu } from '@pancakeswap/uikit';\nimport { languageList } from 'config/localization/languages';\nimport { useTranslation } from 'contexts/Localization';\nimport useTheme from 'hooks/useTheme';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport { useProfile } from 'state/profile/hooks';\nimport UserMenu from './UserMenu';\nimport GlobalSettings from './GlobalSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = props => {\n  _s();\n\n  const {\n    isDark,\n    toggleTheme\n  } = useTheme();\n  const cakePriceUsd = usePriceCakeBusd();\n  const {\n    profile\n  } = useProfile();\n  const {\n    currentLanguage,\n    setLanguage,\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(UikitMenu, {\n    userMenu: /*#__PURE__*/_jsxDEV(UserMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this),\n    globalMenu: /*#__PURE__*/_jsxDEV(GlobalSettings, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }, this),\n    isDark: isDark,\n    toggleTheme: toggleTheme,\n    currentLang: currentLanguage.code,\n    langs: languageList,\n    setLang: setLanguage,\n    cakePriceUsd: cakePriceUsd.toNumber() // links={config(t)}\n    // profile={{\n    //   username: profile?.username,\n    //   image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n    //   profileLink: '/profile',\n    //   noProfileLink: '/profile',\n    //   showPip: !profile?.username,\n    // }}\n    ,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Menu, \"p7bKe/M8196tmVoLMcCDjd3Yyko=\", false, function () {\n  return [useTheme, usePriceCakeBusd, useProfile, useTranslation];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/components/Menu/index.tsx"],"names":["React","Menu","UikitMenu","languageList","useTranslation","useTheme","usePriceCakeBusd","useProfile","UserMenu","GlobalSettings","props","isDark","toggleTheme","cakePriceUsd","profile","currentLanguage","setLanguage","t","code","toNumber"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,SAAjB,QAAkC,oBAAlC;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMR,IAAI,GAAIS,KAAD,IAAW;AAAA;;AACtB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0BP,QAAQ,EAAxC;AACA,QAAMQ,YAAY,GAAGP,gBAAgB,EAArC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAcP,UAAU,EAA9B;AACA,QAAM;AAAEQ,IAAAA,eAAF;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA;AAAhC,MAAsCb,cAAc,EAA1D;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,QAAQ,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADZ;AAEE,IAAA,UAAU,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFd;AAGE,IAAA,MAAM,EAAEO,MAHV;AAIE,IAAA,WAAW,EAAEC,WAJf;AAKE,IAAA,WAAW,EAAEG,eAAe,CAACG,IAL/B;AAME,IAAA,KAAK,EAAEf,YANT;AAOE,IAAA,OAAO,EAAEa,WAPX;AAQE,IAAA,YAAY,EAAEH,YAAY,CAACM,QAAb,EARhB,CASE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBF;AAAA,OAiBMT;AAjBN;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3BD;;GAAMT,I;UAC4BI,Q,EACXC,gB,EACDC,U,EACwBH,c;;;KAJxCH,I;AA6BN,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\r\nimport { languageList } from 'config/localization/languages'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport config from './config'\r\nimport UserMenu from './UserMenu'\r\nimport GlobalSettings from './GlobalSettings'\r\n\r\nconst Menu = (props) => {\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const { profile } = useProfile()\r\n  const { currentLanguage, setLanguage, t } = useTranslation()\r\n\r\n  return (\r\n    <UikitMenu\r\n      userMenu={<UserMenu />}\r\n      globalMenu={<GlobalSettings />}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={currentLanguage.code}\r\n      langs={languageList}\r\n      setLang={setLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      // links={config(t)}\r\n      // profile={{\r\n      //   username: profile?.username,\r\n      //   image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\r\n      //   profileLink: '/profile',\r\n      //   noProfileLink: '/profile',\r\n      //   showPip: !profile?.username,\r\n      // }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n"]},"metadata":{},"sourceType":"module"}