{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import styled from'styled-components';import{Tag,Flex,Heading}from'@pancakeswap/uikit';import{NofeeTag}from'components/Tags';import{TokenPairImage,TokenImage}from'components/TokenImage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Wrapper=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  svg {\\n    margin-right: 4px;\\n  }\\n\"])));var MultiplierTag=styled(Tag)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-left: 4px;\\n\"])));var CardHeading=function CardHeading(_ref){var lpLabel=_ref.lpLabel,multiplier=_ref.multiplier,token=_ref.token,quoteToken=_ref.quoteToken,isTokenOnly=_ref.isTokenOnly,depositfee=_ref.depositfee;return/*#__PURE__*/_jsxs(Wrapper,{justifyContent:\"space-between\",alignItems:\"center\",mb:\"12px\",children:[isTokenOnly?/*#__PURE__*/_jsx(TokenImage,{token:token,width:64,height:64}):/*#__PURE__*/_jsx(TokenPairImage,{variant:\"inverted\",primaryToken:token,secondaryToken:quoteToken,width:64,height:64}),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",alignItems:\"flex-end\",children:[/*#__PURE__*/_jsx(Heading,{mb:\"4px\",children:lpLabel.split(' ')[0]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"center\",children:[depositfee==='0%'?/*#__PURE__*/_jsx(NofeeTag,{}):null,/*#__PURE__*/_jsx(MultiplierTag,{variant:\"secondary\",children:multiplier})]})]})]});};export default CardHeading;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Farms/components/FarmCard/CardHeading.tsx"],"names":["React","styled","Tag","Flex","Heading","NofeeTag","TokenPairImage","TokenImage","Wrapper","MultiplierTag","CardHeading","lpLabel","multiplier","token","quoteToken","isTokenOnly","depositfee","split"],"mappings":"+MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,GAAT,CAAcC,IAAd,CAAoBC,OAApB,KAAmC,oBAAnC,CACA,OAASC,QAAT,KAAyB,iBAAzB,CAEA,OAASC,cAAT,CAAyBC,UAAzB,KAA2C,uBAA3C,C,wFAYA,GAAMC,CAAAA,OAAO,CAAGP,MAAM,CAACE,IAAD,CAAT,yGAAb,CAMA,GAAMM,CAAAA,aAAa,CAAGR,MAAM,CAACC,GAAD,CAAT,0FAAnB,CAIA,GAAMQ,CAAAA,WAA6C,CAAG,QAAhDA,CAAAA,WAAgD,MAAyE,IAAtEC,CAAAA,OAAsE,MAAtEA,OAAsE,CAA7DC,UAA6D,MAA7DA,UAA6D,CAAjDC,KAAiD,MAAjDA,KAAiD,CAA1CC,UAA0C,MAA1CA,UAA0C,CAA9BC,WAA8B,MAA9BA,WAA8B,CAAjBC,UAAiB,MAAjBA,UAAiB,CAC7H,mBACE,MAAC,OAAD,EAAS,cAAc,CAAC,eAAxB,CAAwC,UAAU,CAAC,QAAnD,CAA4D,EAAE,CAAC,MAA/D,WAEID,WAAW,cAAG,KAAC,UAAD,EAAY,KAAK,CAAEF,KAAnB,CAA0B,KAAK,CAAE,EAAjC,CAAqC,MAAM,CAAE,EAA7C,EAAH,cACX,KAAC,cAAD,EAAgB,OAAO,CAAC,UAAxB,CAAmC,YAAY,CAAEA,KAAjD,CAAwD,cAAc,CAAEC,UAAxE,CAAoF,KAAK,CAAE,EAA3F,CAA+F,MAAM,CAAE,EAAvG,EAHJ,cAKE,MAAC,IAAD,EAAM,aAAa,CAAC,QAApB,CAA6B,UAAU,CAAC,UAAxC,wBACE,KAAC,OAAD,EAAS,EAAE,CAAC,KAAZ,UAAmBH,OAAO,CAACM,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAnB,EADF,cAEE,MAAC,IAAD,EAAM,cAAc,CAAC,QAArB,WACGD,UAAU,GAAK,IAAf,cAAsB,KAAC,QAAD,IAAtB,CAAqC,IADxC,cAEE,KAAC,aAAD,EAAe,OAAO,CAAC,WAAvB,UAAoCJ,UAApC,EAFF,GAFF,GALF,GADF,CAeD,CAhBD,CAkBA,cAAeF,CAAAA,WAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading } from '@pancakeswap/uikit'\r\nimport { NofeeTag } from 'components/Tags'\r\nimport { Token } from 'config/constants/types'\r\nimport { TokenPairImage, TokenImage } from 'components/TokenImage'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  isCommunityFarm?: boolean\r\n  token: Token\r\n  quoteToken: Token\r\n  isTokenOnly?: boolean\r\n  depositfee?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, multiplier, token, quoteToken, isTokenOnly, depositfee }) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      {\r\n        isTokenOnly ? <TokenImage token={token} width={64} height={64} /> : \r\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} />\r\n      }     \r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {depositfee === '0%' ? <NofeeTag /> : null }\r\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n"]},"metadata":{},"sourceType":"module"}