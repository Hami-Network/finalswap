{"ast":null,"code":"import _slicedToArray from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState}from'react';import{ButtonMenu,ButtonMenuItem,ModalBody}from'@pancakeswap/uikit';import styled from'styled-components';import{useTranslation}from'contexts/Localization';import ManageLists from'./ManageLists';import ManageTokens from'./ManageTokens';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledButtonMenu=styled(ButtonMenu)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\"])));export default function Manage(_ref){var setModalView=_ref.setModalView,setImportList=_ref.setImportList,setImportToken=_ref.setImportToken,setListUrl=_ref.setListUrl;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),showLists=_useState2[0],setShowLists=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsxs(ModalBody,{children:[/*#__PURE__*/_jsxs(StyledButtonMenu,{activeIndex:showLists?0:1,onItemClick:function onItemClick(){return setShowLists(function(prev){return!prev;});},scale:\"sm\",variant:\"subtle\",mb:\"32px\",children:[/*#__PURE__*/_jsx(ButtonMenuItem,{width:\"50%\",children:t('Lists')}),/*#__PURE__*/_jsx(ButtonMenuItem,{width:\"50%\",children:t('Tokens')})]}),showLists?/*#__PURE__*/_jsx(ManageLists,{setModalView:setModalView,setImportList:setImportList,setListUrl:setListUrl}):/*#__PURE__*/_jsx(ManageTokens,{setModalView:setModalView,setImportToken:setImportToken})]});}","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/components/SearchModal/Manage.tsx"],"names":["React","useState","ButtonMenu","ButtonMenuItem","ModalBody","styled","useTranslation","ManageLists","ManageTokens","StyledButtonMenu","Manage","setModalView","setImportList","setImportToken","setListUrl","showLists","setShowLists","t","prev"],"mappings":"wVAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,UAAT,CAAqBC,cAArB,CAAqCC,SAArC,KAAsD,oBAAtD,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,C,wFAGA,GAAMC,CAAAA,gBAAgB,CAAGJ,MAAM,CAACH,UAAD,CAAT,mFAAtB,CAIA,cAAe,SAASQ,CAAAA,MAAT,MAUZ,IATDC,CAAAA,YASC,MATDA,YASC,CARDC,aAQC,MARDA,aAQC,CAPDC,cAOC,MAPDA,cAOC,CANDC,UAMC,MANDA,UAMC,CACD,cAAkCb,QAAQ,CAAC,IAAD,CAA1C,wCAAOc,SAAP,eAAkBC,YAAlB,eAEA,oBAAcV,cAAc,EAA5B,CAAQW,CAAR,iBAAQA,CAAR,CAEA,mBACE,MAAC,SAAD,yBACE,MAAC,gBAAD,EACE,WAAW,CAAEF,SAAS,CAAG,CAAH,CAAO,CAD/B,CAEE,WAAW,CAAE,6BAAMC,CAAAA,YAAY,CAAC,SAACE,IAAD,QAAU,CAACA,IAAX,EAAD,CAAlB,EAFf,CAGE,KAAK,CAAC,IAHR,CAIE,OAAO,CAAC,QAJV,CAKE,EAAE,CAAC,MALL,wBAOE,KAAC,cAAD,EAAgB,KAAK,CAAC,KAAtB,UAA6BD,CAAC,CAAC,OAAD,CAA9B,EAPF,cAQE,KAAC,cAAD,EAAgB,KAAK,CAAC,KAAtB,UAA6BA,CAAC,CAAC,QAAD,CAA9B,EARF,GADF,CAWGF,SAAS,cACR,KAAC,WAAD,EAAa,YAAY,CAAEJ,YAA3B,CAAyC,aAAa,CAAEC,aAAxD,CAAuE,UAAU,CAAEE,UAAnF,EADQ,cAGR,KAAC,YAAD,EAAc,YAAY,CAAEH,YAA5B,CAA0C,cAAc,CAAEE,cAA1D,EAdJ,GADF,CAmBD","sourcesContent":["import React, { useState } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ManageLists from './ManageLists'\r\nimport ManageTokens from './ManageTokens'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst StyledButtonMenu = styled(ButtonMenu)`\r\n  width: 100%;\r\n`\r\n\r\nexport default function Manage({\r\n  setModalView,\r\n  setImportList,\r\n  setImportToken,\r\n  setListUrl,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportToken: (token: Token) => void\r\n  setImportList: (list: TokenList) => void\r\n  setListUrl: (url: string) => void\r\n}) {\r\n  const [showLists, setShowLists] = useState(true)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <ModalBody>\r\n      <StyledButtonMenu\r\n        activeIndex={showLists ? 0 : 1}\r\n        onItemClick={() => setShowLists((prev) => !prev)}\r\n        scale=\"sm\"\r\n        variant=\"subtle\"\r\n        mb=\"32px\"\r\n      >\r\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\r\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\r\n      </StyledButtonMenu>\r\n      {showLists ? (\r\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\r\n      ) : (\r\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\r\n      )}\r\n    </ModalBody>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}