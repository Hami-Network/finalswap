{"ast":null,"code":"import _slicedToArray from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{ChainId,Pair,Token}from'@pancakeswap/sdk';import flatMap from'lodash/flatMap';import{useCallback,useMemo}from'react';import{useDispatch,useSelector}from'react-redux';import{BASES_TO_TRACK_LIQUIDITY_FOR,PINNED_PAIRS}from'config/constants';import useActiveWeb3React from'hooks/useActiveWeb3React';import{useAllTokens}from'hooks/Tokens';import{addSerializedPair,addSerializedToken,FarmStakedOnly,muteAudio,removeSerializedToken,toggleTheme as toggleThemeAction,unmuteAudio,updateUserDeadline,updateUserExpertMode,updateUserFarmStakedOnly,updateUserSingleHopOnly,updateUserSlippageTolerance,updateGasPrice}from'../actions';import{deserializeToken,GAS_PRICE_GWEI,serializeToken}from'./helpers';export function useAudioModeManager(){var dispatch=useDispatch();var audioPlay=useSelector(function(state){return state.user.audioPlay;});var toggleSetAudioMode=useCallback(function(){if(audioPlay){dispatch(muteAudio());}else{dispatch(unmuteAudio());}},[audioPlay,dispatch]);return[audioPlay,toggleSetAudioMode];}export function useIsExpertMode(){return useSelector(function(state){return state.user.userExpertMode;});}export function useExpertModeManager(){var dispatch=useDispatch();var expertMode=useIsExpertMode();var toggleSetExpertMode=useCallback(function(){dispatch(updateUserExpertMode({userExpertMode:!expertMode}));},[expertMode,dispatch]);return[expertMode,toggleSetExpertMode];}export function useThemeManager(){var dispatch=useDispatch();var isDark=useSelector(function(state){return state.user.isDark;});var toggleTheme=useCallback(function(){dispatch(toggleThemeAction());},[dispatch]);return[isDark,toggleTheme];}export function useUserSingleHopOnly(){var dispatch=useDispatch();var singleHopOnly=useSelector(function(state){return state.user.userSingleHopOnly;});var setSingleHopOnly=useCallback(function(newSingleHopOnly){dispatch(updateUserSingleHopOnly({userSingleHopOnly:newSingleHopOnly}));},[dispatch]);return[singleHopOnly,setSingleHopOnly];}export function useUserSlippageTolerance(){var dispatch=useDispatch();var userSlippageTolerance=useSelector(function(state){return state.user.userSlippageTolerance;});var setUserSlippageTolerance=useCallback(function(slippage){dispatch(updateUserSlippageTolerance({userSlippageTolerance:slippage}));},[dispatch]);return[userSlippageTolerance,setUserSlippageTolerance];}export function useUserFarmStakedOnly(isActive){var dispatch=useDispatch();var userFarmStakedOnly=useSelector(function(state){return state.user.userFarmStakedOnly;});var setUserFarmStakedOnly=useCallback(function(stakedOnly){var farmStakedOnly=stakedOnly?FarmStakedOnly.TRUE:FarmStakedOnly.FALSE;dispatch(updateUserFarmStakedOnly({userFarmStakedOnly:farmStakedOnly}));},[dispatch]);return[userFarmStakedOnly===FarmStakedOnly.ON_FINISHED?!isActive:userFarmStakedOnly===FarmStakedOnly.TRUE,setUserFarmStakedOnly];}export function useUserTransactionTTL(){var dispatch=useDispatch();var userDeadline=useSelector(function(state){return state.user.userDeadline;});var setUserDeadline=useCallback(function(deadline){dispatch(updateUserDeadline({userDeadline:deadline}));},[dispatch]);return[userDeadline,setUserDeadline];}export function useAddUserToken(){var dispatch=useDispatch();return useCallback(function(token){dispatch(addSerializedToken({serializedToken:serializeToken(token)}));},[dispatch]);}export function useRemoveUserAddedToken(){var dispatch=useDispatch();return useCallback(function(chainId,address){dispatch(removeSerializedToken({chainId:chainId,address:address}));},[dispatch]);}export function useGasPrice(){var chainId=process.env.REACT_APP_CHAIN_ID;var userGas=useSelector(function(state){return state.user.gasPrice;});return chainId===ChainId.MAINNET.toString()?userGas:GAS_PRICE_GWEI.testnet;}export function useGasPriceManager(){var dispatch=useDispatch();var userGasPrice=useGasPrice();var setGasPrice=useCallback(function(gasPrice){dispatch(updateGasPrice({gasPrice:gasPrice}));},[dispatch]);return[userGasPrice,setGasPrice];}function serializePair(pair){return{token0:serializeToken(pair.token0),token1:serializeToken(pair.token1)};}export function usePairAdder(){var dispatch=useDispatch();return useCallback(function(pair){dispatch(addSerializedPair({serializedPair:serializePair(pair)}));},[dispatch]);}/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */export function toV2LiquidityToken(_ref){var _ref2=_slicedToArray(_ref,2),tokenA=_ref2[0],tokenB=_ref2[1];return new Token(tokenA.chainId,Pair.getAddress(tokenA,tokenB),18,'Cake-LP','Pancake LPs');}/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */export function useTrackedTokenPairs(){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var tokens=useAllTokens();// pinned pairs\nvar pinnedPairs=useMemo(function(){var _PINNED_PAIRS$chainId;return chainId?(_PINNED_PAIRS$chainId=PINNED_PAIRS[chainId])!==null&&_PINNED_PAIRS$chainId!==void 0?_PINNED_PAIRS$chainId:[]:[];},[chainId]);// pairs for every token against every base\nvar generatedPairs=useMemo(function(){return chainId?flatMap(Object.keys(tokens),function(tokenAddress){var _BASES_TO_TRACK_LIQUI;var token=tokens[tokenAddress];// for each token on the current chain,\nreturn(// loop though all bases on the current chain\n((_BASES_TO_TRACK_LIQUI=BASES_TO_TRACK_LIQUIDITY_FOR[chainId])!==null&&_BASES_TO_TRACK_LIQUI!==void 0?_BASES_TO_TRACK_LIQUI:[]).// to construct pairs of the given token with each base\nmap(function(base){if(base.address===token.address){return null;}return[base,token];}).filter(function(p){return p!==null;}));}):[];},[tokens,chainId]);// pairs saved by users\nvar savedSerializedPairs=useSelector(function(_ref3){var pairs=_ref3.user.pairs;return pairs;});var userPairs=useMemo(function(){if(!chainId||!savedSerializedPairs)return[];var forChain=savedSerializedPairs[chainId];if(!forChain)return[];return Object.keys(forChain).map(function(pairId){return[deserializeToken(forChain[pairId].token0),deserializeToken(forChain[pairId].token1)];});},[savedSerializedPairs,chainId]);var combinedList=useMemo(function(){return userPairs.concat(generatedPairs).concat(pinnedPairs);},[generatedPairs,pinnedPairs,userPairs]);return useMemo(function(){// dedupes pairs of tokens in the combined list\nvar keyed=combinedList.reduce(function(memo,_ref4){var _ref5=_slicedToArray(_ref4,2),tokenA=_ref5[0],tokenB=_ref5[1];var sorted=tokenA.sortsBefore(tokenB);var key=sorted?\"\".concat(tokenA.address,\":\").concat(tokenB.address):\"\".concat(tokenB.address,\":\").concat(tokenA.address);if(memo[key])return memo;memo[key]=sorted?[tokenA,tokenB]:[tokenB,tokenA];return memo;},{});return Object.keys(keyed).map(function(key){return keyed[key];});},[combinedList]);}","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/state/user/hooks/index.tsx"],"names":["ChainId","Pair","Token","flatMap","useCallback","useMemo","useDispatch","useSelector","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useActiveWeb3React","useAllTokens","addSerializedPair","addSerializedToken","FarmStakedOnly","muteAudio","removeSerializedToken","toggleTheme","toggleThemeAction","unmuteAudio","updateUserDeadline","updateUserExpertMode","updateUserFarmStakedOnly","updateUserSingleHopOnly","updateUserSlippageTolerance","updateGasPrice","deserializeToken","GAS_PRICE_GWEI","serializeToken","useAudioModeManager","dispatch","audioPlay","state","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","useUserSingleHopOnly","singleHopOnly","userSingleHopOnly","setSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","setUserSlippageTolerance","slippage","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserTransactionTTL","userDeadline","setUserDeadline","deadline","useAddUserToken","token","serializedToken","useRemoveUserAddedToken","chainId","address","useGasPrice","process","env","REACT_APP_CHAIN_ID","userGas","gasPrice","MAINNET","toString","testnet","useGasPriceManager","userGasPrice","setGasPrice","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","getAddress","useTrackedTokenPairs","tokens","pinnedPairs","generatedPairs","Object","keys","tokenAddress","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","key"],"mappings":"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","sourcesContent":["import { ChainId, Pair, Token } from '@pancakeswap/sdk'\r\nimport flatMap from 'lodash/flatMap'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport { AppDispatch, AppState } from '../../index'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  FarmStakedOnly,\r\n  muteAudio,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  toggleTheme as toggleThemeAction,\r\n  unmuteAudio,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserFarmStakedOnly,\r\n  updateUserSingleHopOnly,\r\n  updateUserSlippageTolerance,\r\n  updateGasPrice,\r\n} from '../actions'\r\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\r\n\r\nexport function useAudioModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n\r\n  const toggleSetAudioMode = useCallback(() => {\r\n    if (audioPlay) {\r\n      dispatch(muteAudio())\r\n    } else {\r\n      dispatch(unmuteAudio())\r\n    }\r\n  }, [audioPlay, dispatch])\r\n\r\n  return [audioPlay, toggleSetAudioMode]\r\n}\r\n\r\nexport function useIsExpertMode(): boolean {\r\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\r\n}\r\n\r\nexport function useExpertModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const expertMode = useIsExpertMode()\r\n\r\n  const toggleSetExpertMode = useCallback(() => {\r\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\r\n  }, [expertMode, dispatch])\r\n\r\n  return [expertMode, toggleSetExpertMode]\r\n}\r\n\r\nexport function useThemeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\r\n\r\n  const toggleTheme = useCallback(() => {\r\n    dispatch(toggleThemeAction())\r\n  }, [dispatch])\r\n\r\n  return [isDark, toggleTheme]\r\n}\r\n\r\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\r\n    (state) => state.user.userSingleHopOnly,\r\n  )\r\n\r\n  const setSingleHopOnly = useCallback(\r\n    (newSingleHopOnly: boolean) => {\r\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [singleHopOnly, setSingleHopOnly]\r\n}\r\n\r\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\r\n    return state.user.userSlippageTolerance\r\n  })\r\n\r\n  const setUserSlippageTolerance = useCallback(\r\n    (slippage: number) => {\r\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userSlippageTolerance, setUserSlippageTolerance]\r\n}\r\n\r\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\r\n    return state.user.userFarmStakedOnly\r\n  })\r\n\r\n  const setUserFarmStakedOnly = useCallback(\r\n    (stakedOnly: boolean) => {\r\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\r\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [\r\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\r\n    setUserFarmStakedOnly,\r\n  ]\r\n}\r\n\r\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\r\n    return state.user.userDeadline\r\n  })\r\n\r\n  const setUserDeadline = useCallback(\r\n    (deadline: number) => {\r\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userDeadline, setUserDeadline]\r\n}\r\n\r\nexport function useAddUserToken(): (token: Token) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (token: Token) => {\r\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (chainId: number, address: string) => {\r\n      dispatch(removeSerializedToken({ chainId, address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useGasPrice(): string {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\r\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\r\n}\r\n\r\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userGasPrice = useGasPrice()\r\n\r\n  const setGasPrice = useCallback(\r\n    (gasPrice: string) => {\r\n      dispatch(updateGasPrice({ gasPrice }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userGasPrice, setGasPrice]\r\n}\r\n\r\nfunction serializePair(pair: Pair): SerializedPair {\r\n  return {\r\n    token0: serializeToken(pair.token0),\r\n    token1: serializeToken(pair.token1),\r\n  }\r\n}\r\n\r\nexport function usePairAdder(): (pair: Pair) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (pair: Pair) => {\r\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\r\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\r\n}\r\n\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs(): [Token, Token][] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  // pinned pairs\r\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n\r\n  // pairs for every token against every base\r\n  const generatedPairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress]\r\n            // for each token on the current chain,\r\n            return (\r\n              // loop though all bases on the current chain\r\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                  if (base.address === token.address) {\r\n                    return null\r\n                  }\r\n                  return [base, token]\r\n                })\r\n                .filter((p): p is [Token, Token] => p !== null)\r\n            )\r\n          })\r\n        : [],\r\n    [tokens, chainId],\r\n  )\r\n\r\n  // pairs saved by users\r\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\r\n\r\n  const userPairs: [Token, Token][] = useMemo(() => {\r\n    if (!chainId || !savedSerializedPairs) return []\r\n    const forChain = savedSerializedPairs[chainId]\r\n    if (!forChain) return []\r\n\r\n    return Object.keys(forChain).map((pairId) => {\r\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\r\n    })\r\n  }, [savedSerializedPairs, chainId])\r\n\r\n  const combinedList = useMemo(\r\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\r\n    [generatedPairs, pinnedPairs, userPairs],\r\n  )\r\n\r\n  return useMemo(() => {\r\n    // dedupes pairs of tokens in the combined list\r\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\r\n      const sorted = tokenA.sortsBefore(tokenB)\r\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\r\n      if (memo[key]) return memo\r\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return memo\r\n    }, {})\r\n\r\n    return Object.keys(keyed).map((key) => keyed[key])\r\n  }, [combinedList])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}