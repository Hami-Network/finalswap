{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import BigNumber from'bignumber.js';import{useWeb3React}from'@web3-react/core';import multicall from'utils/multicall';import{getMasterChefAddress}from'utils/addressHelpers';import masterChefABI from'config/abi/masterchef.json';import{farmsConfig}from'config/constants';import useRefresh from'hooks/useRefresh';import{DEFAULT_TOKEN_DECIMAL}from'config';var useFarmsWithBalance=function useFarmsWithBalance(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),farmsWithStakedBalance=_useState2[0],setFarmsWithStakedBalance=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),earningsSum=_useState4[0],setEarningsSum=_useState4[1];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useRefresh=useRefresh(),fastRefresh=_useRefresh.fastRefresh;useEffect(function(){var fetchBalances=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var calls,rawResults,results,farmsWithBalances,totalEarned;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:calls=farmsConfig.map(function(farm){return{address:getMasterChefAddress(),name:'pendingLOKI',params:[farm.pid,account]};});_context.next=3;return multicall(masterChefABI,calls);case 3:rawResults=_context.sent;results=farmsConfig.map(function(farm,index){return _objectSpread(_objectSpread({},farm),{},{balance:new BigNumber(rawResults[index])});});farmsWithBalances=results.filter(function(balanceType){return balanceType.balance.gt(0);});totalEarned=farmsWithBalances.reduce(function(accum,earning){var earningNumber=new BigNumber(earning.balance);if(earningNumber.eq(0)){return accum;}return accum+earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber();},0);setFarmsWithStakedBalance(farmsWithBalances);setEarningsSum(totalEarned);case 9:case\"end\":return _context.stop();}}},_callee);}));return function fetchBalances(){return _ref.apply(this,arguments);};}();if(account){fetchBalances();}},[account,fastRefresh]);return{farmsWithStakedBalance:farmsWithStakedBalance,earningsSum:earningsSum};};export default useFarmsWithBalance;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Home/hooks/useFarmsWithBalance.tsx"],"names":["useEffect","useState","BigNumber","useWeb3React","multicall","getMasterChefAddress","masterChefABI","farmsConfig","useRefresh","DEFAULT_TOKEN_DECIMAL","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","account","fastRefresh","fetchBalances","calls","map","farm","address","name","params","pid","rawResults","results","index","balance","farmsWithBalances","filter","balanceType","gt","totalEarned","reduce","accum","earning","earningNumber","eq","div","toNumber"],"mappings":"omBAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CACA,OAASC,oBAAT,KAAqC,sBAArC,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,OAASC,qBAAT,KAAsC,QAAtC,CAMA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAChC,cAA4DT,QAAQ,CAAoB,EAApB,CAApE,wCAAOU,sBAAP,eAA+BC,yBAA/B,eACA,eAAsCX,QAAQ,CAAS,IAAT,CAA9C,yCAAOY,WAAP,eAAoBC,cAApB,eACA,kBAAoBX,YAAY,EAAhC,CAAQY,OAAR,eAAQA,OAAR,CACA,gBAAwBP,UAAU,EAAlC,CAAQQ,WAAR,aAAQA,WAAR,CAEAhB,SAAS,CAAC,UAAM,CACd,GAAMiB,CAAAA,aAAa,0FAAG,8LACdC,KADc,CACNX,WAAW,CAACY,GAAZ,CAAgB,SAACC,IAAD,QAAW,CACvCC,OAAO,CAAEhB,oBAAoB,EADU,CAEvCiB,IAAI,CAAE,aAFiC,CAGvCC,MAAM,CAAE,CAACH,IAAI,CAACI,GAAN,CAAWT,OAAX,CAH+B,CAAX,EAAhB,CADM,uBAOKX,CAAAA,SAAS,CAACE,aAAD,CAAgBY,KAAhB,CAPd,QAOdO,UAPc,eAQdC,OARc,CAQJnB,WAAW,CAACY,GAAZ,CAAgB,SAACC,IAAD,CAAOO,KAAP,wCAAuBP,IAAvB,MAA6BQ,OAAO,CAAE,GAAI1B,CAAAA,SAAJ,CAAcuB,UAAU,CAACE,KAAD,CAAxB,CAAtC,IAAhB,CARI,CASdE,iBATc,CASMH,OAAO,CAACI,MAAR,CAAe,SAACC,WAAD,QAAiBA,CAAAA,WAAW,CAACH,OAAZ,CAAoBI,EAApB,CAAuB,CAAvB,CAAjB,EAAf,CATN,CAUdC,WAVc,CAUAJ,iBAAiB,CAACK,MAAlB,CAAyB,SAACC,KAAD,CAAQC,OAAR,CAAoB,CAC/D,GAAMC,CAAAA,aAAa,CAAG,GAAInC,CAAAA,SAAJ,CAAckC,OAAO,CAACR,OAAtB,CAAtB,CACA,GAAIS,aAAa,CAACC,EAAd,CAAiB,CAAjB,CAAJ,CAAyB,CACvB,MAAOH,CAAAA,KAAP,CACD,CACD,MAAOA,CAAAA,KAAK,CAAGE,aAAa,CAACE,GAAd,CAAkB9B,qBAAlB,EAAyC+B,QAAzC,EAAf,CACD,CANmB,CAMjB,CANiB,CAVA,CAkBpB5B,yBAAyB,CAACiB,iBAAD,CAAzB,CACAf,cAAc,CAACmB,WAAD,CAAd,CAnBoB,sDAAH,kBAAbhB,CAAAA,aAAa,0CAAnB,CAsBA,GAAIF,OAAJ,CAAa,CACXE,aAAa,GACd,CACF,CA1BQ,CA0BN,CAACF,OAAD,CAAUC,WAAV,CA1BM,CAAT,CA4BA,MAAO,CAAEL,sBAAsB,CAAtBA,sBAAF,CAA0BE,WAAW,CAAXA,WAA1B,CAAP,CACD,CAnCD,CAqCA,cAAeH,CAAAA,mBAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { FarmConfig } from 'config/constants/types'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\n\r\nexport interface FarmWithBalance extends FarmConfig {\r\n  balance: BigNumber\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\r\n  const [earningsSum, setEarningsSum] = useState<number>(null)\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingLOKI',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const rawResults = await multicall(masterChefABI, calls)\r\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\r\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\r\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\r\n        const earningNumber = new BigNumber(earning.balance)\r\n        if (earningNumber.eq(0)) {\r\n          return accum\r\n        }\r\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\r\n      }, 0)\r\n\r\n      setFarmsWithStakedBalance(farmsWithBalances)\r\n      setEarningsSum(totalEarned)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return { farmsWithStakedBalance, earningsSum }\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n"]},"metadata":{},"sourceType":"module"}