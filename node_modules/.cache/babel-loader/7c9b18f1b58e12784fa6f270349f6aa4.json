{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createSlice}from'@reduxjs/toolkit';import getProfile from'./getProfile';var initialState={isInitialized:false,isLoading:true,hasRegistered:false,data:null};export var profileSlice=createSlice({name:'profile',initialState:initialState,reducers:{profileFetchStart:function profileFetchStart(state){state.isLoading=true;},profileFetchSucceeded:function profileFetchSucceeded(_state,action){var _action$payload=action.payload,profile=_action$payload.profile,hasRegistered=_action$payload.hasRegistered;return{isInitialized:true,isLoading:false,hasRegistered:hasRegistered,data:profile};},profileFetchFailed:function profileFetchFailed(state){state.isLoading=false;state.isInitialized=true;},profileClear:function profileClear(){return _objectSpread(_objectSpread({},initialState),{},{isLoading:false});},addPoints:function addPoints(state,action){state.data.points+=action.payload;}}});// Actions\nvar _profileSlice$actions=profileSlice.actions,profileFetchStart=_profileSlice$actions.profileFetchStart,profileFetchSucceeded=_profileSlice$actions.profileFetchSucceeded,profileFetchFailed=_profileSlice$actions.profileFetchFailed,profileClear=_profileSlice$actions.profileClear,addPoints=_profileSlice$actions.addPoints;// Thunks\n// TODO: this should be an AsyncThunk\nexport{profileFetchStart,profileFetchSucceeded,profileFetchFailed,profileClear,addPoints};export var fetchProfile=function fetchProfile(address){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch(profileFetchStart());_context.next=4;return getProfile(address);case 4:response=_context.sent;dispatch(profileFetchSucceeded(response));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);dispatch(profileFetchFailed());case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export default profileSlice.reducer;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/state/profile/index.tsx"],"names":["createSlice","getProfile","initialState","isInitialized","isLoading","hasRegistered","data","profileSlice","name","reducers","profileFetchStart","state","profileFetchSucceeded","_state","action","payload","profile","profileFetchFailed","profileClear","addPoints","points","actions","fetchProfile","address","dispatch","response","reducer"],"mappings":"0cAAA,OAASA,WAAT,KAA2C,kBAA3C,CAGA,MAAOC,CAAAA,UAAP,KAA+C,cAA/C,CAEA,GAAMC,CAAAA,YAA0B,CAAG,CACjCC,aAAa,CAAE,KADkB,CAEjCC,SAAS,CAAE,IAFsB,CAGjCC,aAAa,CAAE,KAHkB,CAIjCC,IAAI,CAAE,IAJ2B,CAAnC,CAOA,MAAO,IAAMC,CAAAA,YAAY,CAAGP,WAAW,CAAC,CACtCQ,IAAI,CAAE,SADgC,CAEtCN,YAAY,CAAZA,YAFsC,CAGtCO,QAAQ,CAAE,CACRC,iBAAiB,CAAE,2BAACC,KAAD,CAAW,CAC5BA,KAAK,CAACP,SAAN,CAAkB,IAAlB,CACD,CAHO,CAIRQ,qBAAqB,CAAE,+BAACC,MAAD,CAASC,MAAT,CAAuD,CAC5E,oBAAmCA,MAAM,CAACC,OAA1C,CAAQC,OAAR,iBAAQA,OAAR,CAAiBX,aAAjB,iBAAiBA,aAAjB,CAEA,MAAO,CACLF,aAAa,CAAE,IADV,CAELC,SAAS,CAAE,KAFN,CAGLC,aAAa,CAAbA,aAHK,CAILC,IAAI,CAAEU,OAJD,CAAP,CAMD,CAbO,CAcRC,kBAAkB,CAAE,4BAACN,KAAD,CAAW,CAC7BA,KAAK,CAACP,SAAN,CAAkB,KAAlB,CACAO,KAAK,CAACR,aAAN,CAAsB,IAAtB,CACD,CAjBO,CAkBRe,YAAY,CAAE,8DACThB,YADS,MAEZE,SAAS,CAAE,KAFC,IAlBN,CAsBRe,SAAS,CAAE,mBAACR,KAAD,CAAQG,MAAR,CAA0C,CACnDH,KAAK,CAACL,IAAN,CAAWc,MAAX,EAAqBN,MAAM,CAACC,OAA5B,CACD,CAxBO,CAH4B,CAAD,CAAhC,CA+BP;AACO,0BACLR,YAAY,CAACc,OADR,CAAQX,iBAAR,uBAAQA,iBAAR,CAA2BE,qBAA3B,uBAA2BA,qBAA3B,CAAkDK,kBAAlD,uBAAkDA,kBAAlD,CAAsEC,YAAtE,uBAAsEA,YAAtE,CAAoFC,SAApF,uBAAoFA,SAApF,CAGP;AACA;0FACA,MAAO,IAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,iGAAqB,iBAAOC,QAAP,+IAE7CA,QAAQ,CAACd,iBAAiB,EAAlB,CAAR,CAF6C,sBAGtBT,CAAAA,UAAU,CAACsB,OAAD,CAHY,QAGvCE,QAHuC,eAI7CD,QAAQ,CAACZ,qBAAqB,CAACa,QAAD,CAAtB,CAAR,CAJ6C,+EAM7CD,QAAQ,CAACP,kBAAkB,EAAnB,CAAR,CAN6C,oEAArB,gEAArB,CAUP,cAAeV,CAAAA,YAAY,CAACmB,OAA5B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileState } from 'state/types'\r\nimport type { AppDispatch } from 'state'\r\nimport getProfile, { GetProfileResponse } from './getProfile'\r\n\r\nconst initialState: ProfileState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  hasRegistered: false,\r\n  data: null,\r\n}\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileFetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\r\n      const { profile, hasRegistered } = action.payload\r\n\r\n      return {\r\n        isInitialized: true,\r\n        isLoading: false,\r\n        hasRegistered,\r\n        data: profile,\r\n      }\r\n    },\r\n    profileFetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    profileClear: () => ({\r\n      ...initialState,\r\n      isLoading: false,\r\n    }),\r\n    addPoints: (state, action: PayloadAction<number>) => {\r\n      state.data.points += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\r\n  profileSlice.actions\r\n\r\n// Thunks\r\n// TODO: this should be an AsyncThunk\r\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(profileFetchStart())\r\n    const response = await getProfile(address)\r\n    dispatch(profileFetchSucceeded(response))\r\n  } catch (error) {\r\n    dispatch(profileFetchFailed())\r\n  }\r\n}\r\n\r\nexport default profileSlice.reducer\r\n"]},"metadata":{},"sourceType":"module"}