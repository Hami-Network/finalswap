{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97154\\\\swap\\\\hami\\\\LokiswapUI\\\\src\\\\views\\\\Home\\\\components\\\\EarnuptoPool.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef } from 'react';\nimport { Card, CardBody, Heading, Text, Skeleton, Link, ArrowForwardIcon } from '@pancakeswap/uikit';\nimport { ChainId } from '@pancakeswap/sdk';\nimport BigNumber from 'bignumber.js/bignumber';\nimport styled from 'styled-components';\nimport { useTranslation } from 'contexts/Localization';\nimport { getFarmApr } from 'utils/apr';\nimport { useFarms, usePriceCakeBusd } from 'state/farms/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`;\n_c = StyledCakeStats;\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\n_c2 = Row;\n\nconst EarnuptoPool = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    data: farms\n  } = useFarms();\n  const cakePrice = usePriceCakeBusd();\n  const maxAPY = useRef(Number.MIN_VALUE);\n\n  const getHighestAPY = () => {\n    const activeFarms = farms.filter(farm => farm.multiplier !== '0X');\n    calculateAPY(activeFarms);\n    return maxAPY.current.toLocaleString('en-US').slice(0, -1);\n  };\n\n  const calculateAPY = useCallback(farmsToDisplay => {\n    let apy = 0;\n    farmsToDisplay.map(farm => {\n      if (farm.isTokenOnly) {\n        const totalLiquidity = farm.isTokenOnly ? new BigNumber(farm.lpTotalInQuoteToken).times(farm.token.busdPrice) : new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice);\n        const {\n          cakeRewardsApr\n        } = getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET], new BigNumber(farm.lokipersecond));\n        apy = cakeRewardsApr;\n        if (maxAPY.current < apy) maxAPY.current = apy;\n      }\n\n      return apy;\n    });\n  }, [cakePrice]);\n  return /*#__PURE__*/_jsxDEV(StyledCakeStats, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/farms\",\n      style: {\n        width: '100%',\n        textDecoration: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          scale: \"lg\",\n          mb: \"24px\",\n          children: t('Earn Up to')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"36px\",\n            style: {\n              color: '#4B45BE',\n              fontWeight: 600\n            },\n            children: getHighestAPY() ? `${getHighestAPY()}%` : /*#__PURE__*/_jsxDEV(Skeleton, {\n              animation: \"pulse\",\n              variant: \"rect\",\n              height: \"44px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            children: t('APR in Pools')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EarnuptoPool, \"agUdcQ1T8l1GWwSKVMtASsfnewQ=\", false, function () {\n  return [useTranslation, useFarms, usePriceCakeBusd];\n});\n\n_c3 = EarnuptoPool;\nexport default EarnuptoPool;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledCakeStats\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"EarnuptoPool\");","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Home/components/EarnuptoPool.tsx"],"names":["React","useCallback","useRef","Card","CardBody","Heading","Text","Skeleton","Link","ArrowForwardIcon","ChainId","BigNumber","styled","useTranslation","getFarmApr","useFarms","usePriceCakeBusd","StyledCakeStats","Row","div","EarnuptoPool","t","data","farms","cakePrice","maxAPY","Number","MIN_VALUE","getHighestAPY","activeFarms","filter","farm","multiplier","calculateAPY","current","toLocaleString","slice","farmsToDisplay","apy","map","isTokenOnly","totalLiquidity","lpTotalInQuoteToken","times","token","busdPrice","quoteToken","cakeRewardsApr","poolWeight","lpAddresses","MAINNET","lokipersecond","width","textDecoration","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from 'react'\r\nimport { Card, CardBody, Heading, Text, Skeleton, Link, ArrowForwardIcon } from '@pancakeswap/uikit'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFarmApr } from 'utils/apr'\r\nimport { useFarms, usePriceCakeBusd } from 'state/farms/hooks'\r\n\r\nconst StyledCakeStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst EarnuptoPool = () => {\r\n  const { t } = useTranslation()\r\n  const { data: farms } = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const maxAPY = useRef(Number.MIN_VALUE)\r\n\r\n  const getHighestAPY = () => {\r\n    const activeFarms = farms.filter((farm) => farm.multiplier !== '0X')\r\n    calculateAPY(activeFarms)\r\n    return (maxAPY.current).toLocaleString('en-US').slice(0, -1)\r\n  }\r\n\r\n  const calculateAPY = useCallback(\r\n    (farmsToDisplay) => {\r\n      let apy = 0\r\n      farmsToDisplay.map((farm) => {\r\n        if(farm.isTokenOnly){\r\n          const totalLiquidity = farm.isTokenOnly ? new BigNumber(farm.lpTotalInQuoteToken).times(farm.token.busdPrice) : new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\r\n          const { cakeRewardsApr } = getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET], new BigNumber(farm.lokipersecond))\r\n          apy = cakeRewardsApr\r\n        if (maxAPY.current < apy) maxAPY.current = apy\r\n      }\r\n      return apy\r\n    })\r\n  },\r\n    [ cakePrice],\r\n  )\r\n\r\n  return (\r\n    <StyledCakeStats>\r\n      <Link href=\"/farms\" style={{width: '100%', textDecoration:'none'}}>\r\n       <CardBody style={{width: '100%'}}>\r\n        <Heading scale=\"lg\" mb=\"24px\">\r\n          {t('Earn Up to')}\r\n        </Heading>\r\n        <Row>\r\n          <Text fontSize=\"36px\" style={{color:'#4B45BE', fontWeight: 600}} >{getHighestAPY() ? (\r\n            `${getHighestAPY()}%`\r\n          ) : (\r\n            <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />\r\n          )}</Text>\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{t('APR in Pools')}</Text>\r\n          <ArrowForwardIcon />\r\n        </Row>\r\n      </CardBody>\r\n      </Link>\r\n    </StyledCakeStats>\r\n  )\r\n}\r\n\r\nexport default EarnuptoPool"]},"metadata":{},"sourceType":"module"}