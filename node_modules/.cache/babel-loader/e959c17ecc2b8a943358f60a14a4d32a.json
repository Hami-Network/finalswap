{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useCallback,useRef}from'react';import{Card,CardBody,Heading,Text,Skeleton,Link,ArrowForwardIcon}from'@pancakeswap/uikit';import{ChainId}from'@pancakeswap/sdk';import BigNumber from'bignumber.js/bignumber';import styled from'styled-components';import{useTranslation}from'contexts/Localization';import{getFarmApr}from'utils/apr';import{useFarms,usePriceCakeBusd}from'state/farms/hooks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledCakeStats=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: auto;\\n\"])));var Row=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  display: flex;\\n  font-size: 14px;\\n  justify-content: space-between;\\n  margin-bottom: 8px;\\n\"])));var EarnuptoPool=function EarnuptoPool(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useFarms=useFarms(),farms=_useFarms.data;var cakePrice=usePriceCakeBusd();var maxAPY=useRef(Number.MIN_VALUE);var getHighestAPY=function getHighestAPY(){var activeFarms=farms.filter(function(farm){return farm.multiplier!=='0X';});calculateAPY(activeFarms);return maxAPY.current.toLocaleString('en-US').slice(0,-1);};var calculateAPY=useCallback(function(farmsToDisplay){var apy=0;farmsToDisplay.map(function(farm){if(farm.isTokenOnly){var totalLiquidity=farm.isTokenOnly?new BigNumber(farm.lpTotalInQuoteToken).times(farm.token.busdPrice):new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice);var _getFarmApr=getFarmApr(new BigNumber(farm.poolWeight),cakePrice,totalLiquidity,farm.lpAddresses[ChainId.MAINNET],new BigNumber(farm.lokipersecond)),cakeRewardsApr=_getFarmApr.cakeRewardsApr;apy=cakeRewardsApr;if(maxAPY.current<apy)maxAPY.current=apy;}return apy;});},[cakePrice]);return/*#__PURE__*/_jsx(StyledCakeStats,{children:/*#__PURE__*/_jsx(Link,{href:\"/farms\",style:{width:'100%',textDecoration:'none'},children:/*#__PURE__*/_jsxs(CardBody,{style:{width:'100%'},children:[/*#__PURE__*/_jsx(Heading,{scale:\"lg\",mb:\"24px\",children:t('Earn Up to')}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"36px\",style:{color:'#4B45BE',fontWeight:600},children:getHighestAPY()?\"\".concat(getHighestAPY(),\"%\"):/*#__PURE__*/_jsx(Skeleton,{animation:\"pulse\",variant:\"rect\",height:\"44px\"})})}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:t('APR in Pools')}),/*#__PURE__*/_jsx(ArrowForwardIcon,{})]})]})})});};export default EarnuptoPool;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Home/components/EarnuptoPool.tsx"],"names":["React","useCallback","useRef","Card","CardBody","Heading","Text","Skeleton","Link","ArrowForwardIcon","ChainId","BigNumber","styled","useTranslation","getFarmApr","useFarms","usePriceCakeBusd","StyledCakeStats","Row","div","EarnuptoPool","t","farms","data","cakePrice","maxAPY","Number","MIN_VALUE","getHighestAPY","activeFarms","filter","farm","multiplier","calculateAPY","current","toLocaleString","slice","farmsToDisplay","apy","map","isTokenOnly","totalLiquidity","lpTotalInQuoteToken","times","token","busdPrice","quoteToken","poolWeight","lpAddresses","MAINNET","lokipersecond","cakeRewardsApr","width","textDecoration","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from 'react'\r\nimport { Card, CardBody, Heading, Text, Skeleton, Link, ArrowForwardIcon } from '@pancakeswap/uikit'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFarmApr } from 'utils/apr'\r\nimport { useFarms, usePriceCakeBusd } from 'state/farms/hooks'\r\n\r\nconst StyledCakeStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst EarnuptoPool = () => {\r\n  const { t } = useTranslation()\r\n  const { data: farms } = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const maxAPY = useRef(Number.MIN_VALUE)\r\n\r\n  const getHighestAPY = () => {\r\n    const activeFarms = farms.filter((farm) => farm.multiplier !== '0X')\r\n    calculateAPY(activeFarms)\r\n    return (maxAPY.current).toLocaleString('en-US').slice(0, -1)\r\n  }\r\n\r\n  const calculateAPY = useCallback(\r\n    (farmsToDisplay) => {\r\n      let apy = 0\r\n      farmsToDisplay.map((farm) => {\r\n        if(farm.isTokenOnly){\r\n          const totalLiquidity = farm.isTokenOnly ? new BigNumber(farm.lpTotalInQuoteToken).times(farm.token.busdPrice) : new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\r\n          const { cakeRewardsApr } = getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET], new BigNumber(farm.lokipersecond))\r\n          apy = cakeRewardsApr\r\n        if (maxAPY.current < apy) maxAPY.current = apy\r\n      }\r\n      return apy\r\n    })\r\n  },\r\n    [ cakePrice],\r\n  )\r\n\r\n  return (\r\n    <StyledCakeStats>\r\n      <Link href=\"/farms\" style={{width: '100%', textDecoration:'none'}}>\r\n       <CardBody style={{width: '100%'}}>\r\n        <Heading scale=\"lg\" mb=\"24px\">\r\n          {t('Earn Up to')}\r\n        </Heading>\r\n        <Row>\r\n          <Text fontSize=\"36px\" style={{color:'#4B45BE', fontWeight: 600}} >{getHighestAPY() ? (\r\n            `${getHighestAPY()}%`\r\n          ) : (\r\n            <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />\r\n          )}</Text>\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{t('APR in Pools')}</Text>\r\n          <ArrowForwardIcon />\r\n        </Row>\r\n      </CardBody>\r\n      </Link>\r\n    </StyledCakeStats>\r\n  )\r\n}\r\n\r\nexport default EarnuptoPool"]},"metadata":{},"sourceType":"module"}