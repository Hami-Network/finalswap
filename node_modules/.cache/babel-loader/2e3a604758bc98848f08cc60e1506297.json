{"ast":null,"code":"import React from'react';import{Box,Button,Flex,LinkExternal,Message,Text}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import useTokenBalance,{useGetBnbBalance}from'hooks/useTokenBalance';import{getCakeAddress}from'utils/addressHelpers';import useAuth from'hooks/useAuth';import{useTranslation}from'contexts/Localization';import{getBscScanLink}from'utils';import{getFullDisplayBalance}from'utils/formatBalance';import CopyAddress from'./CopyAddress';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var WalletInfo=function WalletInfo(_ref){var hasLowBnbBalance=_ref.hasLowBnbBalance,onDismiss=_ref.onDismiss;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useGetBnbBalance=useGetBnbBalance(),balance=_useGetBnbBalance.balance;var _useTokenBalance=useTokenBalance(getCakeAddress()),cakeBalance=_useTokenBalance.balance;var _useAuth=useAuth(),logout=_useAuth.logout;var handleLogout=function handleLogout(){onDismiss();logout();};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{color:\"secondary\",fontSize:\"12px\",textTransform:\"uppercase\",fontWeight:\"bold\",mb:\"8px\",children:t('Your Address')}),/*#__PURE__*/_jsx(CopyAddress,{account:account,mb:\"24px\"}),hasLowBnbBalance&&/*#__PURE__*/_jsx(Message,{variant:\"warning\",mb:\"24px\",children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",children:t('BNB Balance Low')}),/*#__PURE__*/_jsx(Text,{as:\"p\",children:t('You need BNB for transaction fees.')})]})}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",children:t('BNB Balance')}),/*#__PURE__*/_jsx(Text,{children:getFullDisplayBalance(balance,18,6)})]}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mb:\"24px\",children:[/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",children:t('HAMI Balance')}),/*#__PURE__*/_jsx(Text,{children:getFullDisplayBalance(cakeBalance,18,3)})]}),/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",justifyContent:\"end\",mb:\"24px\",children:/*#__PURE__*/_jsx(LinkExternal,{href:getBscScanLink(account,'address'),children:t('View on BscScan')})}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",width:\"100%\",onClick:handleLogout,children:t('Disconnect Wallet')})]});};export default WalletInfo;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/components/Menu/UserMenu/WalletInfo.tsx"],"names":["React","Box","Button","Flex","LinkExternal","Message","Text","useWeb3React","useTokenBalance","useGetBnbBalance","getCakeAddress","useAuth","useTranslation","getBscScanLink","getFullDisplayBalance","CopyAddress","WalletInfo","hasLowBnbBalance","onDismiss","t","account","balance","cakeBalance","logout","handleLogout"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBscScanLink } from 'utils'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport CopyAddress from './CopyAddress'\r\n\r\ninterface WalletInfoProps {\r\n  hasLowBnbBalance: boolean\r\n  onDismiss: InjectedModalProps['onDismiss']\r\n}\r\n\r\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { balance } = useGetBnbBalance()\r\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\r\n  const { logout } = useAuth()\r\n\r\n  const handleLogout = () => {\r\n    onDismiss()\r\n    logout()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\r\n        {t('Your Address')}\r\n      </Text>\r\n      <CopyAddress account={account} mb=\"24px\" />\r\n      {hasLowBnbBalance && (\r\n        <Message variant=\"warning\" mb=\"24px\">\r\n          <Box>\r\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\r\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\r\n          </Box>\r\n        </Message>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\r\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text color=\"textSubtle\">{t('HAMI Balance')}</Text>\r\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\r\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on BscScan')}</LinkExternal>\r\n      </Flex>\r\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\r\n        {t('Disconnect Wallet')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WalletInfo\r\n"]},"metadata":{},"sourceType":"module"}