{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants';\nimport { updateVersion } from '../global/actions';\nimport { addSerializedPair, addSerializedToken, removeSerializedPair, removeSerializedToken, updateUserExpertMode, updateUserSlippageTolerance, updateUserDeadline, updateUserSingleHopOnly, updateGasPrice, muteAudio, unmuteAudio, toggleTheme, updateUserFarmStakedOnly, FarmStakedOnly } from './actions';\nimport { GAS_PRICE_GWEI } from './hooks/helpers';\n\nconst currentTimestamp = () => new Date().getTime();\n\nfunction pairKey(token0Address, token1Address) {\n  return `${token0Address};${token1Address}`;\n}\n\nexport const initialState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  gasPrice: GAS_PRICE_GWEI.default\n};\nexport default createReducer(initialState, builder => builder.addCase(updateVersion, state => {\n  // slippage isnt being tracked in local storage, reset to default\n  // noinspection SuspiciousTypeOfGuard\n  if (typeof state.userSlippageTolerance !== 'number') {\n    state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE;\n  } // deadline isnt being tracked in local storage, reset to default\n  // noinspection SuspiciousTypeOfGuard\n\n\n  if (typeof state.userDeadline !== 'number') {\n    state.userDeadline = DEFAULT_DEADLINE_FROM_NOW;\n  }\n\n  state.lastUpdateVersionTimestamp = currentTimestamp();\n}).addCase(updateUserExpertMode, (state, action) => {\n  state.userExpertMode = action.payload.userExpertMode;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserSlippageTolerance, (state, action) => {\n  state.userSlippageTolerance = action.payload.userSlippageTolerance;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserDeadline, (state, action) => {\n  state.userDeadline = action.payload.userDeadline;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserSingleHopOnly, (state, action) => {\n  state.userSingleHopOnly = action.payload.userSingleHopOnly;\n}).addCase(addSerializedToken, (state, {\n  payload: {\n    serializedToken\n  }\n}) => {\n  if (!state.tokens) {\n    state.tokens = {};\n  }\n\n  state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {};\n  state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken;\n  state.timestamp = currentTimestamp();\n}).addCase(removeSerializedToken, (state, {\n  payload: {\n    address,\n    chainId\n  }\n}) => {\n  if (!state.tokens) {\n    state.tokens = {};\n  }\n\n  state.tokens[chainId] = state.tokens[chainId] || {};\n  delete state.tokens[chainId][address];\n  state.timestamp = currentTimestamp();\n}).addCase(addSerializedPair, (state, {\n  payload: {\n    serializedPair\n  }\n}) => {\n  if (serializedPair.token0.chainId === serializedPair.token1.chainId && serializedPair.token0.address !== serializedPair.token1.address) {\n    const {\n      chainId\n    } = serializedPair.token0;\n    state.pairs[chainId] = state.pairs[chainId] || {};\n    state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair;\n  }\n\n  state.timestamp = currentTimestamp();\n}).addCase(removeSerializedPair, (state, {\n  payload: {\n    chainId,\n    tokenAAddress,\n    tokenBAddress\n  }\n}) => {\n  if (state.pairs[chainId]) {\n    // just delete both keys if either exists\n    delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)];\n    delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)];\n  }\n\n  state.timestamp = currentTimestamp();\n}).addCase(muteAudio, state => {\n  state.audioPlay = false;\n}).addCase(unmuteAudio, state => {\n  state.audioPlay = true;\n}).addCase(toggleTheme, state => {\n  state.isDark = !state.isDark;\n}).addCase(updateUserFarmStakedOnly, (state, {\n  payload: {\n    userFarmStakedOnly\n  }\n}) => {\n  state.userFarmStakedOnly = userFarmStakedOnly;\n}).addCase(updateGasPrice, (state, action) => {\n  state.gasPrice = action.payload.gasPrice;\n}));","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/state/user/reducer.ts"],"names":["createReducer","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","updateVersion","addSerializedPair","addSerializedToken","removeSerializedPair","removeSerializedToken","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","updateUserSingleHopOnly","updateGasPrice","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","FarmStakedOnly","GAS_PRICE_GWEI","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","initialState","userExpertMode","userSingleHopOnly","userSlippageTolerance","userDeadline","tokens","pairs","timestamp","audioPlay","isDark","userFarmStakedOnly","ON_FINISHED","gasPrice","default","builder","addCase","state","lastUpdateVersionTimestamp","action","payload","serializedToken","chainId","address","serializedPair","token0","token1","tokenAAddress","tokenBAddress"],"mappings":"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","sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\r\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\r\nimport { updateVersion } from '../global/actions'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  updateUserDeadline,\r\n  updateUserSingleHopOnly,\r\n  updateGasPrice,\r\n  muteAudio,\r\n  unmuteAudio,\r\n  toggleTheme,\r\n  updateUserFarmStakedOnly,\r\n  FarmStakedOnly,\r\n} from './actions'\r\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\r\n\r\nconst currentTimestamp = () => new Date().getTime()\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number\r\n\r\n  userExpertMode: boolean\r\n\r\n  // only allow swaps on direct pairs\r\n  userSingleHopOnly: boolean\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken\r\n    }\r\n  }\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair\r\n    }\r\n  }\r\n\r\n  timestamp: number\r\n  audioPlay: boolean\r\n  isDark: boolean\r\n  userFarmStakedOnly: FarmStakedOnly\r\n  gasPrice: string\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userExpertMode: false,\r\n  userSingleHopOnly: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  audioPlay: true,\r\n  isDark: false,\r\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\r\n  gasPrice: GAS_PRICE_GWEI.default,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateVersion, (state) => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSingleHopOnly, (state, action) => {\r\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      if (!state.tokens) {\r\n        state.tokens = {}\r\n      }\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      if (!state.tokens) {\r\n        state.tokens = {}\r\n      }\r\n      state.tokens[chainId] = state.tokens[chainId] || {}\r\n      delete state.tokens[chainId][address]\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const { chainId } = serializedPair.token0\r\n        state.pairs[chainId] = state.pairs[chainId] || {}\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(muteAudio, (state) => {\r\n      state.audioPlay = false\r\n    })\r\n    .addCase(unmuteAudio, (state) => {\r\n      state.audioPlay = true\r\n    })\r\n    .addCase(toggleTheme, (state) => {\r\n      state.isDark = !state.isDark\r\n    })\r\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\r\n      state.userFarmStakedOnly = userFarmStakedOnly\r\n    })\r\n    .addCase(updateGasPrice, (state, action) => {\r\n      state.gasPrice = action.payload.gasPrice\r\n    }),\r\n)\r\n"]},"metadata":{},"sourceType":"module"}