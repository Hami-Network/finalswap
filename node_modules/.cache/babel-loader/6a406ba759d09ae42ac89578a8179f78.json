{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import styled from'styled-components';import{useFarmUser}from'state/farms/hooks';import{useTranslation}from'contexts/Localization';import{Text}from'@pancakeswap/uikit';import{getBalanceNumber}from'utils/formatBalance';import{TokenPairImage,TokenImage}from'components/TokenImage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding-left: 16px;\\n  display: flex;\\n  align-items: center;\\n\\n  \",\" {\\n    padding-left: 32px;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.sm;});var TokenWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding-right: 8px;\\n  width: 24px;\\n\\n  \",\" {\\n    width: 40px;\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.sm;});var Farm=function Farm(_ref3){var token=_ref3.token,quoteToken=_ref3.quoteToken,label=_ref3.label,pid=_ref3.pid,isTokenOnly=_ref3.isTokenOnly;var _useFarmUser=useFarmUser(pid),stakedBalance=_useFarmUser.stakedBalance;var _useTranslation=useTranslation(),t=_useTranslation.t;var rawStakedBalance=getBalanceNumber(stakedBalance);var handleRenderFarming=function handleRenderFarming(){if(rawStakedBalance){return/*#__PURE__*/_jsx(Text,{color:\"secondary\",fontSize:\"12px\",bold:true,textTransform:\"uppercase\",children:t('Farming')});}return null;};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(TokenWrapper,{children:isTokenOnly?/*#__PURE__*/_jsx(TokenImage,{token:token,width:64,height:64}):/*#__PURE__*/_jsx(TokenPairImage,{variant:\"inverted\",primaryToken:token,secondaryToken:quoteToken,width:64,height:64})}),/*#__PURE__*/_jsxs(\"div\",{children:[handleRenderFarming(),/*#__PURE__*/_jsx(Text,{bold:true,children:label})]})]});};export default Farm;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Farms/components/FarmTable/Farm.tsx"],"names":["React","styled","useFarmUser","useTranslation","Text","getBalanceNumber","TokenPairImage","TokenImage","Container","div","theme","mediaQueries","sm","TokenWrapper","Farm","token","quoteToken","label","pid","isTokenOnly","stakedBalance","t","rawStakedBalance","handleRenderFarming"],"mappings":"+MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,WAAT,KAA4B,mBAA5B,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,IAAT,KAAqB,oBAArB,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CAEA,OAASC,cAAT,CAAyBC,UAAzB,KAA2C,uBAA3C,C,wFAUA,GAAMC,CAAAA,SAAS,CAAGP,MAAM,CAACQ,GAAV,6KAKX,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EALW,CAAf,CAUA,GAAMC,CAAAA,YAAY,CAAGZ,MAAM,CAACQ,GAAV,8IAId,mBAAGC,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EAJc,CAAlB,CASA,GAAME,CAAAA,IAAwC,CAAG,QAA3CA,CAAAA,IAA2C,OAAoD,IAAjDC,CAAAA,KAAiD,OAAjDA,KAAiD,CAA1CC,UAA0C,OAA1CA,UAA0C,CAA9BC,KAA8B,OAA9BA,KAA8B,CAAvBC,GAAuB,OAAvBA,GAAuB,CAAlBC,WAAkB,OAAlBA,WAAkB,CACnG,iBAA0BjB,WAAW,CAACgB,GAAD,CAArC,CAAQE,aAAR,cAAQA,aAAR,CACA,oBAAcjB,cAAc,EAA5B,CAAQkB,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,gBAAgB,CAAGjB,gBAAgB,CAACe,aAAD,CAAzC,CAEA,GAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAmB,CAC7C,GAAID,gBAAJ,CAAsB,CACpB,mBACE,KAAC,IAAD,EAAM,KAAK,CAAC,WAAZ,CAAwB,QAAQ,CAAC,MAAjC,CAAwC,IAAI,KAA5C,CAA6C,aAAa,CAAC,WAA3D,UACGD,CAAC,CAAC,SAAD,CADJ,EADF,CAKD,CAED,MAAO,KAAP,CACD,CAVD,CAYA,mBACE,MAAC,SAAD,yBACE,KAAC,YAAD,WAEIF,WAAW,cACX,KAAC,UAAD,EAAY,KAAK,CAAEJ,KAAnB,CAA0B,KAAK,CAAE,EAAjC,CAAqC,MAAM,CAAE,EAA7C,EADW,cAEX,KAAC,cAAD,EAAgB,OAAO,CAAC,UAAxB,CAAmC,YAAY,CAAEA,KAAjD,CAAwD,cAAc,CAAEC,UAAxE,CAAoF,KAAK,CAAE,EAA3F,CAA+F,MAAM,CAAE,EAAvG,EAJJ,EADF,cAQE,uBACGO,mBAAmB,EADtB,cAEE,KAAC,IAAD,EAAM,IAAI,KAAV,UAAYN,KAAZ,EAFF,GARF,GADF,CAeD,CAhCD,CAkCA,cAAeH,CAAAA,IAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/farms/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Token } from 'config/constants/types'\r\nimport { TokenPairImage, TokenImage } from 'components/TokenImage'\r\n\r\nexport interface FarmProps {\r\n  label: string\r\n  pid: number\r\n  token: Token\r\n  quoteToken: Token\r\n  isTokenOnly?: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding-left: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst TokenWrapper = styled.div`\r\n  padding-right: 8px;\r\n  width: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: 40px;\r\n  }\r\n`\r\n\r\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid, isTokenOnly }) => {\r\n  const { stakedBalance } = useFarmUser(pid)\r\n  const { t } = useTranslation()\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n\r\n  const handleRenderFarming = (): JSX.Element => {\r\n    if (rawStakedBalance) {\r\n      return (\r\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\r\n          {t('Farming')}\r\n        </Text>\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <TokenWrapper>\r\n        {\r\n          isTokenOnly ? \r\n          <TokenImage token={token} width={64} height={64} /> : \r\n          <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} />\r\n        } \r\n      </TokenWrapper>\r\n      <div>\r\n        {handleRenderFarming()}\r\n        <Text bold>{label}</Text>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Farm\r\n"]},"metadata":{},"sourceType":"module"}