{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useCallback}from'react';import styled from'styled-components';import{Button,Text,ErrorIcon,ArrowUpIcon,MetamaskIcon,Flex,Box,Link,Spinner,Modal}from'@pancakeswap/uikit';import{registerToken}from'utils/wallet';import{useTranslation}from'contexts/Localization';import useActiveWeb3React from'hooks/useActiveWeb3React';import{wrappedCurrency}from'utils/wrappedCurrency';import{RowFixed}from'../Layout/Row';import{AutoColumn,ColumnCenter}from'../Layout/Column';import{getBscScanLink}from'../../utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\"])));var Section=styled(AutoColumn)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding: 24px;\\n\"])));var ConfirmedIcon=styled(ColumnCenter)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding: 24px 0;\\n\"])));function ConfirmationPendingContent(_ref){var pendingText=_ref.pendingText;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(ConfirmedIcon,{children:/*#__PURE__*/_jsx(Spinner,{})}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"12px\",justify:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"20px\",children:t('Waiting For Confirmation')}),/*#__PURE__*/_jsx(AutoColumn,{gap:\"12px\",justify:\"center\",children:/*#__PURE__*/_jsx(Text,{bold:true,small:true,textAlign:\"center\",children:pendingText})}),/*#__PURE__*/_jsx(Text,{small:true,color:\"textSubtle\",textAlign:\"center\",children:t('Confirm this transaction in your wallet')})]})]});}function TransactionSubmittedContent(_ref2){var _library$provider;var onDismiss=_ref2.onDismiss,chainId=_ref2.chainId,hash=_ref2.hash,currencyToAdd=_ref2.currencyToAdd;var _useActiveWeb3React=useActiveWeb3React(),library=_useActiveWeb3React.library;var _useTranslation2=useTranslation(),t=_useTranslation2.t;var token=wrappedCurrency(currencyToAdd,chainId);return/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsxs(Section,{children:[/*#__PURE__*/_jsx(ConfirmedIcon,{children:/*#__PURE__*/_jsx(ArrowUpIcon,{strokeWidth:0.5,width:\"90px\",color:\"primary\"})}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"12px\",justify:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"20px\",children:t('Transaction Submitted')}),chainId&&hash&&/*#__PURE__*/_jsx(Link,{external:true,small:true,href:getBscScanLink(hash,'transaction',chainId),children:t('View on BscScan')}),currencyToAdd&&(library===null||library===void 0?void 0:(_library$provider=library.provider)===null||_library$provider===void 0?void 0:_library$provider.isMetaMask)&&/*#__PURE__*/_jsx(Button,{variant:\"tertiary\",mt:\"12px\",width:\"fit-content\",onClick:function onClick(){return registerToken(token.address,token.symbol,token.decimals);},children:/*#__PURE__*/_jsxs(RowFixed,{children:[t('Add %asset% to Metamask',{asset:currencyToAdd.symbol}),/*#__PURE__*/_jsx(MetamaskIcon,{width:\"16px\",ml:\"6px\"})]})}),/*#__PURE__*/_jsx(Button,{onClick:onDismiss,mt:\"20px\",children:t('Close')})]})]})});}export function ConfirmationModalContent(_ref3){var bottomContent=_ref3.bottomContent,topContent=_ref3.topContent;return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(Box,{children:topContent()}),/*#__PURE__*/_jsx(Box,{children:bottomContent()})]});}export function TransactionErrorContent(_ref4){var message=_ref4.message,onDismiss=_ref4.onDismiss;var _useTranslation3=useTranslation(),t=_useTranslation3.t;return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsxs(AutoColumn,{justify:\"center\",children:[/*#__PURE__*/_jsx(ErrorIcon,{color:\"failure\",width:\"64px\"}),/*#__PURE__*/_jsx(Text,{color:\"failure\",style:{textAlign:'center',width:'85%'},children:message})]}),/*#__PURE__*/_jsx(Flex,{justifyContent:\"center\",pt:\"24px\",children:/*#__PURE__*/_jsx(Button,{onClick:onDismiss,children:t('Dismiss')})})]});}var TransactionConfirmationModal=function TransactionConfirmationModal(_ref5){var title=_ref5.title,onDismiss=_ref5.onDismiss,customOnDismiss=_ref5.customOnDismiss,attemptingTxn=_ref5.attemptingTxn,hash=_ref5.hash,pendingText=_ref5.pendingText,content=_ref5.content,currencyToAdd=_ref5.currencyToAdd;var _useActiveWeb3React2=useActiveWeb3React(),chainId=_useActiveWeb3React2.chainId;var handleDismiss=useCallback(function(){if(customOnDismiss){customOnDismiss();}onDismiss();},[customOnDismiss,onDismiss]);if(!chainId)return null;return/*#__PURE__*/_jsx(Modal,{title:title,headerBackground:\"gradients.cardHeader\",onDismiss:handleDismiss,children:attemptingTxn?/*#__PURE__*/_jsx(ConfirmationPendingContent,{pendingText:pendingText}):hash?/*#__PURE__*/_jsx(TransactionSubmittedContent,{chainId:chainId,hash:hash,onDismiss:onDismiss,currencyToAdd:currencyToAdd}):content()});};export default TransactionConfirmationModal;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/components/TransactionConfirmationModal/index.tsx"],"names":["React","useCallback","styled","Button","Text","ErrorIcon","ArrowUpIcon","MetamaskIcon","Flex","Box","Link","Spinner","Modal","registerToken","useTranslation","useActiveWeb3React","wrappedCurrency","RowFixed","AutoColumn","ColumnCenter","getBscScanLink","Wrapper","div","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","t","TransactionSubmittedContent","onDismiss","chainId","hash","currencyToAdd","library","token","provider","isMetaMask","address","symbol","decimals","asset","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","message","textAlign","width","TransactionConfirmationModal","title","customOnDismiss","attemptingTxn","content","handleDismiss"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react'\r\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Button,\r\n  Text,\r\n  ErrorIcon,\r\n  ArrowUpIcon,\r\n  MetamaskIcon,\r\n  Flex,\r\n  Box,\r\n  Link,\r\n  Spinner,\r\n  Modal,\r\n  InjectedModalProps,\r\n} from '@pancakeswap/uikit'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { RowFixed } from '../Layout/Row'\r\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\r\nimport { getBscScanLink } from '../../utils'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`\r\nconst Section = styled(AutoColumn)`\r\n  padding: 24px;\r\n`\r\n\r\nconst ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 24px 0;\r\n`\r\n\r\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <ConfirmedIcon>\r\n        <Spinner />\r\n      </ConfirmedIcon>\r\n      <AutoColumn gap=\"12px\" justify=\"center\">\r\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <Text bold small textAlign=\"center\">\r\n            {pendingText}\r\n          </Text>\r\n        </AutoColumn>\r\n        <Text small color=\"textSubtle\" textAlign=\"center\">\r\n          {t('Confirm this transaction in your wallet')}\r\n        </Text>\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nfunction TransactionSubmittedContent({\r\n  onDismiss,\r\n  chainId,\r\n  hash,\r\n  currencyToAdd,\r\n}: {\r\n  onDismiss: () => void\r\n  hash: string | undefined\r\n  chainId: ChainId\r\n  currencyToAdd?: Currency | undefined\r\n}) {\r\n  const { library } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ConfirmedIcon>\r\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\r\n        </ConfirmedIcon>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\r\n          {chainId && hash && (\r\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\r\n              {t('View on BscScan')}\r\n            </Link>\r\n          )}\r\n          {currencyToAdd && library?.provider?.isMetaMask && (\r\n            <Button\r\n              variant=\"tertiary\"\r\n              mt=\"12px\"\r\n              width=\"fit-content\"\r\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\r\n            >\r\n              <RowFixed>\r\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\r\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\r\n              </RowFixed>\r\n            </Button>\r\n          )}\r\n          <Button   onClick={onDismiss} mt=\"20px\">\r\n            {t('Close')}\r\n          </Button>\r\n        </AutoColumn>\r\n      </Section>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport function ConfirmationModalContent({\r\n  bottomContent,\r\n  topContent,\r\n}: {\r\n  topContent: () => React.ReactNode\r\n  bottomContent: () => React.ReactNode\r\n}) {\r\n  return (\r\n    <Wrapper>\r\n      <Box>{topContent()}</Box>\r\n      <Box>{bottomContent()}</Box>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn justify=\"center\">\r\n        <ErrorIcon color=\"failure\" width=\"64px\" />\r\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\r\n          {message}\r\n        </Text>\r\n      </AutoColumn>\r\n\r\n      <Flex justifyContent=\"center\" pt=\"24px\">\r\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\ninterface ConfirmationModalProps {\r\n  title: string\r\n  customOnDismiss?: () => void\r\n  hash: string | undefined\r\n  content: () => React.ReactNode\r\n  attemptingTxn: boolean\r\n  pendingText: string\r\n  currencyToAdd?: Currency | undefined\r\n}\r\n\r\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\r\n  title,\r\n  onDismiss,\r\n  customOnDismiss,\r\n  attemptingTxn,\r\n  hash,\r\n  pendingText,\r\n  content,\r\n  currencyToAdd,\r\n}) => {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const handleDismiss = useCallback(() => {\r\n    if (customOnDismiss) {\r\n      customOnDismiss()\r\n    }\r\n    onDismiss()\r\n  }, [customOnDismiss, onDismiss])\r\n\r\n  if (!chainId) return null\r\n\r\n  return (\r\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\r\n      {attemptingTxn ? (\r\n        <ConfirmationPendingContent pendingText={pendingText} />\r\n      ) : hash ? (\r\n        <TransactionSubmittedContent\r\n          chainId={chainId}\r\n          hash={hash}\r\n          onDismiss={onDismiss}\r\n          currencyToAdd={currencyToAdd}\r\n        />\r\n      ) : (\r\n        content()\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionConfirmationModal\r\n"]},"metadata":{},"sourceType":"module"}