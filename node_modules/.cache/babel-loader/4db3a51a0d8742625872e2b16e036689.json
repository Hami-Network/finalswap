{"ast":null,"code":"import _slicedToArray from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useMemo,useState}from'react';import styled from'styled-components';import{TradeType}from'@pancakeswap/sdk';import{Button,Text,AutoRenewIcon}from'@pancakeswap/uikit';import{Field}from'state/swap/actions';import{computeSlippageAdjustedAmounts,computeTradePriceBreakdown,formatExecutionPrice,warningSeverity}from'utils/prices';import{AutoColumn}from'components/Layout/Column';import QuestionHelper from'components/QuestionHelper';import{AutoRow,RowBetween,RowFixed}from'components/Layout/Row';import FormattedPriceImpact from'./FormattedPriceImpact';import{StyledBalanceMaxMini,SwapCallbackError}from'./styleds';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SwapModalFooterContainer=styled(AutoColumn)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-top: 24px;\\n  padding: 16px;\\n  border-radius: \",\";\\n  border: 1px solid \",\";\\n  background-color: \",\";\\n\"])),function(_ref){var theme=_ref.theme;return theme.radii.default;},function(_ref2){var theme=_ref2.theme;return theme.colors.cardBorder;},function(_ref3){var theme=_ref3.theme;return theme.colors.background;});export default function SwapModalFooter(_ref4){var _slippageAdjustedAmou,_slippageAdjustedAmou2,_slippageAdjustedAmou3,_slippageAdjustedAmou4;var trade=_ref4.trade,onConfirm=_ref4.onConfirm,allowedSlippage=_ref4.allowedSlippage,swapErrorMessage=_ref4.swapErrorMessage,disabledConfirm=_ref4.disabledConfirm;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showInverted=_useState2[0],setShowInverted=_useState2[1];var slippageAdjustedAmounts=useMemo(function(){return computeSlippageAdjustedAmounts(trade,allowedSlippage);},[allowedSlippage,trade]);var _useMemo=useMemo(function(){return computeTradePriceBreakdown(trade);},[trade]),priceImpactWithoutFee=_useMemo.priceImpactWithoutFee,realizedLPFee=_useMemo.realizedLPFee;var severity=warningSeverity(priceImpactWithoutFee);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(SwapModalFooterContainer,{children:[/*#__PURE__*/_jsxs(RowBetween,{align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Price\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"14px\",style:{justifyContent:'center',alignItems:'center',display:'flex',textAlign:'right',paddingLeft:'10px'},children:[formatExecutionPrice(trade,showInverted),/*#__PURE__*/_jsx(StyledBalanceMaxMini,{onClick:function onClick(){return setShowInverted(!showInverted);},children:/*#__PURE__*/_jsx(AutoRenewIcon,{width:\"14px\"})})]})]}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:trade.tradeType===TradeType.EXACT_INPUT?'Minimum received':'Maximum sold'}),/*#__PURE__*/_jsx(QuestionHelper,{text:\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\",ml:\"4px\"})]}),/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:trade.tradeType===TradeType.EXACT_INPUT?(_slippageAdjustedAmou=(_slippageAdjustedAmou2=slippageAdjustedAmounts[Field.OUTPUT])===null||_slippageAdjustedAmou2===void 0?void 0:_slippageAdjustedAmou2.toSignificant(4))!==null&&_slippageAdjustedAmou!==void 0?_slippageAdjustedAmou:'-':(_slippageAdjustedAmou3=(_slippageAdjustedAmou4=slippageAdjustedAmounts[Field.INPUT])===null||_slippageAdjustedAmou4===void 0?void 0:_slippageAdjustedAmou4.toSignificant(4))!==null&&_slippageAdjustedAmou3!==void 0?_slippageAdjustedAmou3:'-'}),/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",marginLeft:\"4px\",children:trade.tradeType===TradeType.EXACT_INPUT?trade.outputAmount.currency.symbol:trade.inputAmount.currency.symbol})]})]}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Price Impact\"}),/*#__PURE__*/_jsx(QuestionHelper,{text:\"The difference between the market price and your price due to trade size.\",ml:\"4px\"})]}),/*#__PURE__*/_jsx(FormattedPriceImpact,{priceImpact:priceImpactWithoutFee})]}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Liquidity Provider Fee\"}),/*#__PURE__*/_jsx(QuestionHelper,{text:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{mb:\"12px\",children:\"For each trade a 0.22% fee is paid\"}),/*#__PURE__*/_jsx(Text,{children:\"- 0.15% to LP token holders\"}),/*#__PURE__*/_jsx(Text,{children:\"- 0.05% to the Treasury\"}),/*#__PURE__*/_jsx(Text,{children:\"- 0.02% towards CAKE buyback and burn\"})]}),ml:\"4px\"})]}),/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:realizedLPFee?\"\".concat(realizedLPFee===null||realizedLPFee===void 0?void 0:realizedLPFee.toSignificant(6),\" \").concat(trade.inputAmount.currency.symbol):'-'})]})]}),/*#__PURE__*/_jsxs(AutoRow,{children:[/*#__PURE__*/_jsx(Button,{variant:severity>2?'danger':'primary',onClick:onConfirm,disabled:disabledConfirm,mt:\"12px\",id:\"confirm-swap-or-send\",width:\"100%\",children:severity>2?'Swap Anyway':'Confirm Swap'}),swapErrorMessage?/*#__PURE__*/_jsx(SwapCallbackError,{error:swapErrorMessage}):null]})]});}","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Swap/components/SwapModalFooter.tsx"],"names":["React","useMemo","useState","styled","TradeType","Button","Text","AutoRenewIcon","Field","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","formatExecutionPrice","warningSeverity","AutoColumn","QuestionHelper","AutoRow","RowBetween","RowFixed","FormattedPriceImpact","StyledBalanceMaxMini","SwapCallbackError","SwapModalFooterContainer","theme","radii","default","colors","cardBorder","background","SwapModalFooter","trade","onConfirm","allowedSlippage","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","slippageAdjustedAmounts","priceImpactWithoutFee","realizedLPFee","severity","justifyContent","alignItems","display","textAlign","paddingLeft","tradeType","EXACT_INPUT","OUTPUT","toSignificant","INPUT","outputAmount","currency","symbol","inputAmount"],"mappings":"wVAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,CAAyBC,QAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAAgBC,SAAhB,KAAiC,kBAAjC,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,aAAvB,KAA4C,oBAA5C,CACA,OAASC,KAAT,KAAsB,oBAAtB,CACA,OACEC,8BADF,CAEEC,0BAFF,CAGEC,oBAHF,CAIEC,eAJF,KAKO,cALP,CAMA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,CACA,OAASC,OAAT,CAAkBC,UAAlB,CAA8BC,QAA9B,KAA8C,uBAA9C,CACA,MAAOC,CAAAA,oBAAP,KAAiC,wBAAjC,CACA,OAASC,oBAAT,CAA+BC,iBAA/B,KAAwD,WAAxD,C,6IAEA,GAAMC,CAAAA,wBAAwB,CAAGlB,MAAM,CAACU,UAAD,CAAT,qLAGX,kBAAGS,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,KAAN,CAAYC,OAA3B,EAHW,CAIR,mBAAGF,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACG,MAAN,CAAaC,UAA5B,EAJQ,CAKR,mBAAGJ,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACG,MAAN,CAAaE,UAA5B,EALQ,CAA9B,CAQA,cAAe,SAASC,CAAAA,eAAT,OAYZ,mGAXDC,CAAAA,KAWC,OAXDA,KAWC,CAVDC,SAUC,OAVDA,SAUC,CATDC,eASC,OATDA,eASC,CARDC,gBAQC,OARDA,gBAQC,CAPDC,eAOC,OAPDA,eAOC,CACD,cAAwC/B,QAAQ,CAAU,KAAV,CAAhD,wCAAOgC,YAAP,eAAqBC,eAArB,eACA,GAAMC,CAAAA,uBAAuB,CAAGnC,OAAO,CACrC,iBAAMQ,CAAAA,8BAA8B,CAACoB,KAAD,CAAQE,eAAR,CAApC,EADqC,CAErC,CAACA,eAAD,CAAkBF,KAAlB,CAFqC,CAAvC,CAIA,aAAiD5B,OAAO,CAAC,iBAAMS,CAAAA,0BAA0B,CAACmB,KAAD,CAAhC,EAAD,CAA0C,CAACA,KAAD,CAA1C,CAAxD,CAAQQ,qBAAR,UAAQA,qBAAR,CAA+BC,aAA/B,UAA+BA,aAA/B,CACA,GAAMC,CAAAA,QAAQ,CAAG3B,eAAe,CAACyB,qBAAD,CAAhC,CAEA,mBACE,wCACE,MAAC,wBAAD,yBACE,MAAC,UAAD,EAAY,KAAK,CAAC,QAAlB,wBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,mBADF,cAEE,MAAC,IAAD,EACE,QAAQ,CAAC,MADX,CAEE,KAAK,CAAE,CACLG,cAAc,CAAE,QADX,CAELC,UAAU,CAAE,QAFP,CAGLC,OAAO,CAAE,MAHJ,CAILC,SAAS,CAAE,OAJN,CAKLC,WAAW,CAAE,MALR,CAFT,WAUGjC,oBAAoB,CAACkB,KAAD,CAAQK,YAAR,CAVvB,cAWE,KAAC,oBAAD,EAAsB,OAAO,CAAE,yBAAMC,CAAAA,eAAe,CAAC,CAACD,YAAF,CAArB,EAA/B,uBACE,KAAC,aAAD,EAAe,KAAK,CAAC,MAArB,EADF,EAXF,GAFF,GADF,cAoBE,MAAC,UAAD,yBACE,MAAC,QAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,UACGL,KAAK,CAACgB,SAAN,GAAoBzC,SAAS,CAAC0C,WAA9B,CAA4C,kBAA5C,CAAiE,cADpE,EADF,cAIE,KAAC,cAAD,EACE,IAAI,CAAC,sGADP,CAEE,EAAE,CAAC,KAFL,EAJF,GADF,cAUE,MAAC,QAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,UACGjB,KAAK,CAACgB,SAAN,GAAoBzC,SAAS,CAAC0C,WAA9B,gDACGV,uBAAuB,CAAC5B,KAAK,CAACuC,MAAP,CAD1B,iDACG,uBAAuCC,aAAvC,CAAqD,CAArD,CADH,+DAC8D,GAD9D,iDAEGZ,uBAAuB,CAAC5B,KAAK,CAACyC,KAAP,CAF1B,iDAEG,uBAAsCD,aAAtC,CAAoD,CAApD,CAFH,iEAE6D,GAHhE,EADF,cAME,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,UAAU,CAAC,KAAjC,UACGnB,KAAK,CAACgB,SAAN,GAAoBzC,SAAS,CAAC0C,WAA9B,CACGjB,KAAK,CAACqB,YAAN,CAAmBC,QAAnB,CAA4BC,MAD/B,CAEGvB,KAAK,CAACwB,WAAN,CAAkBF,QAAlB,CAA2BC,MAHjC,EANF,GAVF,GApBF,cA2CE,MAAC,UAAD,yBACE,MAAC,QAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,0BADF,cAEE,KAAC,cAAD,EAAgB,IAAI,CAAC,2EAArB,CAAiG,EAAE,CAAC,KAApG,EAFF,GADF,cAKE,KAAC,oBAAD,EAAsB,WAAW,CAAEf,qBAAnC,EALF,GA3CF,cAkDE,MAAC,UAAD,yBACE,MAAC,QAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,oCADF,cAEE,KAAC,cAAD,EACE,IAAI,cACF,wCACE,KAAC,IAAD,EAAM,EAAE,CAAC,MAAT,gDADF,cAEE,KAAC,IAAD,0CAFF,cAGE,KAAC,IAAD,sCAHF,cAIE,KAAC,IAAD,oDAJF,GAFJ,CASE,EAAE,CAAC,KATL,EAFF,GADF,cAeE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,UACGC,aAAa,WAAMA,aAAN,SAAMA,aAAN,iBAAMA,aAAa,CAAEU,aAAf,CAA6B,CAA7B,CAAN,aAAyCnB,KAAK,CAACwB,WAAN,CAAkBF,QAAlB,CAA2BC,MAApE,EAA+E,GAD/F,EAfF,GAlDF,GADF,cAwEE,MAAC,OAAD,yBACE,KAAC,MAAD,EACE,OAAO,CAAEb,QAAQ,CAAG,CAAX,CAAe,QAAf,CAA0B,SADrC,CAEE,OAAO,CAAET,SAFX,CAGE,QAAQ,CAAEG,eAHZ,CAIE,EAAE,CAAC,MAJL,CAKE,EAAE,CAAC,sBALL,CAME,KAAK,CAAC,MANR,UAQGM,QAAQ,CAAG,CAAX,CAAe,aAAf,CAA+B,cARlC,EADF,CAYGP,gBAAgB,cAAG,KAAC,iBAAD,EAAmB,KAAK,CAAEA,gBAA1B,EAAH,CAAoD,IAZvE,GAxEF,GADF,CAyFD","sourcesContent":["import React, { useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { Field } from 'state/swap/actions'\r\nimport {\r\n  computeSlippageAdjustedAmounts,\r\n  computeTradePriceBreakdown,\r\n  formatExecutionPrice,\r\n  warningSeverity,\r\n} from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\r\n\r\nconst SwapModalFooterContainer = styled(AutoColumn)`\r\n  margin-top: 24px;\r\n  padding: 16px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport default function SwapModalFooter({\r\n  trade,\r\n  onConfirm,\r\n  allowedSlippage,\r\n  swapErrorMessage,\r\n  disabledConfirm,\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  onConfirm: () => void\r\n  swapErrorMessage: string | undefined\r\n  disabledConfirm: boolean\r\n}) {\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n  const slippageAdjustedAmounts = useMemo(\r\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\r\n    [allowedSlippage, trade],\r\n  )\r\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const severity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  return (\r\n    <>\r\n      <SwapModalFooterContainer>\r\n        <RowBetween align=\"center\">\r\n          <Text fontSize=\"14px\">Price</Text>\r\n          <Text\r\n            fontSize=\"14px\"\r\n            style={{\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              textAlign: 'right',\r\n              paddingLeft: '10px',\r\n            }}\r\n          >\r\n            {formatExecutionPrice(trade, showInverted)}\r\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n              <AutoRenewIcon width=\"14px\" />\r\n            </StyledBalanceMaxMini>\r\n          </Text>\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\r\n            </Text>\r\n            <QuestionHelper\r\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\r\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\r\n            </Text>\r\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? trade.outputAmount.currency.symbol\r\n                : trade.inputAmount.currency.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">Price Impact</Text>\r\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\r\n          </RowFixed>\r\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\r\n            <QuestionHelper\r\n              text={\r\n                <>\r\n                  <Text mb=\"12px\">For each trade a 0.22% fee is paid</Text>\r\n                  <Text>- 0.15% to LP token holders</Text>\r\n                  <Text>- 0.05% to the Treasury</Text>\r\n                  <Text>- 0.02% towards CAKE buyback and burn</Text>\r\n                </>\r\n              }\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n          </Text>\r\n        </RowBetween>\r\n      </SwapModalFooterContainer>\r\n\r\n      <AutoRow>\r\n        <Button\r\n          variant={severity > 2 ? 'danger' : 'primary'}\r\n          onClick={onConfirm}\r\n          disabled={disabledConfirm}\r\n          mt=\"12px\"\r\n          id=\"confirm-swap-or-send\"\r\n          width=\"100%\"\r\n        >\r\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\r\n        </Button>\r\n\r\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n      </AutoRow>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}