{"ast":null,"code":"import _slicedToArray from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useState}from'react';import styled from'styled-components';import{Card,Flex,Text,Skeleton}from'@pancakeswap/uikit';import{getBscScanLink}from'utils';import{useTranslation}from'contexts/Localization';import ExpandableSectionButton from'components/ExpandableSectionButton';import{BASE_ADD_LIQUIDITY_URL,BASE_URL}from'config';import{getAddress}from'utils/addressHelpers';import getLiquidityUrlPathParts from'utils/getLiquidityUrlPathParts';import DetailsSection from'./DetailsSection';import CardHeading from'./CardHeading';import CardActionsContainer from'./CardActionsContainer';import ApyButton from'./ApyButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  align-self: baseline;\\n  > div {\\n    background: #221779;\\n  }\\n\"])));var FarmCardInnerContainer=styled(Flex)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  flex-direction: column;\\n  justify-content: space-around;\\n  padding: 24px;\\n\"])));var ExpandingWrapper=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding: 24px;\\n  border-top: 2px solid \",\";\\n  overflow: hidden;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.cardBorder;});var FarmCard=function FarmCard(_ref2){var farm=_ref2.farm,displayApr=_ref2.displayApr,removed=_ref2.removed,cakePrice=_ref2.cakePrice,account=_ref2.account;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showExpandableSection=_useState2[0],setShowExpandableSection=_useState2[1];var totalValueFormatted=farm.liquidity&&farm.liquidity.gt(0)?\"$\".concat(farm.liquidity.toNumber().toLocaleString(undefined,{maximumFractionDigits:0})):'';var lpLabel=farm.lpSymbol&&farm.lpSymbol.toUpperCase().replace('PANCAKE','');var earnLabel=farm.dual?farm.dual.earnLabel:t('LOKI');var liquidityUrlPathParts=getLiquidityUrlPathParts({quoteTokenAddress:farm.quoteToken.address,tokenAddress:farm.token.address});var addLiquidityUrl=farm.isTokenOnly?\"\".concat(BASE_URL,\"/swap?outputCurrency=\").concat(getAddress(farm.token.address)):\"\".concat(BASE_ADD_LIQUIDITY_URL,\"/\").concat(liquidityUrlPathParts);var lpAddress=farm.isTokenOnly?getAddress(farm.token.address):getAddress(farm.lpAddresses);var isPromotedFarm=farm.token.symbol==='LOKI';return/*#__PURE__*/_jsxs(StyledCard,{isActive:isPromotedFarm,children:[/*#__PURE__*/_jsxs(FarmCardInnerContainer,{children:[/*#__PURE__*/_jsx(CardHeading,{lpLabel:lpLabel,multiplier:farm.multiplier,isCommunityFarm:farm.isCommunity,token:farm.token,quoteToken:farm.quoteToken,isTokenOnly:farm.isTokenOnly,depositfee:farm.depositfee}),!removed&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Text,{children:[t('APR'),\":\"]}),/*#__PURE__*/_jsx(Text,{bold:true,style:{display:'flex',alignItems:'center'},children:farm.apr?/*#__PURE__*/_jsx(ApyButton,{variant:\"text-and-button\",pid:farm.pid,lpSymbol:farm.isTokenOnly?farm.token.symbol:farm.lpSymbol,multiplier:farm.multiplier,lpLabel:lpLabel,addLiquidityUrl:addLiquidityUrl,cakePrice:cakePrice,apr:farm.apr,displayApr:displayApr,isTokenOnly:farm.isTokenOnly}):/*#__PURE__*/_jsx(Skeleton,{height:24,width:80})})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Text,{children:[t('Earn'),\":\"]}),/*#__PURE__*/_jsx(Text,{bold:true,children:earnLabel})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Text,{children:[t('Deposit Fee'),\":\"]}),farm.depositfee?/*#__PURE__*/_jsx(Text,{bold:true,children:farm.depositfee}):/*#__PURE__*/_jsx(Skeleton,{height:24,width:80})]}),/*#__PURE__*/_jsx(CardActionsContainer,{farm:farm,lpLabel:lpLabel,account:account,cakePrice:cakePrice,addLiquidityUrl:addLiquidityUrl})]}),/*#__PURE__*/_jsxs(ExpandingWrapper,{children:[/*#__PURE__*/_jsx(ExpandableSectionButton,{onClick:function onClick(){return setShowExpandableSection(!showExpandableSection);},expanded:showExpandableSection}),showExpandableSection&&/*#__PURE__*/_jsx(DetailsSection,{removed:removed,bscScanAddress:getBscScanLink(lpAddress,'address'),infoAddress:farm.isTokenOnly?\"https://pancakeswap.info/tokens/\".concat(lpAddress):\"https://pancakeswap.info/pool/\".concat(lpAddress),totalValueFormatted:totalValueFormatted,lpLabel:lpLabel,addLiquidityUrl:addLiquidityUrl,isTokenOnly:farm.isTokenOnly})]})]});};export default FarmCard;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Farms/components/FarmCard/FarmCard.tsx"],"names":["React","useState","styled","Card","Flex","Text","Skeleton","getBscScanLink","useTranslation","ExpandableSectionButton","BASE_ADD_LIQUIDITY_URL","BASE_URL","getAddress","getLiquidityUrlPathParts","DetailsSection","CardHeading","CardActionsContainer","ApyButton","StyledCard","FarmCardInnerContainer","ExpandingWrapper","div","theme","colors","cardBorder","FarmCard","farm","displayApr","removed","cakePrice","account","t","showExpandableSection","setShowExpandableSection","totalValueFormatted","liquidity","gt","toNumber","toLocaleString","undefined","maximumFractionDigits","lpLabel","lpSymbol","toUpperCase","replace","earnLabel","dual","liquidityUrlPathParts","quoteTokenAddress","quoteToken","address","tokenAddress","token","addLiquidityUrl","isTokenOnly","lpAddress","lpAddresses","isPromotedFarm","symbol","multiplier","isCommunity","depositfee","display","alignItems","apr","pid"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Card, Flex, Text, Skeleton } from '@pancakeswap/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { BASE_ADD_LIQUIDITY_URL, BASE_URL } from 'config'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apr?: number\r\n  lpRewardsApr?: number\r\n  liquidity?: BigNumber\r\n}\r\n\r\nconst StyledCard = styled(Card)`\r\n  align-self: baseline;\r\n  > div {\r\n    background: #221779;\r\n  }\r\n`\r\n\r\nconst FarmCardInnerContainer = styled(Flex)`\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div`\r\n  padding: 24px;\r\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  displayApr: string\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\r\n  const { t } = useTranslation()\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  const totalValueFormatted =\r\n    farm.liquidity && farm.liquidity.gt(0)\r\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n      : ''\r\n\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('LOKI')\r\n\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: farm.quoteToken.address,\r\n    tokenAddress: farm.token.address,\r\n  })\r\n  const addLiquidityUrl = farm.isTokenOnly ? `${BASE_URL}/swap?outputCurrency=${getAddress(farm.token.address)}` : `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n  const lpAddress = farm.isTokenOnly ? getAddress(farm.token.address) : getAddress(farm.lpAddresses)\r\n  const isPromotedFarm = farm.token.symbol === 'LOKI'\r\n\r\n  return (\r\n    <StyledCard isActive={isPromotedFarm}>\r\n      <FarmCardInnerContainer>\r\n        <CardHeading\r\n          lpLabel={lpLabel}\r\n          multiplier={farm.multiplier}\r\n          isCommunityFarm={farm.isCommunity}\r\n          token={farm.token}\r\n          quoteToken={farm.quoteToken}\r\n          isTokenOnly={farm.isTokenOnly}\r\n          depositfee={farm.depositfee}\r\n        />\r\n        {!removed && (\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Text>{t('APR')}:</Text>\r\n            <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n              {farm.apr ? (\r\n                <ApyButton\r\n                  variant=\"text-and-button\"\r\n                  pid={farm.pid}\r\n                  lpSymbol={farm.isTokenOnly ? farm.token.symbol : farm.lpSymbol}\r\n                  multiplier={farm.multiplier}\r\n                  lpLabel={lpLabel}\r\n                  addLiquidityUrl={addLiquidityUrl}\r\n                  cakePrice={cakePrice}\r\n                  apr={farm.apr}\r\n                  displayApr={displayApr}\r\n                  isTokenOnly={farm.isTokenOnly}\r\n                />\r\n              ) : (\r\n                <Skeleton height={24} width={80} />\r\n              )}\r\n            </Text>\r\n          </Flex>\r\n        )}\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{t('Earn')}:</Text>\r\n          <Text bold>{earnLabel}</Text>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{t('Deposit Fee')}:</Text>\r\n          {farm.depositfee ? (\r\n              <Text bold>{farm.depositfee}</Text>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n          )}\r\n        </Flex>\r\n        <CardActionsContainer\r\n          farm={farm}\r\n          lpLabel={lpLabel}\r\n          account={account}\r\n          cakePrice={cakePrice}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </FarmCardInnerContainer>\r\n\r\n      <ExpandingWrapper>\r\n        <ExpandableSectionButton\r\n          onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n          expanded={showExpandableSection}\r\n        />\r\n        {showExpandableSection && (\r\n          <DetailsSection\r\n            removed={removed}\r\n            bscScanAddress={getBscScanLink(lpAddress, 'address')}\r\n            infoAddress={ farm.isTokenOnly ? `https://pancakeswap.info/tokens/${lpAddress}` : `https://pancakeswap.info/pool/${lpAddress}`}\r\n            totalValueFormatted={totalValueFormatted}\r\n            lpLabel={lpLabel}\r\n            addLiquidityUrl={addLiquidityUrl}\r\n            isTokenOnly={farm.isTokenOnly}\r\n          />\r\n        )}\r\n      </ExpandingWrapper>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n"]},"metadata":{},"sourceType":"module"}