{"ast":null,"code":"import{createReducer}from'@reduxjs/toolkit';import{updateBlockNumber}from'./actions';var initialState={blockNumber:{}};export default createReducer(initialState,function(builder){return builder.addCase(updateBlockNumber,function(state,action){var _action$payload=action.payload,chainId=_action$payload.chainId,blockNumber=_action$payload.blockNumber;if(typeof state.blockNumber[chainId]!=='number'){state.blockNumber[chainId]=blockNumber;}else{state.blockNumber[chainId]=Math.max(blockNumber,state.blockNumber[chainId]);}});});","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/state/application/reducer.ts"],"names":["createReducer","updateBlockNumber","initialState","blockNumber","builder","addCase","state","action","payload","chainId","Math","max"],"mappings":"AAAA,OAASA,aAAT,KAA8B,kBAA9B,CACA,OAASC,iBAAT,KAAkC,WAAlC,CAMA,GAAMC,CAAAA,YAA8B,CAAG,CACrCC,WAAW,CAAE,EADwB,CAAvC,CAIA,cAAeH,CAAAA,aAAa,CAACE,YAAD,CAAe,SAACE,OAAD,QACzCA,CAAAA,OAAO,CAACC,OAAR,CAAgBJ,iBAAhB,CAAmC,SAACK,KAAD,CAAQC,MAAR,CAAmB,CACpD,oBAAiCA,MAAM,CAACC,OAAxC,CAAQC,OAAR,iBAAQA,OAAR,CAAiBN,WAAjB,iBAAiBA,WAAjB,CACA,GAAI,MAAOG,CAAAA,KAAK,CAACH,WAAN,CAAkBM,OAAlB,CAAP,GAAsC,QAA1C,CAAoD,CAClDH,KAAK,CAACH,WAAN,CAAkBM,OAAlB,EAA6BN,WAA7B,CACD,CAFD,IAEO,CACLG,KAAK,CAACH,WAAN,CAAkBM,OAAlB,EAA6BC,IAAI,CAACC,GAAL,CAASR,WAAT,CAAsBG,KAAK,CAACH,WAAN,CAAkBM,OAAlB,CAAtB,CAA7B,CACD,CACF,CAPD,CADyC,EAAf,CAA5B","sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\r\nimport { updateBlockNumber } from './actions'\r\n\r\nexport interface ApplicationState {\r\n  readonly blockNumber: { readonly [chainId: number]: number }\r\n}\r\n\r\nconst initialState: ApplicationState = {\r\n  blockNumber: {},\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder.addCase(updateBlockNumber, (state, action) => {\r\n    const { chainId, blockNumber } = action.payload\r\n    if (typeof state.blockNumber[chainId] !== 'number') {\r\n      state.blockNumber[chainId] = blockNumber\r\n    } else {\r\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\r\n    }\r\n  }),\r\n)\r\n"]},"metadata":{},"sourceType":"module"}