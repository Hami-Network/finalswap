{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/97154/swap/hami/LokiswapUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState,useCallback}from'react';import styled from'styled-components';import BigNumber from'bignumber.js';import{Button,Flex,Text}from'@pancakeswap/uikit';import{getAddress}from'utils/addressHelpers';import{useAppDispatch}from'state';import{fetchFarmUserDataAsync}from'state/farms';import{useTranslation}from'contexts/Localization';import{useERC20}from'hooks/useContract';import ConnectWalletButton from'components/ConnectWalletButton';import StakeAction from'./StakeAction';import HarvestAction from'./HarvestAction';import useApproveFarm from'../../hooks/useApproveFarm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Action=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding-top: 16px;\\n\"])));var CardActions=function CardActions(_ref){var farm=_ref.farm,account=_ref.account,addLiquidityUrl=_ref.addLiquidityUrl,cakePrice=_ref.cakePrice,lpLabel=_ref.lpLabel;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),requestedApproval=_useState2[0],setRequestedApproval=_useState2[1];var pid=farm.pid,lpAddresses=farm.lpAddresses,isTokenOnly=farm.isTokenOnly,token=farm.token;var _ref2=farm.userData||{},_ref2$allowance=_ref2.allowance,allowanceAsString=_ref2$allowance===void 0?0:_ref2$allowance,_ref2$tokenBalance=_ref2.tokenBalance,tokenBalanceAsString=_ref2$tokenBalance===void 0?0:_ref2$tokenBalance,_ref2$stakedBalance=_ref2.stakedBalance,stakedBalanceAsString=_ref2$stakedBalance===void 0?0:_ref2$stakedBalance,_ref2$earnings=_ref2.earnings,earningsAsString=_ref2$earnings===void 0?0:_ref2$earnings,isabletoharvest=_ref2.isabletoharvest;var allowance=new BigNumber(allowanceAsString);var tokenBalance=new BigNumber(tokenBalanceAsString);var stakedBalance=new BigNumber(stakedBalanceAsString);var earnings=new BigNumber(earningsAsString);var lpAddress=isTokenOnly?getAddress(token.address):getAddress(lpAddresses);var isApproved=account&&allowance&&allowance.isGreaterThan(0);var dispatch=useAppDispatch();var lpContract=useERC20(lpAddress);var _useApproveFarm=useApproveFarm(lpContract),onApprove=_useApproveFarm.onApprove;var handleApprove=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setRequestedApproval(true);_context.next=4;return onApprove();case 4:dispatch(fetchFarmUserDataAsync({account:account,pids:[pid]}));setRequestedApproval(false);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);})),[onApprove,dispatch,account,pid]);var renderApprovalOrStakeButton=function renderApprovalOrStakeButton(){return isApproved?/*#__PURE__*/_jsx(StakeAction,{stakedBalance:stakedBalance,tokenBalance:tokenBalance,tokenName:farm.lpSymbol,pid:pid,apr:farm.apr,lpLabel:lpLabel,cakePrice:cakePrice,addLiquidityUrl:addLiquidityUrl,isTokenOnly:farm.isTokenOnly,decimals:farm.isTokenOnly?token.decimals:18}):/*#__PURE__*/_jsx(Button,{mt:\"8px\",width:\"100%\",disabled:requestedApproval,onClick:handleApprove,children:t('Enable Contract')});};return/*#__PURE__*/_jsxs(Action,{children:[/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"secondary\",fontSize:\"12px\",pr:\"4px\",children:\"LOKI\"}),/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"textSubtle\",fontSize:\"12px\",children:t('Earned')})]}),/*#__PURE__*/_jsx(HarvestAction,{earnings:earnings,pid:pid,isabletoharvest:isabletoharvest}),/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"secondary\",fontSize:\"12px\",pr:\"4px\",children:farm.lpSymbol}),/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"textSubtle\",fontSize:\"12px\",children:t('Staked')})]}),!account?/*#__PURE__*/_jsx(ConnectWalletButton,{mt:\"8px\",width:\"100%\"}):renderApprovalOrStakeButton()]});};export default CardActions;","map":{"version":3,"sources":["C:/Users/97154/swap/hami/LokiswapUI/src/views/Farms/components/FarmCard/CardActionsContainer.tsx"],"names":["React","useState","useCallback","styled","BigNumber","Button","Flex","Text","getAddress","useAppDispatch","fetchFarmUserDataAsync","useTranslation","useERC20","ConnectWalletButton","StakeAction","HarvestAction","useApproveFarm","Action","div","CardActions","farm","account","addLiquidityUrl","cakePrice","lpLabel","t","requestedApproval","setRequestedApproval","pid","lpAddresses","isTokenOnly","token","userData","allowance","allowanceAsString","tokenBalance","tokenBalanceAsString","stakedBalance","stakedBalanceAsString","earnings","earningsAsString","isabletoharvest","lpAddress","address","isApproved","isGreaterThan","dispatch","lpContract","onApprove","handleApprove","pids","console","error","renderApprovalOrStakeButton","lpSymbol","apr","decimals"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text } from '@pancakeswap/uikit'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { Farm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\nimport useApproveFarm from '../../hooks/useApproveFarm'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apr?: number\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  account?: string\r\n  addLiquidityUrl?: string\r\n  cakePrice?: BigNumber\r\n  lpLabel?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl, cakePrice, lpLabel }) => {\r\n  const { t } = useTranslation()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, isTokenOnly, token } = farm\r\n  const {\r\n    allowance: allowanceAsString = 0,\r\n    tokenBalance: tokenBalanceAsString = 0,\r\n    stakedBalance: stakedBalanceAsString = 0,\r\n    earnings: earningsAsString = 0,\r\n    isabletoharvest,\r\n  } = farm.userData || {}\r\n  const allowance = new BigNumber(allowanceAsString)\r\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\r\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\r\n  const earnings = new BigNumber(earningsAsString)\r\n  const lpAddress = isTokenOnly ? getAddress(token.address) : getAddress(lpAddresses)\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const lpContract = useERC20(lpAddress)\r\n\r\n  const { onApprove } = useApproveFarm(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, dispatch, account, pid])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={farm.lpSymbol}\r\n        pid={pid}\r\n        apr={farm.apr}\r\n        lpLabel={lpLabel}\r\n        cakePrice={cakePrice}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        isTokenOnly={farm.isTokenOnly}\r\n        decimals={farm.isTokenOnly ? token.decimals : 18}\r\n      />\r\n    ) : (\r\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\r\n        {t('Enable Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n          LOKI\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} isabletoharvest={isabletoharvest}/>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n          {farm.lpSymbol}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions"]},"metadata":{},"sourceType":"module"}